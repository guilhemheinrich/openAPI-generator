{
    "openapi": "3.0.0",
    "info": {
        "title": "Deepomics",
        "description": "",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": ""
        }
    ],
    "paths": {
        "/adapter_types": {
            "get": {
                "operationId": "getAdapterTypeCollection",
                "tags": [
                    "AdapterType"
                ],
                "responses": {
                    "200": {
                        "description": "AdapterType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdapterType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdapterType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AdapterType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of AdapterType resources.",
                "description": "Retrieves the collection of AdapterType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/adapter_types/{id}": {
            "get": {
                "operationId": "getAdapterTypeItem",
                "tags": [
                    "AdapterType"
                ],
                "responses": {
                    "200": {
                        "description": "AdapterType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdapterType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdapterType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdapterType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a AdapterType resource.",
                "description": "Retrieves a AdapterType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/adapters": {
            "get": {
                "operationId": "getAdapterCollection",
                "tags": [
                    "Adapter"
                ],
                "responses": {
                    "200": {
                        "description": "Adapter collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Adapter.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Adapter"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Adapter"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Adapter resources.",
                "description": "Retrieves the collection of Adapter resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/adapters/{id}": {
            "get": {
                "operationId": "getAdapterItem",
                "tags": [
                    "Adapter"
                ],
                "responses": {
                    "200": {
                        "description": "Adapter resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Adapter.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Adapter"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Adapter"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Adapter resource.",
                "description": "Retrieves a Adapter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerations": {
            "get": {
                "operationId": "getAerationCollection",
                "tags": [
                    "Aeration"
                ],
                "responses": {
                    "200": {
                        "description": "Aeration collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Aeration.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Aeration"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Aeration"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Aeration resources.",
                "description": "Retrieves the collection of Aeration resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postAerationCollection",
                "tags": [
                    "Aeration"
                ],
                "responses": {
                    "201": {
                        "description": "Aeration resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            }
                        },
                        "links": {
                            "GetAerationItem": {
                                "operationId": "getAerationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /aerations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Aeration resource.",
                "description": "Creates a Aeration resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Aeration resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/aerations/{id}": {
            "get": {
                "operationId": "getAerationItem",
                "tags": [
                    "Aeration"
                ],
                "responses": {
                    "200": {
                        "description": "Aeration resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Aeration resource.",
                "description": "Retrieves a Aeration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putAerationItem",
                "tags": [
                    "Aeration"
                ],
                "responses": {
                    "200": {
                        "description": "Aeration resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            }
                        },
                        "links": {
                            "GetAerationItem": {
                                "operationId": "getAerationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /aerations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Aeration resource.",
                "description": "Replaces the Aeration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Aeration resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Aeration"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteAerationItem",
                "tags": [
                    "Aeration"
                ],
                "responses": {
                    "204": {
                        "description": "Aeration resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Aeration resource.",
                "description": "Removes the Aeration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerations/{id}/measures": {
            "get": {
                "operationId": "api_aerations_measures_get_subresourceAerationSubresource",
                "tags": [
                    "Measure",
                    "Aeration"
                ],
                "responses": {
                    "200": {
                        "description": "Aeration resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Aeration resource.",
                "description": "Retrieves a Aeration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Aeration identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes": {
            "get": {
                "operationId": "getAerobicActivatedSludgeProcessCollection",
                "tags": [
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of AerobicActivatedSludgeProcess resources.",
                "description": "Retrieves the collection of AerobicActivatedSludgeProcess resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postAerobicActivatedSludgeProcessCollection",
                "tags": [
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "201": {
                        "description": "AerobicActivatedSludgeProcess resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAerobicActivatedSludgeProcessItem": {
                                "operationId": "getAerobicActivatedSludgeProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /aerobic_activated_sludge_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a AerobicActivatedSludgeProcess resource.",
                "description": "Creates a AerobicActivatedSludgeProcess resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new AerobicActivatedSludgeProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}": {
            "get": {
                "operationId": "getAerobicActivatedSludgeProcessItem",
                "tags": [
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putAerobicActivatedSludgeProcessItem",
                "tags": [
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAerobicActivatedSludgeProcessItem": {
                                "operationId": "getAerobicActivatedSludgeProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /aerobic_activated_sludge_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the AerobicActivatedSludgeProcess resource.",
                "description": "Replaces the AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated AerobicActivatedSludgeProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AerobicActivatedSludgeProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteAerobicActivatedSludgeProcessItem",
                "tags": [
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "204": {
                        "description": "AerobicActivatedSludgeProcess resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the AerobicActivatedSludgeProcess resource.",
                "description": "Removes the AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}/aeration": {
            "get": {
                "operationId": "api_aerobic_activated_sludge_processes_aeration_get_subresourceAerobicActivatedSludgeProcessSubresource",
                "tags": [
                    "Aeration",
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Aeration"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AerobicActivatedSludgeProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}/aeration/measures": {
            "get": {
                "operationId": "api_aerobic_activated_sludge_processes_aeration_measures_get_subresourceAerobicActivatedSludgeProcessSubresource",
                "tags": [
                    "Measure",
                    "Aeration"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AerobicActivatedSludgeProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "aeration",
                        "in": "path",
                        "description": "Aeration identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}/measures": {
            "get": {
                "operationId": "api_aerobic_activated_sludge_processes_measures_get_subresourceAerobicActivatedSludgeProcessSubresource",
                "tags": [
                    "Measure",
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AerobicActivatedSludgeProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}/mixing": {
            "get": {
                "operationId": "api_aerobic_activated_sludge_processes_mixing_get_subresourceAerobicActivatedSludgeProcessSubresource",
                "tags": [
                    "Mixing",
                    "AerobicActivatedSludgeProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AerobicActivatedSludgeProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/aerobic_activated_sludge_processes/{id}/mixing/measures": {
            "get": {
                "operationId": "api_aerobic_activated_sludge_processes_mixing_measures_get_subresourceAerobicActivatedSludgeProcessSubresource",
                "tags": [
                    "Measure",
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "AerobicActivatedSludgeProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "description": "Retrieves a AerobicActivatedSludgeProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AerobicActivatedSludgeProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "mixing",
                        "in": "path",
                        "description": "Mixing identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/alterations": {
            "get": {
                "operationId": "getAlterationCollection",
                "tags": [
                    "Alteration"
                ],
                "responses": {
                    "200": {
                        "description": "Alteration collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Alteration.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Alteration"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Alteration"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Alteration resources.",
                "description": "Retrieves the collection of Alteration resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/alterations/{id}": {
            "get": {
                "operationId": "getAlterationItem",
                "tags": [
                    "Alteration"
                ],
                "responses": {
                    "200": {
                        "description": "Alteration resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alteration.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alteration"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Alteration"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Alteration resource.",
                "description": "Retrieves a Alteration resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_dry_processes": {
            "get": {
                "operationId": "getAnaerobicDigestionDryProcessCollection",
                "tags": [
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of AnaerobicDigestionDryProcess resources.",
                "description": "Retrieves the collection of AnaerobicDigestionDryProcess resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postAnaerobicDigestionDryProcessCollection",
                "tags": [
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "201": {
                        "description": "AnaerobicDigestionDryProcess resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAnaerobicDigestionDryProcessItem": {
                                "operationId": "getAnaerobicDigestionDryProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /anaerobic_digestion_dry_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a AnaerobicDigestionDryProcess resource.",
                "description": "Creates a AnaerobicDigestionDryProcess resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new AnaerobicDigestionDryProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_dry_processes/{id}": {
            "get": {
                "operationId": "getAnaerobicDigestionDryProcessItem",
                "tags": [
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "description": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putAnaerobicDigestionDryProcessItem",
                "tags": [
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAnaerobicDigestionDryProcessItem": {
                                "operationId": "getAnaerobicDigestionDryProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /anaerobic_digestion_dry_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the AnaerobicDigestionDryProcess resource.",
                "description": "Replaces the AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated AnaerobicDigestionDryProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionDryProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteAnaerobicDigestionDryProcessItem",
                "tags": [
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "204": {
                        "description": "AnaerobicDigestionDryProcess resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the AnaerobicDigestionDryProcess resource.",
                "description": "Removes the AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_dry_processes/{id}/leachate": {
            "get": {
                "operationId": "api_anaerobic_digestion_dry_processes_leachate_get_subresourceAnaerobicDigestionDryProcessSubresource",
                "tags": [
                    "Leachate",
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "description": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionDryProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_dry_processes/{id}/leachate/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_dry_processes_leachate_measures_get_subresourceAnaerobicDigestionDryProcessSubresource",
                "tags": [
                    "Measure",
                    "Leachate"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "description": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionDryProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "leachate",
                        "in": "path",
                        "description": "Leachate identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_dry_processes/{id}/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_dry_processes_measures_get_subresourceAnaerobicDigestionDryProcessSubresource",
                "tags": [
                    "Measure",
                    "AnaerobicDigestionDryProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionDryProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "description": "Retrieves a AnaerobicDigestionDryProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionDryProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes": {
            "get": {
                "operationId": "getAnaerobicDigestionWetProcessCollection",
                "tags": [
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of AnaerobicDigestionWetProcess resources.",
                "description": "Retrieves the collection of AnaerobicDigestionWetProcess resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postAnaerobicDigestionWetProcessCollection",
                "tags": [
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "201": {
                        "description": "AnaerobicDigestionWetProcess resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAnaerobicDigestionWetProcessItem": {
                                "operationId": "getAnaerobicDigestionWetProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /anaerobic_digestion_wet_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a AnaerobicDigestionWetProcess resource.",
                "description": "Creates a AnaerobicDigestionWetProcess resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new AnaerobicDigestionWetProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}": {
            "get": {
                "operationId": "getAnaerobicDigestionWetProcessItem",
                "tags": [
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putAnaerobicDigestionWetProcessItem",
                "tags": [
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                                }
                            }
                        },
                        "links": {
                            "GetAnaerobicDigestionWetProcessItem": {
                                "operationId": "getAnaerobicDigestionWetProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /anaerobic_digestion_wet_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the AnaerobicDigestionWetProcess resource.",
                "description": "Replaces the AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated AnaerobicDigestionWetProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/AnaerobicDigestionWetProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteAnaerobicDigestionWetProcessItem",
                "tags": [
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "204": {
                        "description": "AnaerobicDigestionWetProcess resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the AnaerobicDigestionWetProcess resource.",
                "description": "Removes the AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_measures_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Measure",
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/mixing": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_mixing_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Mixing",
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/mixing/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_mixing_measures_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Measure",
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "mixing",
                        "in": "path",
                        "description": "Mixing identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/support": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_support_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Support",
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/support/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_support_measures_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Measure",
                    "Support"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "support",
                        "in": "path",
                        "description": "Support identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/temperature": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_temperature_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Temperature",
                    "AnaerobicDigestionWetProcess"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/anaerobic_digestion_wet_processes/{id}/temperature/measures": {
            "get": {
                "operationId": "api_anaerobic_digestion_wet_processes_temperature_measures_get_subresourceAnaerobicDigestionWetProcessSubresource",
                "tags": [
                    "Measure",
                    "Temperature"
                ],
                "responses": {
                    "200": {
                        "description": "AnaerobicDigestionWetProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "description": "Retrieves a AnaerobicDigestionWetProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "AnaerobicDigestionWetProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "temperature",
                        "in": "path",
                        "description": "Temperature identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/annotations": {
            "get": {
                "operationId": "getAnnotationCollection",
                "tags": [
                    "Annotation"
                ],
                "responses": {
                    "200": {
                        "description": "Annotation collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Annotation.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Annotation"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Annotation"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Annotation resources.",
                "description": "Retrieves the collection of Annotation resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/annotations/{id}": {
            "get": {
                "operationId": "getAnnotationItem",
                "tags": [
                    "Annotation"
                ],
                "responses": {
                    "200": {
                        "description": "Annotation resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Annotation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Annotation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Annotation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Annotation resource.",
                "description": "Retrieves a Annotation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/bioinformatic_workflow_procedures": {
            "get": {
                "operationId": "getBioinformaticWorkflowProcedureCollection",
                "tags": [
                    "BioinformaticWorkflowProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflowProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BioinformaticWorkflowProcedure resources.",
                "description": "Retrieves the collection of BioinformaticWorkflowProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postBioinformaticWorkflowProcedureCollection",
                "tags": [
                    "BioinformaticWorkflowProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "BioinformaticWorkflowProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetBioinformaticWorkflowProcedureItem": {
                                "operationId": "getBioinformaticWorkflowProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /bioinformatic_workflow_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a BioinformaticWorkflowProcedure resource.",
                "description": "Creates a BioinformaticWorkflowProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new BioinformaticWorkflowProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/bioinformatic_workflow_procedures/{id}": {
            "get": {
                "operationId": "getBioinformaticWorkflowProcedureItem",
                "tags": [
                    "BioinformaticWorkflowProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflowProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BioinformaticWorkflowProcedure resource.",
                "description": "Retrieves a BioinformaticWorkflowProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putBioinformaticWorkflowProcedureItem",
                "tags": [
                    "BioinformaticWorkflowProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflowProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetBioinformaticWorkflowProcedureItem": {
                                "operationId": "getBioinformaticWorkflowProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /bioinformatic_workflow_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the BioinformaticWorkflowProcedure resource.",
                "description": "Replaces the BioinformaticWorkflowProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated BioinformaticWorkflowProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflowProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteBioinformaticWorkflowProcedureItem",
                "tags": [
                    "BioinformaticWorkflowProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "BioinformaticWorkflowProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the BioinformaticWorkflowProcedure resource.",
                "description": "Removes the BioinformaticWorkflowProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/bioinformatic_workflows": {
            "get": {
                "operationId": "getBioinformaticWorkflowCollection",
                "tags": [
                    "BioinformaticWorkflow"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflow collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BioinformaticWorkflow"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BioinformaticWorkflow"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BioinformaticWorkflow resources.",
                "description": "Retrieves the collection of BioinformaticWorkflow resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postBioinformaticWorkflowCollection",
                "tags": [
                    "BioinformaticWorkflow"
                ],
                "responses": {
                    "201": {
                        "description": "BioinformaticWorkflow resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            }
                        },
                        "links": {
                            "GetBioinformaticWorkflowItem": {
                                "operationId": "getBioinformaticWorkflowItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /bioinformatic_workflows/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a BioinformaticWorkflow resource.",
                "description": "Creates a BioinformaticWorkflow resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new BioinformaticWorkflow resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/bioinformatic_workflows/{id}": {
            "get": {
                "operationId": "getBioinformaticWorkflowItem",
                "tags": [
                    "BioinformaticWorkflow"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflow resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BioinformaticWorkflow resource.",
                "description": "Retrieves a BioinformaticWorkflow resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putBioinformaticWorkflowItem",
                "tags": [
                    "BioinformaticWorkflow"
                ],
                "responses": {
                    "200": {
                        "description": "BioinformaticWorkflow resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BioinformaticWorkflow"
                                }
                            }
                        },
                        "links": {
                            "GetBioinformaticWorkflowItem": {
                                "operationId": "getBioinformaticWorkflowItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /bioinformatic_workflows/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the BioinformaticWorkflow resource.",
                "description": "Replaces the BioinformaticWorkflow resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated BioinformaticWorkflow resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BioinformaticWorkflow"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteBioinformaticWorkflowItem",
                "tags": [
                    "BioinformaticWorkflow"
                ],
                "responses": {
                    "204": {
                        "description": "BioinformaticWorkflow resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the BioinformaticWorkflow resource.",
                "description": "Removes the BioinformaticWorkflow resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_common_names": {
            "get": {
                "operationId": "getBiomassCommonNameCollection",
                "tags": [
                    "BiomassCommonName"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassCommonName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BiomassCommonName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassCommonName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassCommonName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BiomassCommonName resources.",
                "description": "Retrieves the collection of BiomassCommonName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_common_names/{id}": {
            "get": {
                "operationId": "getBiomassCommonNameItem",
                "tags": [
                    "BiomassCommonName"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassCommonName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassCommonName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassCommonName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassCommonName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BiomassCommonName resource.",
                "description": "Retrieves a BiomassCommonName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_feedstocks": {
            "get": {
                "operationId": "getBiomassFeedstockCollection",
                "tags": [
                    "BiomassFeedstock"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassFeedstock collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassFeedstock"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassFeedstock"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BiomassFeedstock resources.",
                "description": "Retrieves the collection of BiomassFeedstock resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postBiomassFeedstockCollection",
                "tags": [
                    "BiomassFeedstock"
                ],
                "responses": {
                    "201": {
                        "description": "BiomassFeedstock resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            }
                        },
                        "links": {
                            "GetBiomassFeedstockItem": {
                                "operationId": "getBiomassFeedstockItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /biomass_feedstocks/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a BiomassFeedstock resource.",
                "description": "Creates a BiomassFeedstock resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new BiomassFeedstock resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_feedstocks/{id}": {
            "get": {
                "operationId": "getBiomassFeedstockItem",
                "tags": [
                    "BiomassFeedstock"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassFeedstock resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BiomassFeedstock resource.",
                "description": "Retrieves a BiomassFeedstock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putBiomassFeedstockItem",
                "tags": [
                    "BiomassFeedstock"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassFeedstock resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassFeedstock"
                                }
                            }
                        },
                        "links": {
                            "GetBiomassFeedstockItem": {
                                "operationId": "getBiomassFeedstockItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /biomass_feedstocks/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the BiomassFeedstock resource.",
                "description": "Replaces the BiomassFeedstock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated BiomassFeedstock resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BiomassFeedstock"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteBiomassFeedstockItem",
                "tags": [
                    "BiomassFeedstock"
                ],
                "responses": {
                    "204": {
                        "description": "BiomassFeedstock resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the BiomassFeedstock resource.",
                "description": "Removes the BiomassFeedstock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_feedstocks/{id}/measures": {
            "get": {
                "operationId": "api_biomass_feedstocks_measures_get_subresourceBiomassFeedstockSubresource",
                "tags": [
                    "Measure",
                    "BiomassFeedstock"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassFeedstock resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a BiomassFeedstock resource.",
                "description": "Retrieves a BiomassFeedstock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BiomassFeedstock identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_residue_types": {
            "get": {
                "operationId": "getBiomassResidueTypeCollection",
                "tags": [
                    "BiomassResidueType"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassResidueType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BiomassResidueType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassResidueType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassResidueType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BiomassResidueType resources.",
                "description": "Retrieves the collection of BiomassResidueType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_residue_types/{id}": {
            "get": {
                "operationId": "getBiomassResidueTypeItem",
                "tags": [
                    "BiomassResidueType"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassResidueType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassResidueType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassResidueType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassResidueType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BiomassResidueType resource.",
                "description": "Retrieves a BiomassResidueType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_scientific_names": {
            "get": {
                "operationId": "getBiomassScientificNameCollection",
                "tags": [
                    "BiomassScientificName"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassScientificName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BiomassScientificName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassScientificName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BiomassScientificName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BiomassScientificName resources.",
                "description": "Retrieves the collection of BiomassScientificName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/biomass_scientific_names/{id}": {
            "get": {
                "operationId": "getBiomassScientificNameItem",
                "tags": [
                    "BiomassScientificName"
                ],
                "responses": {
                    "200": {
                        "description": "BiomassScientificName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassScientificName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassScientificName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiomassScientificName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BiomassScientificName resource.",
                "description": "Retrieves a BiomassScientificName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/brand_for_nucleic_acid_dosages": {
            "get": {
                "operationId": "getBrandForNucleicAcidDosageCollection",
                "tags": [
                    "BrandForNucleicAcidDosage"
                ],
                "responses": {
                    "200": {
                        "description": "BrandForNucleicAcidDosage collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrandForNucleicAcidDosage.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandForNucleicAcidDosage"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandForNucleicAcidDosage"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BrandForNucleicAcidDosage resources.",
                "description": "Retrieves the collection of BrandForNucleicAcidDosage resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/brand_for_nucleic_acid_dosages/{id}": {
            "get": {
                "operationId": "getBrandForNucleicAcidDosageItem",
                "tags": [
                    "BrandForNucleicAcidDosage"
                ],
                "responses": {
                    "200": {
                        "description": "BrandForNucleicAcidDosage resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandForNucleicAcidDosage.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandForNucleicAcidDosage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandForNucleicAcidDosage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BrandForNucleicAcidDosage resource.",
                "description": "Retrieves a BrandForNucleicAcidDosage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/buffer_generic_names": {
            "get": {
                "operationId": "getBufferGenericNameCollection",
                "tags": [
                    "BufferGenericName"
                ],
                "responses": {
                    "200": {
                        "description": "BufferGenericName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BufferGenericName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BufferGenericName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BufferGenericName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of BufferGenericName resources.",
                "description": "Retrieves the collection of BufferGenericName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/buffer_generic_names/{id}": {
            "get": {
                "operationId": "getBufferGenericNameItem",
                "tags": [
                    "BufferGenericName"
                ],
                "responses": {
                    "200": {
                        "description": "BufferGenericName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BufferGenericName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BufferGenericName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BufferGenericName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a BufferGenericName resource.",
                "description": "Retrieves a BufferGenericName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/campaigns": {
            "get": {
                "operationId": "getCampaignCollection",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Campaign.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Campaign resources.",
                "description": "Retrieves the collection of Campaign resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCampaignCollection",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "201": {
                        "description": "Campaign resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "links": {
                            "GetCampaignItem": {
                                "operationId": "getCampaignItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /campaigns/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Campaign resource.",
                "description": "Creates a Campaign resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Campaign resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/campaigns/{id}": {
            "get": {
                "operationId": "getCampaignItem",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Campaign resource.",
                "description": "Retrieves a Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCampaignItem",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "Campaign resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "links": {
                            "GetCampaignItem": {
                                "operationId": "getCampaignItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /campaigns/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Campaign resource.",
                "description": "Replaces the Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Campaign resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCampaignItem",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "204": {
                        "description": "Campaign resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Campaign resource.",
                "description": "Removes the Campaign resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/chemical_compounds": {
            "get": {
                "operationId": "getChemicalCompoundCollection",
                "tags": [
                    "ChemicalCompound"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalCompound collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChemicalCompound"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChemicalCompound"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ChemicalCompound resources.",
                "description": "Retrieves the collection of ChemicalCompound resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postChemicalCompoundCollection",
                "tags": [
                    "ChemicalCompound"
                ],
                "responses": {
                    "201": {
                        "description": "ChemicalCompound resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            }
                        },
                        "links": {
                            "GetChemicalCompoundItem": {
                                "operationId": "getChemicalCompoundItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /chemical_compounds/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ChemicalCompound resource.",
                "description": "Creates a ChemicalCompound resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ChemicalCompound resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/chemical_compounds/{id}": {
            "get": {
                "operationId": "getChemicalCompoundItem",
                "tags": [
                    "ChemicalCompound"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalCompound resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ChemicalCompound resource.",
                "description": "Retrieves a ChemicalCompound resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putChemicalCompoundItem",
                "tags": [
                    "ChemicalCompound"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalCompound resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalCompound"
                                }
                            }
                        },
                        "links": {
                            "GetChemicalCompoundItem": {
                                "operationId": "getChemicalCompoundItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /chemical_compounds/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ChemicalCompound resource.",
                "description": "Replaces the ChemicalCompound resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ChemicalCompound resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ChemicalCompound"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteChemicalCompoundItem",
                "tags": [
                    "ChemicalCompound"
                ],
                "responses": {
                    "204": {
                        "description": "ChemicalCompound resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ChemicalCompound resource.",
                "description": "Removes the ChemicalCompound resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/chemical_compounds/{id}/measures": {
            "get": {
                "operationId": "api_chemical_compounds_measures_get_subresourceChemicalCompoundSubresource",
                "tags": [
                    "Measure",
                    "ChemicalCompound"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalCompound resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ChemicalCompound resource.",
                "description": "Retrieves a ChemicalCompound resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ChemicalCompound identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/chemical_grades": {
            "get": {
                "operationId": "getChemicalGradeCollection",
                "tags": [
                    "ChemicalGrade"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalGrade collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChemicalGrade.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChemicalGrade"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ChemicalGrade"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ChemicalGrade resources.",
                "description": "Retrieves the collection of ChemicalGrade resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/chemical_grades/{id}": {
            "get": {
                "operationId": "getChemicalGradeItem",
                "tags": [
                    "ChemicalGrade"
                ],
                "responses": {
                    "200": {
                        "description": "ChemicalGrade resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalGrade.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalGrade"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChemicalGrade"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ChemicalGrade resource.",
                "description": "Retrieves a ChemicalGrade resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/collection_names": {
            "get": {
                "operationId": "getCollectionNameCollection",
                "tags": [
                    "CollectionName"
                ],
                "responses": {
                    "200": {
                        "description": "CollectionName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CollectionName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CollectionName resources.",
                "description": "Retrieves the collection of CollectionName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/collection_names/{id}": {
            "get": {
                "operationId": "getCollectionNameItem",
                "tags": [
                    "CollectionName"
                ],
                "responses": {
                    "200": {
                        "description": "CollectionName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a CollectionName resource.",
                "description": "Retrieves a CollectionName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/company_activities": {
            "get": {
                "operationId": "getCompanyActivityCollection",
                "tags": [
                    "CompanyActivity"
                ],
                "responses": {
                    "200": {
                        "description": "CompanyActivity collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyActivity.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyActivity"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyActivity"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CompanyActivity resources.",
                "description": "Retrieves the collection of CompanyActivity resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/company_activities/{id}": {
            "get": {
                "operationId": "getCompanyActivityItem",
                "tags": [
                    "CompanyActivity"
                ],
                "responses": {
                    "200": {
                        "description": "CompanyActivity resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyActivity.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyActivity"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyActivity"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a CompanyActivity resource.",
                "description": "Retrieves a CompanyActivity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/compartment_replicates": {
            "get": {
                "operationId": "getCompartmentReplicateCollection",
                "tags": [
                    "CompartmentReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "CompartmentReplicate collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of CompartmentReplicate resources.",
                "description": "Retrieves the collection of CompartmentReplicate resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCompartmentReplicateCollection",
                "tags": [
                    "CompartmentReplicate"
                ],
                "responses": {
                    "201": {
                        "description": "CompartmentReplicate resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            }
                        },
                        "links": {
                            "GetCompartmentReplicateItem": {
                                "operationId": "getCompartmentReplicateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /compartment_replicates/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a CompartmentReplicate resource.",
                "description": "Creates a CompartmentReplicate resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new CompartmentReplicate resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/compartment_replicates/{id}": {
            "get": {
                "operationId": "getCompartmentReplicateItem",
                "tags": [
                    "CompartmentReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "CompartmentReplicate resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a CompartmentReplicate resource.",
                "description": "Retrieves a CompartmentReplicate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCompartmentReplicateItem",
                "tags": [
                    "CompartmentReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "CompartmentReplicate resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompartmentReplicate"
                                }
                            }
                        },
                        "links": {
                            "GetCompartmentReplicateItem": {
                                "operationId": "getCompartmentReplicateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /compartment_replicates/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the CompartmentReplicate resource.",
                "description": "Replaces the CompartmentReplicate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated CompartmentReplicate resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/CompartmentReplicate"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCompartmentReplicateItem",
                "tags": [
                    "CompartmentReplicate"
                ],
                "responses": {
                    "204": {
                        "description": "CompartmentReplicate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the CompartmentReplicate resource.",
                "description": "Removes the CompartmentReplicate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/compartments": {
            "get": {
                "operationId": "getCompartmentCollection",
                "tags": [
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Compartment.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compartment"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compartment"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Compartment resources.",
                "description": "Retrieves the collection of Compartment resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postCompartmentCollection",
                "tags": [
                    "Compartment"
                ],
                "responses": {
                    "201": {
                        "description": "Compartment resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            }
                        },
                        "links": {
                            "GetCompartmentItem": {
                                "operationId": "getCompartmentItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /compartments/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Compartment resource.",
                "description": "Creates a Compartment resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Compartment resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/compartments/{id}": {
            "get": {
                "operationId": "getCompartmentItem",
                "tags": [
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Compartment resource.",
                "description": "Retrieves a Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putCompartmentItem",
                "tags": [
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Compartment"
                                }
                            }
                        },
                        "links": {
                            "GetCompartmentItem": {
                                "operationId": "getCompartmentItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /compartments/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Compartment resource.",
                "description": "Replaces the Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Compartment resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Compartment"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteCompartmentItem",
                "tags": [
                    "Compartment"
                ],
                "responses": {
                    "204": {
                        "description": "Compartment resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Compartment resource.",
                "description": "Removes the Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/compartments/{id}/constituents": {
            "get": {
                "operationId": "api_compartments_constituents_get_subresourceCompartmentSubresource",
                "tags": [
                    "Constituent",
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Constituent.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Compartment resource.",
                "description": "Retrieves a Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/compartments/{id}/constituents/{constituents}/amount": {
            "get": {
                "operationId": "api_compartments_constituents_amount_get_subresourceCompartmentSubresource",
                "tags": [
                    "Measure",
                    "Constituent"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Compartment resource.",
                "description": "Retrieves a Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "constituents",
                        "in": "path",
                        "description": "Constituent identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/compartments/{id}/measures": {
            "get": {
                "operationId": "api_compartments_measures_get_subresourceCompartmentSubresource",
                "tags": [
                    "Measure",
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Compartment resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Compartment resource.",
                "description": "Retrieves a Compartment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/constituents": {
            "get": {
                "operationId": "getConstituentCollection",
                "tags": [
                    "Constituent"
                ],
                "responses": {
                    "200": {
                        "description": "Constituent collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Constituent.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Constituent resources.",
                "description": "Retrieves the collection of Constituent resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/constituents/{id}": {
            "get": {
                "operationId": "getConstituentItem",
                "tags": [
                    "Constituent"
                ],
                "responses": {
                    "200": {
                        "description": "Constituent resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Constituent.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Constituent"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Constituent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Constituent resource.",
                "description": "Retrieves a Constituent resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/constituents/{id}/amount": {
            "get": {
                "operationId": "api_constituents_amount_get_subresourceConstituentSubresource",
                "tags": [
                    "Measure",
                    "Constituent"
                ],
                "responses": {
                    "200": {
                        "description": "Constituent resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Constituent resource.",
                "description": "Retrieves a Constituent resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Constituent identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/default_inputs": {
            "get": {
                "operationId": "getDefaultInputCollection",
                "tags": [
                    "DefaultInput"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultInput collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DefaultInput.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultInput"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultInput"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of DefaultInput resources.",
                "description": "Retrieves the collection of DefaultInput resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postDefaultInputCollection",
                "tags": [
                    "DefaultInput"
                ],
                "responses": {
                    "201": {
                        "description": "DefaultInput resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultInputItem": {
                                "operationId": "getDefaultInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a DefaultInput resource.",
                "description": "Creates a DefaultInput resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new DefaultInput resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/default_inputs/{id}": {
            "get": {
                "operationId": "getDefaultInputItem",
                "tags": [
                    "DefaultInput"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultInput resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a DefaultInput resource.",
                "description": "Retrieves a DefaultInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putDefaultInputItem",
                "tags": [
                    "DefaultInput"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultInput resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultInput"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultInputItem": {
                                "operationId": "getDefaultInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the DefaultInput resource.",
                "description": "Replaces the DefaultInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated DefaultInput resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultInput"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteDefaultInputItem",
                "tags": [
                    "DefaultInput"
                ],
                "responses": {
                    "204": {
                        "description": "DefaultInput resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the DefaultInput resource.",
                "description": "Removes the DefaultInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/default_inputs/{id}/measures": {
            "get": {
                "operationId": "api_default_inputs_measures_get_subresourceDefaultInputSubresource",
                "tags": [
                    "Measure",
                    "DefaultInput"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultInput resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a DefaultInput resource.",
                "description": "Retrieves a DefaultInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DefaultInput identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/default_processes": {
            "get": {
                "operationId": "getDefaultProcessCollection",
                "tags": [
                    "DefaultProcess"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultProcess collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DefaultProcess.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultProcess"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultProcess"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of DefaultProcess resources.",
                "description": "Retrieves the collection of DefaultProcess resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postDefaultProcessCollection",
                "tags": [
                    "DefaultProcess"
                ],
                "responses": {
                    "201": {
                        "description": "DefaultProcess resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultProcessItem": {
                                "operationId": "getDefaultProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a DefaultProcess resource.",
                "description": "Creates a DefaultProcess resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new DefaultProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/default_processes/{id}": {
            "get": {
                "operationId": "getDefaultProcessItem",
                "tags": [
                    "DefaultProcess"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a DefaultProcess resource.",
                "description": "Retrieves a DefaultProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putDefaultProcessItem",
                "tags": [
                    "DefaultProcess"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultProcess resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProcess"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultProcessItem": {
                                "operationId": "getDefaultProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the DefaultProcess resource.",
                "description": "Replaces the DefaultProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated DefaultProcess resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProcess"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteDefaultProcessItem",
                "tags": [
                    "DefaultProcess"
                ],
                "responses": {
                    "204": {
                        "description": "DefaultProcess resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the DefaultProcess resource.",
                "description": "Removes the DefaultProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/default_processes/{id}/measures": {
            "get": {
                "operationId": "api_default_processes_measures_get_subresourceDefaultProcessSubresource",
                "tags": [
                    "Measure",
                    "DefaultProcess"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultProcess resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a DefaultProcess resource.",
                "description": "Retrieves a DefaultProcess resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "DefaultProcess identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/default_samples": {
            "get": {
                "operationId": "getDefaultSampleCollection",
                "tags": [
                    "DefaultSample"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultSample collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DefaultSample.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultSample"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DefaultSample"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of DefaultSample resources.",
                "description": "Retrieves the collection of DefaultSample resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "operation.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "operation.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postDefaultSampleCollection",
                "tags": [
                    "DefaultSample"
                ],
                "responses": {
                    "201": {
                        "description": "DefaultSample resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultSampleItem": {
                                "operationId": "getDefaultSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a DefaultSample resource.",
                "description": "Creates a DefaultSample resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new DefaultSample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/default_samples/{id}": {
            "get": {
                "operationId": "getDefaultSampleItem",
                "tags": [
                    "DefaultSample"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a DefaultSample resource.",
                "description": "Retrieves a DefaultSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putDefaultSampleItem",
                "tags": [
                    "DefaultSample"
                ],
                "responses": {
                    "200": {
                        "description": "DefaultSample resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultSample"
                                }
                            }
                        },
                        "links": {
                            "GetDefaultSampleItem": {
                                "operationId": "getDefaultSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /default_samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the DefaultSample resource.",
                "description": "Replaces the DefaultSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated DefaultSample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultSample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteDefaultSampleItem",
                "tags": [
                    "DefaultSample"
                ],
                "responses": {
                    "204": {
                        "description": "DefaultSample resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the DefaultSample resource.",
                "description": "Removes the DefaultSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/events": {
            "get": {
                "operationId": "getEventCollection",
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Event collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Event resources.",
                "description": "Retrieves the collection of Event resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/events/{id}": {
            "get": {
                "operationId": "getEventItem",
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "Event resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Event resource.",
                "description": "Retrieves a Event resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/experimental-series/{id}/locations": {
            "get": {
                "operationId": "experimental-series_locationsLocationCollection",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Location resources.",
                "description": "Retrieves the collection of Location resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/experimental_series": {
            "get": {
                "operationId": "getExperimentalSeriesCollection",
                "tags": [
                    "ExperimentalSeries"
                ],
                "responses": {
                    "200": {
                        "description": "ExperimentalSeries collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExperimentalSeries"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExperimentalSeries"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ExperimentalSeries resources.",
                "description": "Retrieves the collection of ExperimentalSeries resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postExperimentalSeriesCollection",
                "tags": [
                    "ExperimentalSeries"
                ],
                "responses": {
                    "201": {
                        "description": "ExperimentalSeries resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            }
                        },
                        "links": {
                            "GetExperimentalSeriesItem": {
                                "operationId": "getExperimentalSeriesItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /experimental_series/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ExperimentalSeries resource.",
                "description": "Creates a ExperimentalSeries resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ExperimentalSeries resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/experimental_series/{id}": {
            "get": {
                "operationId": "getExperimentalSeriesItem",
                "tags": [
                    "ExperimentalSeries"
                ],
                "responses": {
                    "200": {
                        "description": "ExperimentalSeries resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ExperimentalSeries resource.",
                "description": "Retrieves a ExperimentalSeries resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putExperimentalSeriesItem",
                "tags": [
                    "ExperimentalSeries"
                ],
                "responses": {
                    "200": {
                        "description": "ExperimentalSeries resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentalSeries"
                                }
                            }
                        },
                        "links": {
                            "GetExperimentalSeriesItem": {
                                "operationId": "getExperimentalSeriesItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /experimental_series/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ExperimentalSeries resource.",
                "description": "Replaces the ExperimentalSeries resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ExperimentalSeries resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentalSeries"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteExperimentalSeriesItem",
                "tags": [
                    "ExperimentalSeries"
                ],
                "responses": {
                    "204": {
                        "description": "ExperimentalSeries resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ExperimentalSeries resource.",
                "description": "Removes the ExperimentalSeries resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/feeding_types": {
            "get": {
                "operationId": "getFeedingTypeCollection",
                "tags": [
                    "FeedingType"
                ],
                "responses": {
                    "200": {
                        "description": "FeedingType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FeedingType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FeedingType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FeedingType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of FeedingType resources.",
                "description": "Retrieves the collection of FeedingType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/feeding_types/{id}": {
            "get": {
                "operationId": "getFeedingTypeItem",
                "tags": [
                    "FeedingType"
                ],
                "responses": {
                    "200": {
                        "description": "FeedingType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedingType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedingType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedingType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a FeedingType resource.",
                "description": "Retrieves a FeedingType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/files/": {
            "post": {
                "operationId": "createFileCollection",
                "tags": [
                    "File"
                ],
                "responses": {
                    "204": {
                        "description": "File resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {}
                            },
                            "application/json": {
                                "schema": {}
                            },
                            "text/html": {
                                "schema": {}
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a File resource.",
                "description": "Creates a File resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new File resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {}
                        },
                        "application/json": {
                            "schema": {}
                        },
                        "text/html": {
                            "schema": {}
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "options": {
                "operationId": "infoFileCollection",
                "tags": [
                    "File"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error"
                    }
                },
                "summary": "File",
                "description": "File",
                "parameters": [],
                "deprecated": false
            },
            "parameters": []
        },
        "/files/{id}": {
            "get": {
                "operationId": "downloadFileItem",
                "tags": [
                    "File"
                ],
                "responses": {
                    "204": {
                        "description": "File resource",
                        "content": {
                            "*": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a File resource.",
                "description": "Retrieves a File resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteFileItem",
                "tags": [
                    "File"
                ],
                "responses": {
                    "204": {
                        "description": "File resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the File resource.",
                "description": "Removes the File resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "head": {
                "operationId": "statusFileItem",
                "tags": [
                    "File"
                ],
                "responses": {
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "File",
                "description": "File",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "patch": {
                "operationId": "uploadFileItem",
                "tags": [
                    "File"
                ],
                "responses": {
                    "204": {
                        "description": "File resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {}
                            },
                            "application/json": {
                                "schema": {}
                            },
                            "text/html": {
                                "schema": {}
                            }
                        },
                        "links": {}
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates the File resource.",
                "description": "Updates the File resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated File resource",
                    "content": {},
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/graph_collections": {
            "get": {
                "operationId": "getGraphCollectionCollection",
                "tags": [
                    "GraphCollection"
                ],
                "responses": {
                    "200": {
                        "description": "GraphCollection collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GraphCollection.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GraphCollection"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GraphCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of GraphCollection resources.",
                "description": "Retrieves the collection of GraphCollection resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "operation",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "operation[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postGraphCollectionCollection",
                "tags": [
                    "GraphCollection"
                ],
                "responses": {
                    "201": {
                        "description": "GraphCollection resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            }
                        },
                        "links": {
                            "GetGraphCollectionItem": {
                                "operationId": "getGraphCollectionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /graph_collections/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a GraphCollection resource.",
                "description": "Creates a GraphCollection resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new GraphCollection resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/graph_collections/{id}": {
            "get": {
                "operationId": "getGraphCollectionItem",
                "tags": [
                    "GraphCollection"
                ],
                "responses": {
                    "200": {
                        "description": "GraphCollection resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a GraphCollection resource.",
                "description": "Retrieves a GraphCollection resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putGraphCollectionItem",
                "tags": [
                    "GraphCollection"
                ],
                "responses": {
                    "200": {
                        "description": "GraphCollection resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/GraphCollection"
                                }
                            }
                        },
                        "links": {
                            "GetGraphCollectionItem": {
                                "operationId": "getGraphCollectionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /graph_collections/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the GraphCollection resource.",
                "description": "Replaces the GraphCollection resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated GraphCollection resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/GraphCollection"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteGraphCollectionItem",
                "tags": [
                    "GraphCollection"
                ],
                "responses": {
                    "204": {
                        "description": "GraphCollection resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the GraphCollection resource.",
                "description": "Removes the GraphCollection resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/graphs": {
            "get": {
                "operationId": "getGraphCollection",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "200": {
                        "description": "Graph collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Graph.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Graph"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Graph"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Graph resources.",
                "description": "Retrieves the collection of Graph resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "monitoredMeasureTypes",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "monitoredMeasureTypes[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postGraphCollection",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "201": {
                        "description": "Graph resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            }
                        },
                        "links": {
                            "GetGraphItem": {
                                "operationId": "getGraphItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /graphs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Graph resource.",
                "description": "Creates a Graph resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Graph resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/graphs/{id}": {
            "get": {
                "operationId": "getGraphItem",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "200": {
                        "description": "Graph resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Graph resource.",
                "description": "Retrieves a Graph resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putGraphItem",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "200": {
                        "description": "Graph resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            }
                        },
                        "links": {
                            "GetGraphItem": {
                                "operationId": "getGraphItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /graphs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Graph resource.",
                "description": "Replaces the Graph resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Graph resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Graph"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteGraphItem",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "204": {
                        "description": "Graph resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Graph resource.",
                "description": "Removes the Graph resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/graphs/{id}/measures": {
            "get": {
                "operationId": "measuresGraphItem",
                "tags": [
                    "Graph"
                ],
                "responses": {
                    "200": {
                        "description": "Graph resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Graph"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Graph resource.",
                "description": "Retrieves a Graph resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/import_reports": {
            "get": {
                "operationId": "getImportReportCollection",
                "tags": [
                    "ImportReport"
                ],
                "responses": {
                    "200": {
                        "description": "ImportReport collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImportReport.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImportReport"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImportReport"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ImportReport resources.",
                "description": "Retrieves the collection of ImportReport resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postImportReportCollection",
                "tags": [
                    "ImportReport"
                ],
                "responses": {
                    "201": {
                        "description": "ImportReport resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            }
                        },
                        "links": {
                            "GetImportReportItem": {
                                "operationId": "getImportReportItem",
                                "parameters": {
                                    "subject": "$response.body#/subject"
                                },
                                "description": "The `subject` value returned in the response can be used as the `subject` parameter in `GET /import_reports/{subject}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ImportReport resource.",
                "description": "Creates a ImportReport resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ImportReport resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/import_reports/{subject}": {
            "get": {
                "operationId": "getImportReportItem",
                "tags": [
                    "ImportReport"
                ],
                "responses": {
                    "200": {
                        "description": "ImportReport resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ImportReport resource.",
                "description": "Retrieves a ImportReport resource.",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putImportReportItem",
                "tags": [
                    "ImportReport"
                ],
                "responses": {
                    "200": {
                        "description": "ImportReport resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReport"
                                }
                            }
                        },
                        "links": {
                            "GetImportReportItem": {
                                "operationId": "getImportReportItem",
                                "parameters": {
                                    "subject": "$response.body#/subject"
                                },
                                "description": "The `subject` value returned in the response can be used as the `subject` parameter in `GET /import_reports/{subject}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ImportReport resource.",
                "description": "Replaces the ImportReport resource.",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ImportReport resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportReport"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteImportReportItem",
                "tags": [
                    "ImportReport"
                ],
                "responses": {
                    "204": {
                        "description": "ImportReport resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ImportReport resource.",
                "description": "Removes the ImportReport resource.",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/input_categories": {
            "get": {
                "operationId": "getInputCategoryCollection",
                "tags": [
                    "InputCategory"
                ],
                "responses": {
                    "200": {
                        "description": "InputCategory collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InputCategory.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InputCategory"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InputCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of InputCategory resources.",
                "description": "Retrieves the collection of InputCategory resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "parent[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[children]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[parent]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/input_categories/{id}": {
            "get": {
                "operationId": "getInputCategoryItem",
                "tags": [
                    "InputCategory"
                ],
                "responses": {
                    "200": {
                        "description": "InputCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a InputCategory resource.",
                "description": "Retrieves a InputCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/input_categories/{id}/create_input/{projectId}": {
            "get": {
                "operationId": "create_inputInputCategoryItem",
                "tags": [
                    "InputCategory"
                ],
                "responses": {
                    "200": {
                        "description": "InputCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/InputCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a InputCategory resource.",
                "description": "Retrieves a InputCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/inputs": {
            "get": {
                "operationId": "getInputCollection",
                "tags": [
                    "Input"
                ],
                "responses": {
                    "200": {
                        "description": "Input collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Input.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Input"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Input"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Input resources.",
                "description": "Retrieves the collection of Input resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postInputCollection",
                "tags": [
                    "Input"
                ],
                "responses": {
                    "201": {
                        "description": "Input resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        },
                        "links": {
                            "GetInputItem": {
                                "operationId": "getInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Input resource.",
                "description": "Creates a Input resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Input resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Input.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Input"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Input"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/inputs/{id}": {
            "get": {
                "operationId": "getInputItem",
                "tags": [
                    "Input"
                ],
                "responses": {
                    "200": {
                        "description": "Input resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Input resource.",
                "description": "Retrieves a Input resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putInputItem",
                "tags": [
                    "Input"
                ],
                "responses": {
                    "200": {
                        "description": "Input resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Input"
                                }
                            }
                        },
                        "links": {
                            "GetInputItem": {
                                "operationId": "getInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Input resource.",
                "description": "Replaces the Input resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Input resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Input.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Input"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Input"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteInputItem",
                "tags": [
                    "Input"
                ],
                "responses": {
                    "204": {
                        "description": "Input resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Input resource.",
                "description": "Removes the Input resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/inputs/{id}/measures": {
            "get": {
                "operationId": "api_inputs_measures_get_subresourceInputSubresource",
                "tags": [
                    "Measure",
                    "Input"
                ],
                "responses": {
                    "200": {
                        "description": "Input resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Input resource.",
                "description": "Retrieves a Input resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Input identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/isotopes": {
            "get": {
                "operationId": "getIsotopeCollection",
                "tags": [
                    "Isotope"
                ],
                "responses": {
                    "200": {
                        "description": "Isotope collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Isotope.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Isotope"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Isotope"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Isotope resources.",
                "description": "Retrieves the collection of Isotope resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/isotopes/{id}": {
            "get": {
                "operationId": "getIsotopeItem",
                "tags": [
                    "Isotope"
                ],
                "responses": {
                    "200": {
                        "description": "Isotope resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Isotope.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Isotope"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Isotope"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Isotope resource.",
                "description": "Retrieves a Isotope resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/kit_nucleic_acid_dosages": {
            "get": {
                "operationId": "getKitNucleicAcidDosageCollection",
                "tags": [
                    "KitNucleicAcidDosage"
                ],
                "responses": {
                    "200": {
                        "description": "KitNucleicAcidDosage collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/KitNucleicAcidDosage.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KitNucleicAcidDosage"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KitNucleicAcidDosage"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of KitNucleicAcidDosage resources.",
                "description": "Retrieves the collection of KitNucleicAcidDosage resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/kit_nucleic_acid_dosages/{id}": {
            "get": {
                "operationId": "getKitNucleicAcidDosageItem",
                "tags": [
                    "KitNucleicAcidDosage"
                ],
                "responses": {
                    "200": {
                        "description": "KitNucleicAcidDosage resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KitNucleicAcidDosage.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KitNucleicAcidDosage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/KitNucleicAcidDosage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a KitNucleicAcidDosage resource.",
                "description": "Retrieves a KitNucleicAcidDosage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/leachates": {
            "get": {
                "operationId": "getLeachateCollection",
                "tags": [
                    "Leachate"
                ],
                "responses": {
                    "200": {
                        "description": "Leachate collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Leachate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Leachate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Leachate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Leachate resources.",
                "description": "Retrieves the collection of Leachate resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLeachateCollection",
                "tags": [
                    "Leachate"
                ],
                "responses": {
                    "201": {
                        "description": "Leachate resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            }
                        },
                        "links": {
                            "GetLeachateItem": {
                                "operationId": "getLeachateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /leachates/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Leachate resource.",
                "description": "Creates a Leachate resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Leachate resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/leachates/{id}": {
            "get": {
                "operationId": "getLeachateItem",
                "tags": [
                    "Leachate"
                ],
                "responses": {
                    "200": {
                        "description": "Leachate resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Leachate resource.",
                "description": "Retrieves a Leachate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLeachateItem",
                "tags": [
                    "Leachate"
                ],
                "responses": {
                    "200": {
                        "description": "Leachate resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leachate"
                                }
                            }
                        },
                        "links": {
                            "GetLeachateItem": {
                                "operationId": "getLeachateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /leachates/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Leachate resource.",
                "description": "Replaces the Leachate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Leachate resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Leachate"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLeachateItem",
                "tags": [
                    "Leachate"
                ],
                "responses": {
                    "204": {
                        "description": "Leachate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Leachate resource.",
                "description": "Removes the Leachate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/leachates/{id}/measures": {
            "get": {
                "operationId": "api_leachates_measures_get_subresourceLeachateSubresource",
                "tags": [
                    "Measure",
                    "Leachate"
                ],
                "responses": {
                    "200": {
                        "description": "Leachate resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Leachate resource.",
                "description": "Retrieves a Leachate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Leachate identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/libraries": {
            "get": {
                "operationId": "getLibraryCollection",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Library.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Library"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Library"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Library resources.",
                "description": "Retrieves the collection of Library resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLibraryCollection",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "201": {
                        "description": "Library resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryItem": {
                                "operationId": "getLibraryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /libraries/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Library resource.",
                "description": "Creates a Library resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Library resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/libraries/{id}": {
            "get": {
                "operationId": "getLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Library resource.",
                "description": "Retrieves a Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "200": {
                        "description": "Library resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryItem": {
                                "operationId": "getLibraryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /libraries/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Library resource.",
                "description": "Replaces the Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Library resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Library"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLibraryItem",
                "tags": [
                    "Library"
                ],
                "responses": {
                    "204": {
                        "description": "Library resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Library resource.",
                "description": "Removes the Library resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_kits": {
            "get": {
                "operationId": "getLibraryKitCollection",
                "tags": [
                    "LibraryKit"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryKit collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LibraryKit.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryKit"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryKit"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LibraryKit resources.",
                "description": "Retrieves the collection of LibraryKit resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_kits/{id}": {
            "get": {
                "operationId": "getLibraryKitItem",
                "tags": [
                    "LibraryKit"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryKit resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryKit.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryKit"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryKit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LibraryKit resource.",
                "description": "Retrieves a LibraryKit resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_layouts": {
            "get": {
                "operationId": "getLibraryLayoutCollection",
                "tags": [
                    "LibraryLayout"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryLayout collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LibraryLayout.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryLayout"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryLayout"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LibraryLayout resources.",
                "description": "Retrieves the collection of LibraryLayout resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_layouts/{id}": {
            "get": {
                "operationId": "getLibraryLayoutItem",
                "tags": [
                    "LibraryLayout"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryLayout resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryLayout.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryLayout"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryLayout"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LibraryLayout resource.",
                "description": "Retrieves a LibraryLayout resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_procedures": {
            "get": {
                "operationId": "getLibraryProcedureCollection",
                "tags": [
                    "LibraryProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LibraryProcedure resources.",
                "description": "Retrieves the collection of LibraryProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postLibraryProcedureCollection",
                "tags": [
                    "LibraryProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "LibraryProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryProcedureItem": {
                                "operationId": "getLibraryProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /library_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a LibraryProcedure resource.",
                "description": "Creates a LibraryProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new LibraryProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/library_procedures/{id}": {
            "get": {
                "operationId": "getLibraryProcedureItem",
                "tags": [
                    "LibraryProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LibraryProcedure resource.",
                "description": "Retrieves a LibraryProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putLibraryProcedureItem",
                "tags": [
                    "LibraryProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetLibraryProcedureItem": {
                                "operationId": "getLibraryProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /library_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the LibraryProcedure resource.",
                "description": "Replaces the LibraryProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated LibraryProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/LibraryProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteLibraryProcedureItem",
                "tags": [
                    "LibraryProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "LibraryProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the LibraryProcedure resource.",
                "description": "Removes the LibraryProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_screening_strategies": {
            "get": {
                "operationId": "getLibraryScreeningStrategyCollection",
                "tags": [
                    "LibraryScreeningStrategy"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryScreeningStrategy collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LibraryScreeningStrategy.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryScreeningStrategy"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryScreeningStrategy"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LibraryScreeningStrategy resources.",
                "description": "Retrieves the collection of LibraryScreeningStrategy resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_screening_strategies/{id}": {
            "get": {
                "operationId": "getLibraryScreeningStrategyItem",
                "tags": [
                    "LibraryScreeningStrategy"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryScreeningStrategy resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryScreeningStrategy.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryScreeningStrategy"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryScreeningStrategy"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LibraryScreeningStrategy resource.",
                "description": "Retrieves a LibraryScreeningStrategy resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_vectors": {
            "get": {
                "operationId": "getLibraryVectorCollection",
                "tags": [
                    "LibraryVector"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryVector collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LibraryVector.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryVector"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LibraryVector"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LibraryVector resources.",
                "description": "Retrieves the collection of LibraryVector resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/library_vectors/{id}": {
            "get": {
                "operationId": "getLibraryVectorItem",
                "tags": [
                    "LibraryVector"
                ],
                "responses": {
                    "200": {
                        "description": "LibraryVector resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryVector.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryVector"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LibraryVector"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LibraryVector resource.",
                "description": "Retrieves a LibraryVector resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/locations": {
            "get": {
                "operationId": "getLocationCollection",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Location resources.",
                "description": "Retrieves the collection of Location resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/locations/{id}": {
            "get": {
                "operationId": "getLocationItem",
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "Location resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Location resource.",
                "description": "Retrieves a Location resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/log_entries": {
            "get": {
                "operationId": "getLogEntryCollection",
                "tags": [
                    "LogEntry"
                ],
                "responses": {
                    "200": {
                        "description": "LogEntry collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LogEntry.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LogEntry"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LogEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of LogEntry resources.",
                "description": "Retrieves the collection of LogEntry resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date[before]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date[strictly_before]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date[after]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date[strictly_after]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "date[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "actor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "entityUri",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "entityUri[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "entityType",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "entityLabel",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "eventName",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "eventName[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "projectUuid",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "projectUuid[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "projectPart",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "projectPart[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "order[date]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[actor]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/log_entries/{id}": {
            "get": {
                "operationId": "getLogEntryItem",
                "tags": [
                    "LogEntry"
                ],
                "responses": {
                    "200": {
                        "description": "LogEntry resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogEntry.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogEntry"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogEntry"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a LogEntry resource.",
                "description": "Retrieves a LogEntry resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/manufactured_materials": {
            "get": {
                "operationId": "getManufacturedMaterialCollection",
                "tags": [
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "ManufacturedMaterial collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManufacturedMaterial"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ManufacturedMaterial"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ManufacturedMaterial resources.",
                "description": "Retrieves the collection of ManufacturedMaterial resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postManufacturedMaterialCollection",
                "tags": [
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "201": {
                        "description": "ManufacturedMaterial resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            }
                        },
                        "links": {
                            "GetManufacturedMaterialItem": {
                                "operationId": "getManufacturedMaterialItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /manufactured_materials/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ManufacturedMaterial resource.",
                "description": "Creates a ManufacturedMaterial resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ManufacturedMaterial resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/manufactured_materials/{id}": {
            "get": {
                "operationId": "getManufacturedMaterialItem",
                "tags": [
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "ManufacturedMaterial resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ManufacturedMaterial resource.",
                "description": "Retrieves a ManufacturedMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putManufacturedMaterialItem",
                "tags": [
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "ManufacturedMaterial resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManufacturedMaterial"
                                }
                            }
                        },
                        "links": {
                            "GetManufacturedMaterialItem": {
                                "operationId": "getManufacturedMaterialItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /manufactured_materials/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ManufacturedMaterial resource.",
                "description": "Replaces the ManufacturedMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ManufacturedMaterial resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ManufacturedMaterial"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteManufacturedMaterialItem",
                "tags": [
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "204": {
                        "description": "ManufacturedMaterial resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ManufacturedMaterial resource.",
                "description": "Removes the ManufacturedMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/manufactured_materials/{id}/measures": {
            "get": {
                "operationId": "api_manufactured_materials_measures_get_subresourceManufacturedMaterialSubresource",
                "tags": [
                    "Measure",
                    "ManufacturedMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "ManufacturedMaterial resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ManufacturedMaterial resource.",
                "description": "Retrieves a ManufacturedMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ManufacturedMaterial identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/material_types": {
            "get": {
                "operationId": "getMaterialTypeCollection",
                "tags": [
                    "MaterialType"
                ],
                "responses": {
                    "200": {
                        "description": "MaterialType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MaterialType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MaterialType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MaterialType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MaterialType resources.",
                "description": "Retrieves the collection of MaterialType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/material_types/{id}": {
            "get": {
                "operationId": "getMaterialTypeItem",
                "tags": [
                    "MaterialType"
                ],
                "responses": {
                    "200": {
                        "description": "MaterialType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaterialType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MaterialType resource.",
                "description": "Retrieves a MaterialType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/matrix_types": {
            "get": {
                "operationId": "getMatrixTypeCollection",
                "tags": [
                    "MatrixType"
                ],
                "responses": {
                    "200": {
                        "description": "MatrixType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MatrixType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MatrixType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MatrixType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MatrixType resources.",
                "description": "Retrieves the collection of MatrixType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/matrix_types/{id}": {
            "get": {
                "operationId": "getMatrixTypeItem",
                "tags": [
                    "MatrixType"
                ],
                "responses": {
                    "200": {
                        "description": "MatrixType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatrixType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatrixType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatrixType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MatrixType resource.",
                "description": "Retrieves a MatrixType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_type_categories": {
            "get": {
                "operationId": "getMeasureTypeCategoryCollection",
                "tags": [
                    "MeasureTypeCategory"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeCategory collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureTypeCategory"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureTypeCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MeasureTypeCategory resources.",
                "description": "Retrieves the collection of MeasureTypeCategory resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "parent[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "types[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[children]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[parent]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[types]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMeasureTypeCategoryCollection",
                "tags": [
                    "MeasureTypeCategory"
                ],
                "responses": {
                    "201": {
                        "description": "MeasureTypeCategory resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeCategoryItem": {
                                "operationId": "getMeasureTypeCategoryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_type_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MeasureTypeCategory resource.",
                "description": "Creates a MeasureTypeCategory resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MeasureTypeCategory resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_type_categories/{id}": {
            "get": {
                "operationId": "getMeasureTypeCategoryItem",
                "tags": [
                    "MeasureTypeCategory"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MeasureTypeCategory resource.",
                "description": "Retrieves a MeasureTypeCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMeasureTypeCategoryItem",
                "tags": [
                    "MeasureTypeCategory"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeCategory resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeCategory"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeCategoryItem": {
                                "operationId": "getMeasureTypeCategoryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_type_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MeasureTypeCategory resource.",
                "description": "Replaces the MeasureTypeCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MeasureTypeCategory resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeCategory"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMeasureTypeCategoryItem",
                "tags": [
                    "MeasureTypeCategory"
                ],
                "responses": {
                    "204": {
                        "description": "MeasureTypeCategory resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MeasureTypeCategory resource.",
                "description": "Removes the MeasureTypeCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_type_tags": {
            "get": {
                "operationId": "getMeasureTypeTagCollection",
                "tags": [
                    "MeasureTypeTag"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeTag collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureTypeTag"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureTypeTag"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MeasureTypeTag resources.",
                "description": "Retrieves the collection of MeasureTypeTag resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMeasureTypeTagCollection",
                "tags": [
                    "MeasureTypeTag"
                ],
                "responses": {
                    "201": {
                        "description": "MeasureTypeTag resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeTagItem": {
                                "operationId": "getMeasureTypeTagItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_type_tags/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MeasureTypeTag resource.",
                "description": "Creates a MeasureTypeTag resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MeasureTypeTag resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_type_tags/{id}": {
            "get": {
                "operationId": "getMeasureTypeTagItem",
                "tags": [
                    "MeasureTypeTag"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeTag resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MeasureTypeTag resource.",
                "description": "Retrieves a MeasureTypeTag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMeasureTypeTagItem",
                "tags": [
                    "MeasureTypeTag"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureTypeTag resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureTypeTag"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeTagItem": {
                                "operationId": "getMeasureTypeTagItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_type_tags/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MeasureTypeTag resource.",
                "description": "Replaces the MeasureTypeTag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MeasureTypeTag resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureTypeTag"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMeasureTypeTagItem",
                "tags": [
                    "MeasureTypeTag"
                ],
                "responses": {
                    "204": {
                        "description": "MeasureTypeTag resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MeasureTypeTag resource.",
                "description": "Removes the MeasureTypeTag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_types": {
            "get": {
                "operationId": "getMeasureTypeCollection",
                "tags": [
                    "MeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MeasureType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeasureType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MeasureType resources.",
                "description": "Retrieves the collection of MeasureType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "category[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "tags[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "tags.slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "tags.slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMeasureTypeCollection",
                "tags": [
                    "MeasureType"
                ],
                "responses": {
                    "201": {
                        "description": "MeasureType resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeItem": {
                                "operationId": "getMeasureTypeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_types/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MeasureType resource.",
                "description": "Creates a MeasureType resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MeasureType resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/measure_types/{id}": {
            "get": {
                "operationId": "getMeasureTypeItem",
                "tags": [
                    "MeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MeasureType resource.",
                "description": "Retrieves a MeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMeasureTypeItem",
                "tags": [
                    "MeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MeasureType resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasureType"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureTypeItem": {
                                "operationId": "getMeasureTypeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measure_types/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MeasureType resource.",
                "description": "Replaces the MeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MeasureType resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasureType"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMeasureTypeItem",
                "tags": [
                    "MeasureType"
                ],
                "responses": {
                    "204": {
                        "description": "MeasureType resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MeasureType resource.",
                "description": "Removes the MeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/measurements": {
            "get": {
                "operationId": "getMeasurementCollection",
                "tags": [
                    "Measurement"
                ],
                "responses": {
                    "200": {
                        "description": "Measurement collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measurement.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measurement"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measurement"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Measurement resources.",
                "description": "Retrieves the collection of Measurement resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "type[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMeasurementCollection",
                "tags": [
                    "Measurement"
                ],
                "responses": {
                    "201": {
                        "description": "Measurement resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        },
                        "links": {
                            "GetMeasurementItem": {
                                "operationId": "getMeasurementItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measurements/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Measurement resource.",
                "description": "Creates a Measurement resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Measurement resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/measurements/{id}": {
            "get": {
                "operationId": "getMeasurementItem",
                "tags": [
                    "Measurement"
                ],
                "responses": {
                    "200": {
                        "description": "Measurement resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Measurement resource.",
                "description": "Retrieves a Measurement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMeasurementItem",
                "tags": [
                    "Measurement"
                ],
                "responses": {
                    "200": {
                        "description": "Measurement resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        },
                        "links": {
                            "GetMeasurementItem": {
                                "operationId": "getMeasurementItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measurements/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Measurement resource.",
                "description": "Replaces the Measurement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Measurement resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Measurement"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMeasurementItem",
                "tags": [
                    "Measurement"
                ],
                "responses": {
                    "204": {
                        "description": "Measurement resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Measurement resource.",
                "description": "Removes the Measurement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/measures": {
            "get": {
                "operationId": "getMeasureCollection",
                "tags": [
                    "Measure"
                ],
                "responses": {
                    "200": {
                        "description": "Measure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Measure resources.",
                "description": "Retrieves the collection of Measure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMeasureCollection",
                "tags": [
                    "Measure"
                ],
                "responses": {
                    "201": {
                        "description": "Measure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureItem": {
                                "operationId": "getMeasureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Measure resource.",
                "description": "Creates a Measure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Measure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/measures/{id}": {
            "get": {
                "operationId": "getMeasureItem",
                "tags": [
                    "Measure"
                ],
                "responses": {
                    "200": {
                        "description": "Measure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Measure resource.",
                "description": "Retrieves a Measure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMeasureItem",
                "tags": [
                    "Measure"
                ],
                "responses": {
                    "200": {
                        "description": "Measure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        },
                        "links": {
                            "GetMeasureItem": {
                                "operationId": "getMeasureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /measures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Measure resource.",
                "description": "Replaces the Measure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Measure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Measure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMeasureItem",
                "tags": [
                    "Measure"
                ],
                "responses": {
                    "204": {
                        "description": "Measure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Measure resource.",
                "description": "Removes the Measure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/membrane_types": {
            "get": {
                "operationId": "getMembraneTypeCollection",
                "tags": [
                    "MembraneType"
                ],
                "responses": {
                    "200": {
                        "description": "MembraneType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MembraneType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MembraneType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MembraneType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MembraneType resources.",
                "description": "Retrieves the collection of MembraneType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/membrane_types/{id}": {
            "get": {
                "operationId": "getMembraneTypeItem",
                "tags": [
                    "MembraneType"
                ],
                "responses": {
                    "200": {
                        "description": "MembraneType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MembraneType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MembraneType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MembraneType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MembraneType resource.",
                "description": "Retrieves a MembraneType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/membranes": {
            "get": {
                "operationId": "getMembraneCollection",
                "tags": [
                    "Membrane"
                ],
                "responses": {
                    "200": {
                        "description": "Membrane collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Membrane.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Membrane"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Membrane"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Membrane resources.",
                "description": "Retrieves the collection of Membrane resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMembraneCollection",
                "tags": [
                    "Membrane"
                ],
                "responses": {
                    "201": {
                        "description": "Membrane resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            }
                        },
                        "links": {
                            "GetMembraneItem": {
                                "operationId": "getMembraneItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /membranes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Membrane resource.",
                "description": "Creates a Membrane resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Membrane resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/membranes/{id}": {
            "get": {
                "operationId": "getMembraneItem",
                "tags": [
                    "Membrane"
                ],
                "responses": {
                    "200": {
                        "description": "Membrane resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Membrane resource.",
                "description": "Retrieves a Membrane resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMembraneItem",
                "tags": [
                    "Membrane"
                ],
                "responses": {
                    "200": {
                        "description": "Membrane resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Membrane"
                                }
                            }
                        },
                        "links": {
                            "GetMembraneItem": {
                                "operationId": "getMembraneItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /membranes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Membrane resource.",
                "description": "Replaces the Membrane resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Membrane resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Membrane"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMembraneItem",
                "tags": [
                    "Membrane"
                ],
                "responses": {
                    "204": {
                        "description": "Membrane resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Membrane resource.",
                "description": "Removes the Membrane resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/membranes/{id}/measures": {
            "get": {
                "operationId": "api_membranes_measures_get_subresourceMembraneSubresource",
                "tags": [
                    "Measure",
                    "Membrane"
                ],
                "responses": {
                    "200": {
                        "description": "Membrane resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Membrane resource.",
                "description": "Retrieves a Membrane resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Membrane identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/metabarcoding_bioinformatic_runs": {
            "get": {
                "operationId": "getMetabarcodingBioinformaticRunCollection",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "200": {
                        "description": "MetabarcodingBioinformaticRun collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MetabarcodingBioinformaticRun resources.",
                "description": "Retrieves the collection of MetabarcodingBioinformaticRun resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMetabarcodingBioinformaticRunCollection",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "201": {
                        "description": "MetabarcodingBioinformaticRun resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            }
                        },
                        "links": {
                            "GetMetabarcodingBioinformaticRunItem": {
                                "operationId": "getMetabarcodingBioinformaticRunItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /metabarcoding_bioinformatic_runs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MetabarcodingBioinformaticRun resource.",
                "description": "Creates a MetabarcodingBioinformaticRun resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MetabarcodingBioinformaticRun resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/metabarcoding_bioinformatic_runs/{id}": {
            "get": {
                "operationId": "getMetabarcodingBioinformaticRunItem",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "200": {
                        "description": "MetabarcodingBioinformaticRun resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MetabarcodingBioinformaticRun resource.",
                "description": "Retrieves a MetabarcodingBioinformaticRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMetabarcodingBioinformaticRunItem",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "200": {
                        "description": "MetabarcodingBioinformaticRun resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            }
                        },
                        "links": {
                            "GetMetabarcodingBioinformaticRunItem": {
                                "operationId": "getMetabarcodingBioinformaticRunItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /metabarcoding_bioinformatic_runs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MetabarcodingBioinformaticRun resource.",
                "description": "Replaces the MetabarcodingBioinformaticRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MetabarcodingBioinformaticRun resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMetabarcodingBioinformaticRunItem",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "204": {
                        "description": "MetabarcodingBioinformaticRun resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MetabarcodingBioinformaticRun resource.",
                "description": "Removes the MetabarcodingBioinformaticRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/metabarcoding_bioinformation_run/{id}/sample_result": {
            "get": {
                "operationId": "sample_resultMetabarcodingBioinformaticRunItem",
                "tags": [
                    "MetabarcodingBioinformaticRun"
                ],
                "responses": {
                    "200": {
                        "description": "MetabarcodingBioinformaticRun resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetabarcodingBioinformaticRun"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MetabarcodingBioinformaticRun resource.",
                "description": "Retrieves a MetabarcodingBioinformaticRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/mixing_types": {
            "get": {
                "operationId": "getMixingTypeCollection",
                "tags": [
                    "MixingType"
                ],
                "responses": {
                    "200": {
                        "description": "MixingType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MixingType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MixingType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MixingType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MixingType resources.",
                "description": "Retrieves the collection of MixingType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/mixing_types/{id}": {
            "get": {
                "operationId": "getMixingTypeItem",
                "tags": [
                    "MixingType"
                ],
                "responses": {
                    "200": {
                        "description": "MixingType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixingType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixingType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MixingType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MixingType resource.",
                "description": "Retrieves a MixingType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/mixings": {
            "get": {
                "operationId": "getMixingCollection",
                "tags": [
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "Mixing collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Mixing.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mixing"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mixing"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Mixing resources.",
                "description": "Retrieves the collection of Mixing resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMixingCollection",
                "tags": [
                    "Mixing"
                ],
                "responses": {
                    "201": {
                        "description": "Mixing resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            }
                        },
                        "links": {
                            "GetMixingItem": {
                                "operationId": "getMixingItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /mixings/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Mixing resource.",
                "description": "Creates a Mixing resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Mixing resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/mixings/{id}": {
            "get": {
                "operationId": "getMixingItem",
                "tags": [
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "Mixing resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Mixing resource.",
                "description": "Retrieves a Mixing resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMixingItem",
                "tags": [
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "Mixing resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mixing"
                                }
                            }
                        },
                        "links": {
                            "GetMixingItem": {
                                "operationId": "getMixingItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /mixings/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Mixing resource.",
                "description": "Replaces the Mixing resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Mixing resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMixingItem",
                "tags": [
                    "Mixing"
                ],
                "responses": {
                    "204": {
                        "description": "Mixing resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Mixing resource.",
                "description": "Removes the Mixing resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/mixings/{id}/measures": {
            "get": {
                "operationId": "api_mixings_measures_get_subresourceMixingSubresource",
                "tags": [
                    "Measure",
                    "Mixing"
                ],
                "responses": {
                    "200": {
                        "description": "Mixing resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Mixing resource.",
                "description": "Retrieves a Mixing resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mixing identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/modecom_categories": {
            "get": {
                "operationId": "getModecomCategoryCollection",
                "tags": [
                    "ModecomCategory"
                ],
                "responses": {
                    "200": {
                        "description": "ModecomCategory collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ModecomCategory.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModecomCategory"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ModecomCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ModecomCategory resources.",
                "description": "Retrieves the collection of ModecomCategory resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/modecom_categories/{id}": {
            "get": {
                "operationId": "getModecomCategoryItem",
                "tags": [
                    "ModecomCategory"
                ],
                "responses": {
                    "200": {
                        "description": "ModecomCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModecomCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModecomCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModecomCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ModecomCategory resource.",
                "description": "Retrieves a ModecomCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/modecoms": {
            "get": {
                "operationId": "getModecomCollection",
                "tags": [
                    "Modecom"
                ],
                "responses": {
                    "200": {
                        "description": "Modecom collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Modecom.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Modecom resources.",
                "description": "Retrieves the collection of Modecom resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postModecomCollection",
                "tags": [
                    "Modecom"
                ],
                "responses": {
                    "201": {
                        "description": "Modecom resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            }
                        },
                        "links": {
                            "GetModecomItem": {
                                "operationId": "getModecomItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /modecoms/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Modecom resource.",
                "description": "Creates a Modecom resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Modecom resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/modecoms/{id}": {
            "get": {
                "operationId": "getModecomItem",
                "tags": [
                    "Modecom"
                ],
                "responses": {
                    "200": {
                        "description": "Modecom resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Modecom resource.",
                "description": "Retrieves a Modecom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putModecomItem",
                "tags": [
                    "Modecom"
                ],
                "responses": {
                    "200": {
                        "description": "Modecom resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Modecom"
                                }
                            }
                        },
                        "links": {
                            "GetModecomItem": {
                                "operationId": "getModecomItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /modecoms/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Modecom resource.",
                "description": "Replaces the Modecom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Modecom resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Modecom"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteModecomItem",
                "tags": [
                    "Modecom"
                ],
                "responses": {
                    "204": {
                        "description": "Modecom resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Modecom resource.",
                "description": "Removes the Modecom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/monitored_measure_types": {
            "get": {
                "operationId": "getMonitoredMeasureTypeCollection",
                "tags": [
                    "MonitoredMeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasureType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MonitoredMeasureType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MonitoredMeasureType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MonitoredMeasureType resources.",
                "description": "Retrieves the collection of MonitoredMeasureType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "operation.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "operation.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "locations",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "locations[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMonitoredMeasureTypeCollection",
                "tags": [
                    "MonitoredMeasureType"
                ],
                "responses": {
                    "201": {
                        "description": "MonitoredMeasureType resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            }
                        },
                        "links": {
                            "GetMonitoredMeasureTypeItem": {
                                "operationId": "getMonitoredMeasureTypeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /monitored_measure_types/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MonitoredMeasureType resource.",
                "description": "Creates a MonitoredMeasureType resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MonitoredMeasureType resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/monitored_measure_types/{id}": {
            "get": {
                "operationId": "getMonitoredMeasureTypeItem",
                "tags": [
                    "MonitoredMeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasureType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MonitoredMeasureType resource.",
                "description": "Retrieves a MonitoredMeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMonitoredMeasureTypeItem",
                "tags": [
                    "MonitoredMeasureType"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasureType resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasureType"
                                }
                            }
                        },
                        "links": {
                            "GetMonitoredMeasureTypeItem": {
                                "operationId": "getMonitoredMeasureTypeItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /monitored_measure_types/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MonitoredMeasureType resource.",
                "description": "Replaces the MonitoredMeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MonitoredMeasureType resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasureType"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMonitoredMeasureTypeItem",
                "tags": [
                    "MonitoredMeasureType"
                ],
                "responses": {
                    "204": {
                        "description": "MonitoredMeasureType resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MonitoredMeasureType resource.",
                "description": "Removes the MonitoredMeasureType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/monitored_measures": {
            "get": {
                "operationId": "getMonitoredMeasureCollection",
                "tags": [
                    "MonitoredMeasure"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MonitoredMeasure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MonitoredMeasure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MonitoredMeasure resources.",
                "description": "Retrieves the collection of MonitoredMeasure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "measurement",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "measurement[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMonitoredMeasureCollection",
                "tags": [
                    "MonitoredMeasure"
                ],
                "responses": {
                    "201": {
                        "description": "MonitoredMeasure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            }
                        },
                        "links": {
                            "GetMonitoredMeasureItem": {
                                "operationId": "getMonitoredMeasureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /monitored_measures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MonitoredMeasure resource.",
                "description": "Creates a MonitoredMeasure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MonitoredMeasure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/monitored_measures/{id}": {
            "get": {
                "operationId": "getMonitoredMeasureItem",
                "tags": [
                    "MonitoredMeasure"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MonitoredMeasure resource.",
                "description": "Retrieves a MonitoredMeasure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMonitoredMeasureItem",
                "tags": [
                    "MonitoredMeasure"
                ],
                "responses": {
                    "200": {
                        "description": "MonitoredMeasure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitoredMeasure"
                                }
                            }
                        },
                        "links": {
                            "GetMonitoredMeasureItem": {
                                "operationId": "getMonitoredMeasureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /monitored_measures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MonitoredMeasure resource.",
                "description": "Replaces the MonitoredMeasure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MonitoredMeasure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MonitoredMeasure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMonitoredMeasureItem",
                "tags": [
                    "MonitoredMeasure"
                ],
                "responses": {
                    "204": {
                        "description": "MonitoredMeasure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MonitoredMeasure resource.",
                "description": "Removes the MonitoredMeasure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/multiplex_identifiers": {
            "get": {
                "operationId": "getMultiplexIdentifierCollection",
                "tags": [
                    "MultiplexIdentifier"
                ],
                "responses": {
                    "200": {
                        "description": "MultiplexIdentifier collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of MultiplexIdentifier resources.",
                "description": "Retrieves the collection of MultiplexIdentifier resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[sequence]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postMultiplexIdentifierCollection",
                "tags": [
                    "MultiplexIdentifier"
                ],
                "responses": {
                    "201": {
                        "description": "MultiplexIdentifier resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            }
                        },
                        "links": {
                            "GetMultiplexIdentifierItem": {
                                "operationId": "getMultiplexIdentifierItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /multiplex_identifiers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a MultiplexIdentifier resource.",
                "description": "Creates a MultiplexIdentifier resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new MultiplexIdentifier resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/multiplex_identifiers/{id}": {
            "get": {
                "operationId": "getMultiplexIdentifierItem",
                "tags": [
                    "MultiplexIdentifier"
                ],
                "responses": {
                    "200": {
                        "description": "MultiplexIdentifier resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a MultiplexIdentifier resource.",
                "description": "Retrieves a MultiplexIdentifier resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putMultiplexIdentifierItem",
                "tags": [
                    "MultiplexIdentifier"
                ],
                "responses": {
                    "200": {
                        "description": "MultiplexIdentifier resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiplexIdentifier"
                                }
                            }
                        },
                        "links": {
                            "GetMultiplexIdentifierItem": {
                                "operationId": "getMultiplexIdentifierItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /multiplex_identifiers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the MultiplexIdentifier resource.",
                "description": "Replaces the MultiplexIdentifier resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated MultiplexIdentifier resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/MultiplexIdentifier"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteMultiplexIdentifierItem",
                "tags": [
                    "MultiplexIdentifier"
                ],
                "responses": {
                    "204": {
                        "description": "MultiplexIdentifier resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the MultiplexIdentifier resource.",
                "description": "Removes the MultiplexIdentifier resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/native_biomass_types": {
            "get": {
                "operationId": "getNativeBiomassTypeCollection",
                "tags": [
                    "NativeBiomassType"
                ],
                "responses": {
                    "200": {
                        "description": "NativeBiomassType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NativeBiomassType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NativeBiomassType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NativeBiomassType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NativeBiomassType resources.",
                "description": "Retrieves the collection of NativeBiomassType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/native_biomass_types/{id}": {
            "get": {
                "operationId": "getNativeBiomassTypeItem",
                "tags": [
                    "NativeBiomassType"
                ],
                "responses": {
                    "200": {
                        "description": "NativeBiomassType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NativeBiomassType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NativeBiomassType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NativeBiomassType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NativeBiomassType resource.",
                "description": "Retrieves a NativeBiomassType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_amplification_procedures": {
            "get": {
                "operationId": "getNucleicAcidAmplificationProcedureCollection",
                "tags": [
                    "NucleicAcidAmplificationProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidAmplificationProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NucleicAcidAmplificationProcedure resources.",
                "description": "Retrieves the collection of NucleicAcidAmplificationProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postNucleicAcidAmplificationProcedureCollection",
                "tags": [
                    "NucleicAcidAmplificationProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "NucleicAcidAmplificationProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidAmplificationProcedureItem": {
                                "operationId": "getNucleicAcidAmplificationProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acid_amplification_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a NucleicAcidAmplificationProcedure resource.",
                "description": "Creates a NucleicAcidAmplificationProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new NucleicAcidAmplificationProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_amplification_procedures/{id}": {
            "get": {
                "operationId": "getNucleicAcidAmplificationProcedureItem",
                "tags": [
                    "NucleicAcidAmplificationProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidAmplificationProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NucleicAcidAmplificationProcedure resource.",
                "description": "Retrieves a NucleicAcidAmplificationProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putNucleicAcidAmplificationProcedureItem",
                "tags": [
                    "NucleicAcidAmplificationProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidAmplificationProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidAmplificationProcedureItem": {
                                "operationId": "getNucleicAcidAmplificationProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acid_amplification_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the NucleicAcidAmplificationProcedure resource.",
                "description": "Replaces the NucleicAcidAmplificationProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated NucleicAcidAmplificationProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidAmplificationProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteNucleicAcidAmplificationProcedureItem",
                "tags": [
                    "NucleicAcidAmplificationProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "NucleicAcidAmplificationProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the NucleicAcidAmplificationProcedure resource.",
                "description": "Removes the NucleicAcidAmplificationProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_dosage_methods": {
            "get": {
                "operationId": "getNucleicAcidDosageMethodCollection",
                "tags": [
                    "NucleicAcidDosageMethod"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidDosageMethod collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NucleicAcidDosageMethod.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidDosageMethod"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidDosageMethod"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NucleicAcidDosageMethod resources.",
                "description": "Retrieves the collection of NucleicAcidDosageMethod resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_dosage_methods/{id}": {
            "get": {
                "operationId": "getNucleicAcidDosageMethodItem",
                "tags": [
                    "NucleicAcidDosageMethod"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidDosageMethod resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidDosageMethod.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidDosageMethod"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidDosageMethod"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NucleicAcidDosageMethod resource.",
                "description": "Retrieves a NucleicAcidDosageMethod resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_extraction_methods": {
            "get": {
                "operationId": "getNucleicAcidExtractionMethodCollection",
                "tags": [
                    "NucleicAcidExtractionMethod"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidExtractionMethod collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NucleicAcidExtractionMethod.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidExtractionMethod"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidExtractionMethod"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NucleicAcidExtractionMethod resources.",
                "description": "Retrieves the collection of NucleicAcidExtractionMethod resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_extraction_methods/{id}": {
            "get": {
                "operationId": "getNucleicAcidExtractionMethodItem",
                "tags": [
                    "NucleicAcidExtractionMethod"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidExtractionMethod resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionMethod.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionMethod"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionMethod"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NucleicAcidExtractionMethod resource.",
                "description": "Retrieves a NucleicAcidExtractionMethod resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_extraction_procedures": {
            "get": {
                "operationId": "getNucleicAcidExtractionProcedureCollection",
                "tags": [
                    "NucleicAcidExtractionProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidExtractionProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NucleicAcidExtractionProcedure resources.",
                "description": "Retrieves the collection of NucleicAcidExtractionProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postNucleicAcidExtractionProcedureCollection",
                "tags": [
                    "NucleicAcidExtractionProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "NucleicAcidExtractionProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidExtractionProcedureItem": {
                                "operationId": "getNucleicAcidExtractionProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acid_extraction_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a NucleicAcidExtractionProcedure resource.",
                "description": "Creates a NucleicAcidExtractionProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new NucleicAcidExtractionProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acid_extraction_procedures/{id}": {
            "get": {
                "operationId": "getNucleicAcidExtractionProcedureItem",
                "tags": [
                    "NucleicAcidExtractionProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidExtractionProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NucleicAcidExtractionProcedure resource.",
                "description": "Retrieves a NucleicAcidExtractionProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putNucleicAcidExtractionProcedureItem",
                "tags": [
                    "NucleicAcidExtractionProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcidExtractionProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidExtractionProcedureItem": {
                                "operationId": "getNucleicAcidExtractionProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acid_extraction_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the NucleicAcidExtractionProcedure resource.",
                "description": "Replaces the NucleicAcidExtractionProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated NucleicAcidExtractionProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcidExtractionProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteNucleicAcidExtractionProcedureItem",
                "tags": [
                    "NucleicAcidExtractionProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "NucleicAcidExtractionProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the NucleicAcidExtractionProcedure resource.",
                "description": "Removes the NucleicAcidExtractionProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acids": {
            "get": {
                "operationId": "getNucleicAcidCollection",
                "tags": [
                    "NucleicAcid"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcid collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NucleicAcid.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcid"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NucleicAcid"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of NucleicAcid resources.",
                "description": "Retrieves the collection of NucleicAcid resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postNucleicAcidCollection",
                "tags": [
                    "NucleicAcid"
                ],
                "responses": {
                    "201": {
                        "description": "NucleicAcid resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidItem": {
                                "operationId": "getNucleicAcidItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acids/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a NucleicAcid resource.",
                "description": "Creates a NucleicAcid resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new NucleicAcid resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acids/{id}": {
            "get": {
                "operationId": "getNucleicAcidItem",
                "tags": [
                    "NucleicAcid"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcid resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a NucleicAcid resource.",
                "description": "Retrieves a NucleicAcid resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putNucleicAcidItem",
                "tags": [
                    "NucleicAcid"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcid resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            }
                        },
                        "links": {
                            "GetNucleicAcidItem": {
                                "operationId": "getNucleicAcidItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /nucleic_acids/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the NucleicAcid resource.",
                "description": "Replaces the NucleicAcid resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated NucleicAcid resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/NucleicAcid"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteNucleicAcidItem",
                "tags": [
                    "NucleicAcid"
                ],
                "responses": {
                    "204": {
                        "description": "NucleicAcid resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the NucleicAcid resource.",
                "description": "Removes the NucleicAcid resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/nucleic_acids/{id}/measures": {
            "get": {
                "operationId": "api_nucleic_acids_measures_get_subresourceNucleicAcidSubresource",
                "tags": [
                    "Measure",
                    "NucleicAcid"
                ],
                "responses": {
                    "200": {
                        "description": "NucleicAcid resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a NucleicAcid resource.",
                "description": "Retrieves a NucleicAcid resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "NucleicAcid identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/operation/{id}/export/samples/{format}/{templateOnly}": {
            "get": {
                "operationId": "export_samplesOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "200": {
                        "description": "Operation resource",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Operation resource.",
                "description": "Retrieves a Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/operation/{id}/import/{type}": {
            "post": {
                "operationId": "importOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "201": {
                        "description": "Operation resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.ImportReport"
                                }
                            }
                        },
                        "links": {
                            "GetOperationItem": {
                                "operationId": "getOperationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /operations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a Operation resource.",
                "description": "Creates a Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new Operation resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/operation/{id}/monitored_data/export/{format}/{template}/{withEmptyColumns}": {
            "post": {
                "operationId": "export_monitored_dataOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "201": {
                        "description": "Operation resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        },
                        "links": {
                            "GetOperationItem": {
                                "operationId": "getOperationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /operations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a Operation resource.",
                "description": "Creates a Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new Operation resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/operation/{id}/monitored_data/{format}/{template}": {
            "post": {
                "operationId": "export_monitored_data_templateOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "201": {
                        "description": "Operation resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        },
                        "links": {
                            "GetOperationItem": {
                                "operationId": "getOperationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /operations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a Operation resource.",
                "description": "Creates a Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new Operation resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/operations": {
            "get": {
                "operationId": "getOperationCollection",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "200": {
                        "description": "Operation collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Operation.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Operation"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Operation"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Operation resources.",
                "description": "Retrieves the collection of Operation resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postOperationCollection",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "201": {
                        "description": "Operation resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        },
                        "links": {
                            "GetOperationItem": {
                                "operationId": "getOperationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /operations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Operation resource.",
                "description": "Creates a Operation resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Operation resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/operations/{id}": {
            "get": {
                "operationId": "getOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "200": {
                        "description": "Operation resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Operation resource.",
                "description": "Retrieves a Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "200": {
                        "description": "Operation resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        },
                        "links": {
                            "GetOperationItem": {
                                "operationId": "getOperationItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /operations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Operation resource.",
                "description": "Replaces the Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Operation resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteOperationItem",
                "tags": [
                    "Operation"
                ],
                "responses": {
                    "204": {
                        "description": "Operation resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Operation resource.",
                "description": "Removes the Operation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/organism_species": {
            "get": {
                "operationId": "getOrganismSpeciesCollection",
                "tags": [
                    "OrganismSpecies"
                ],
                "responses": {
                    "200": {
                        "description": "OrganismSpecies collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganismSpecies.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganismSpecies"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrganismSpecies"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of OrganismSpecies resources.",
                "description": "Retrieves the collection of OrganismSpecies resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/organism_species/{id}": {
            "get": {
                "operationId": "getOrganismSpeciesItem",
                "tags": [
                    "OrganismSpecies"
                ],
                "responses": {
                    "200": {
                        "description": "OrganismSpecies resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganismSpecies.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganismSpecies"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganismSpecies"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a OrganismSpecies resource.",
                "description": "Retrieves a OrganismSpecies resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/organisms": {
            "get": {
                "operationId": "getOrganismCollection",
                "tags": [
                    "Organism"
                ],
                "responses": {
                    "200": {
                        "description": "Organism collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Organism.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organism"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Organism"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Organism resources.",
                "description": "Retrieves the collection of Organism resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postOrganismCollection",
                "tags": [
                    "Organism"
                ],
                "responses": {
                    "201": {
                        "description": "Organism resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            }
                        },
                        "links": {
                            "GetOrganismItem": {
                                "operationId": "getOrganismItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /organisms/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Organism resource.",
                "description": "Creates a Organism resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Organism resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/organisms/{id}": {
            "get": {
                "operationId": "getOrganismItem",
                "tags": [
                    "Organism"
                ],
                "responses": {
                    "200": {
                        "description": "Organism resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Organism resource.",
                "description": "Retrieves a Organism resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putOrganismItem",
                "tags": [
                    "Organism"
                ],
                "responses": {
                    "200": {
                        "description": "Organism resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organism"
                                }
                            }
                        },
                        "links": {
                            "GetOrganismItem": {
                                "operationId": "getOrganismItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /organisms/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Organism resource.",
                "description": "Replaces the Organism resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Organism resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Organism"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteOrganismItem",
                "tags": [
                    "Organism"
                ],
                "responses": {
                    "204": {
                        "description": "Organism resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Organism resource.",
                "description": "Removes the Organism resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/organisms/{id}/measures": {
            "get": {
                "operationId": "api_organisms_measures_get_subresourceOrganismSubresource",
                "tags": [
                    "Measure",
                    "Organism"
                ],
                "responses": {
                    "200": {
                        "description": "Organism resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Organism resource.",
                "description": "Retrieves a Organism resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Organism identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/pcr_conditions": {
            "get": {
                "operationId": "getPcrConditionsCollection",
                "tags": [
                    "PcrConditions"
                ],
                "responses": {
                    "200": {
                        "description": "PcrConditions collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PcrConditions.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PcrConditions"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PcrConditions"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PcrConditions resources.",
                "description": "Retrieves the collection of PcrConditions resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPcrConditionsCollection",
                "tags": [
                    "PcrConditions"
                ],
                "responses": {
                    "201": {
                        "description": "PcrConditions resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            }
                        },
                        "links": {
                            "GetPcrConditionsItem": {
                                "operationId": "getPcrConditionsItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /pcr_conditions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a PcrConditions resource.",
                "description": "Creates a PcrConditions resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new PcrConditions resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/pcr_conditions/{id}": {
            "get": {
                "operationId": "getPcrConditionsItem",
                "tags": [
                    "PcrConditions"
                ],
                "responses": {
                    "200": {
                        "description": "PcrConditions resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a PcrConditions resource.",
                "description": "Retrieves a PcrConditions resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putPcrConditionsItem",
                "tags": [
                    "PcrConditions"
                ],
                "responses": {
                    "200": {
                        "description": "PcrConditions resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrConditions"
                                }
                            }
                        },
                        "links": {
                            "GetPcrConditionsItem": {
                                "operationId": "getPcrConditionsItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /pcr_conditions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the PcrConditions resource.",
                "description": "Replaces the PcrConditions resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated PcrConditions resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/PcrConditions"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deletePcrConditionsItem",
                "tags": [
                    "PcrConditions"
                ],
                "responses": {
                    "204": {
                        "description": "PcrConditions resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the PcrConditions resource.",
                "description": "Removes the PcrConditions resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/pcr_conditions/{id}/measures": {
            "get": {
                "operationId": "api_pcr_conditions_measures_get_subresourcePcrConditionsSubresource",
                "tags": [
                    "Measure",
                    "PcrConditions"
                ],
                "responses": {
                    "200": {
                        "description": "PcrConditions resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a PcrConditions resource.",
                "description": "Retrieves a PcrConditions resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "PcrConditions identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/pcr_primers": {
            "get": {
                "operationId": "getPcrPrimerCollection",
                "tags": [
                    "PcrPrimer"
                ],
                "responses": {
                    "200": {
                        "description": "PcrPrimer collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PcrPrimer.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PcrPrimer"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PcrPrimer"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PcrPrimer resources.",
                "description": "Retrieves the collection of PcrPrimer resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/pcr_primers/{id}": {
            "get": {
                "operationId": "getPcrPrimerItem",
                "tags": [
                    "PcrPrimer"
                ],
                "responses": {
                    "200": {
                        "description": "PcrPrimer resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrPrimer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrPrimer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PcrPrimer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a PcrPrimer resource.",
                "description": "Retrieves a PcrPrimer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/people": {
            "get": {
                "operationId": "getPersonCollection",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Person.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Person resources.",
                "description": "Retrieves the collection of Person resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPersonCollection",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "201": {
                        "description": "Person resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "links": {
                            "GetPersonItem": {
                                "operationId": "getPersonItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /people/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Person resource.",
                "description": "Creates a Person resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Person resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/people/{id}": {
            "get": {
                "operationId": "getPersonItem",
                "tags": [
                    "Person"
                ],
                "responses": {
                    "200": {
                        "description": "Person resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Person resource.",
                "description": "Retrieves a Person resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/permissions": {
            "get": {
                "operationId": "getPermissionCollection",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "200": {
                        "description": "Permission collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Permission.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Permission resources.",
                "description": "Retrieves the collection of Permission resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPermissionCollection",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "201": {
                        "description": "Permission resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "links": {
                            "GetPermissionItem": {
                                "operationId": "getPermissionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /permissions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Permission resource.",
                "description": "Creates a Permission resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Permission resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/permissions/{id}": {
            "get": {
                "operationId": "getPermissionItem",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "200": {
                        "description": "Permission resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Permission resource.",
                "description": "Retrieves a Permission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putPermissionItem",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "200": {
                        "description": "Permission resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "links": {
                            "GetPermissionItem": {
                                "operationId": "getPermissionItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /permissions/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Permission resource.",
                "description": "Replaces the Permission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Permission resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deletePermissionItem",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "204": {
                        "description": "Permission resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Permission resource.",
                "description": "Removes the Permission resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/physical_states": {
            "get": {
                "operationId": "getPhysicalStateCollection",
                "tags": [
                    "PhysicalState"
                ],
                "responses": {
                    "200": {
                        "description": "PhysicalState collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PhysicalState.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhysicalState"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PhysicalState"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PhysicalState resources.",
                "description": "Retrieves the collection of PhysicalState resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPhysicalStateCollection",
                "tags": [
                    "PhysicalState"
                ],
                "responses": {
                    "201": {
                        "description": "PhysicalState resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            }
                        },
                        "links": {
                            "GetPhysicalStateItem": {
                                "operationId": "getPhysicalStateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /physical_states/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a PhysicalState resource.",
                "description": "Creates a PhysicalState resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new PhysicalState resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/physical_states/{id}": {
            "get": {
                "operationId": "getPhysicalStateItem",
                "tags": [
                    "PhysicalState"
                ],
                "responses": {
                    "200": {
                        "description": "PhysicalState resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a PhysicalState resource.",
                "description": "Retrieves a PhysicalState resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putPhysicalStateItem",
                "tags": [
                    "PhysicalState"
                ],
                "responses": {
                    "200": {
                        "description": "PhysicalState resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhysicalState"
                                }
                            }
                        },
                        "links": {
                            "GetPhysicalStateItem": {
                                "operationId": "getPhysicalStateItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /physical_states/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the PhysicalState resource.",
                "description": "Replaces the PhysicalState resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated PhysicalState resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/PhysicalState"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deletePhysicalStateItem",
                "tags": [
                    "PhysicalState"
                ],
                "responses": {
                    "204": {
                        "description": "PhysicalState resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the PhysicalState resource.",
                "description": "Removes the PhysicalState resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/primer_types": {
            "get": {
                "operationId": "getPrimerTypeCollection",
                "tags": [
                    "PrimerType"
                ],
                "responses": {
                    "200": {
                        "description": "PrimerType collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PrimerType.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrimerType"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrimerType"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PrimerType resources.",
                "description": "Retrieves the collection of PrimerType resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/primer_types/{id}": {
            "get": {
                "operationId": "getPrimerTypeItem",
                "tags": [
                    "PrimerType"
                ],
                "responses": {
                    "200": {
                        "description": "PrimerType resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimerType.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimerType"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrimerType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a PrimerType resource.",
                "description": "Retrieves a PrimerType resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/process_categories": {
            "get": {
                "operationId": "getProcessCategoryCollection",
                "tags": [
                    "ProcessCategory"
                ],
                "responses": {
                    "200": {
                        "description": "ProcessCategory collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProcessCategory.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProcessCategory"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProcessCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ProcessCategory resources.",
                "description": "Retrieves the collection of ProcessCategory resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "children[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "parent[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[children]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "exists[parent]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/process_categories/{id}": {
            "get": {
                "operationId": "getProcessCategoryItem",
                "tags": [
                    "ProcessCategory"
                ],
                "responses": {
                    "200": {
                        "description": "ProcessCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ProcessCategory resource.",
                "description": "Retrieves a ProcessCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/process_categories/{id}/create_process/{siteId}": {
            "get": {
                "operationId": "create_processProcessCategoryItem",
                "tags": [
                    "ProcessCategory"
                ],
                "responses": {
                    "200": {
                        "description": "ProcessCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ProcessCategory resource.",
                "description": "Retrieves a ProcessCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/processes": {
            "get": {
                "operationId": "getProcessCollection",
                "tags": [
                    "Process"
                ],
                "responses": {
                    "200": {
                        "description": "Process collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Process.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Process"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Process"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Process resources.",
                "description": "Retrieves the collection of Process resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "processCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "site.project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postProcessCollection",
                "tags": [
                    "Process"
                ],
                "responses": {
                    "201": {
                        "description": "Process resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            }
                        },
                        "links": {
                            "GetProcessItem": {
                                "operationId": "getProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Process resource.",
                "description": "Creates a Process resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Process resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/processes/{id}": {
            "get": {
                "operationId": "getProcessItem",
                "tags": [
                    "Process"
                ],
                "responses": {
                    "200": {
                        "description": "Process resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Process resource.",
                "description": "Retrieves a Process resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putProcessItem",
                "tags": [
                    "Process"
                ],
                "responses": {
                    "200": {
                        "description": "Process resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Process"
                                }
                            }
                        },
                        "links": {
                            "GetProcessItem": {
                                "operationId": "getProcessItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /processes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Process resource.",
                "description": "Replaces the Process resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Process resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Process"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteProcessItem",
                "tags": [
                    "Process"
                ],
                "responses": {
                    "204": {
                        "description": "Process resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Process resource.",
                "description": "Removes the Process resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/project/{id}/bioinfo/bio_sample_results/export/biom": {
            "post": {
                "operationId": "export_biomSampleResultItem",
                "tags": [
                    "SampleResult"
                ],
                "responses": {
                    "201": {
                        "description": "SampleResult resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult"
                                }
                            }
                        },
                        "links": {
                            "GetSampleResultItem": {
                                "operationId": "getSampleResultItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sample_results/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a SampleResult resource.",
                "description": "Creates a SampleResult resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new SampleResult resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleResult.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleResult"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleResult"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/project/{id}/export/{type}/{format}/{templateOnly}": {
            "get": {
                "operationId": "exportProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Project resource.",
                "description": "Retrieves a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/project/{id}/import/{type}": {
            "post": {
                "operationId": "importProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "201": {
                        "description": "Project resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.ImportReport"
                                }
                            }
                        },
                        "links": {
                            "GetProjectItem": {
                                "operationId": "getProjectItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a Project resource.",
                "description": "Creates a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new Project resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/projects": {
            "get": {
                "operationId": "getProjectCollection",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Project.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Project resources.",
                "description": "Retrieves the collection of Project resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[startDate]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[coordinator.lastname]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "startDate[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "coordinator.lastname",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postProjectCollection",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "201": {
                        "description": "Project resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "links": {
                            "GetProjectItem": {
                                "operationId": "getProjectItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Project resource.",
                "description": "Creates a Project resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Project resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/projects/{id}": {
            "get": {
                "operationId": "getProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Project resource.",
                "description": "Retrieves a Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "200": {
                        "description": "Project resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "links": {
                            "GetProjectItem": {
                                "operationId": "getProjectItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /projects/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Project resource.",
                "description": "Replaces the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Project resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteProjectItem",
                "tags": [
                    "Project"
                ],
                "responses": {
                    "204": {
                        "description": "Project resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Project resource.",
                "description": "Removes the Project resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactor_replicates": {
            "get": {
                "operationId": "getReactorReplicateCollection",
                "tags": [
                    "ReactorReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "ReactorReplicate collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReactorReplicate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReactorReplicate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReactorReplicate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ReactorReplicate resources.",
                "description": "Retrieves the collection of ReactorReplicate resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.experimentalSeries.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.experimentalSeries.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactor_replicates/{id}": {
            "get": {
                "operationId": "getReactorReplicateItem",
                "tags": [
                    "ReactorReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "ReactorReplicate resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReactorReplicate.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReactorReplicate"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReactorReplicate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ReactorReplicate resource.",
                "description": "Retrieves a ReactorReplicate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactor_replicates/{id}/locations": {
            "get": {
                "operationId": "api_reactor_replicates_locations_get_subresourceReactorReplicateSubresource",
                "tags": [
                    "CompartmentReplicate",
                    "ReactorReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "ReactorReplicate resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ReactorReplicate resource.",
                "description": "Retrieves a ReactorReplicate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReactorReplicate identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors": {
            "get": {
                "operationId": "getReactorCollection",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reactor.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reactor"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reactor"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Reactor resources.",
                "description": "Retrieves the collection of Reactor resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "experimentalSeries.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "experimentalSeries.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postReactorCollection",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "201": {
                        "description": "Reactor resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            }
                        },
                        "links": {
                            "GetReactorItem": {
                                "operationId": "getReactorItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reactors/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Reactor resource.",
                "description": "Creates a Reactor resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Reactor resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}": {
            "get": {
                "operationId": "getReactorItem",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putReactorItem",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            }
                        },
                        "links": {
                            "GetReactorItem": {
                                "operationId": "getReactorItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reactors/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Reactor resource.",
                "description": "Replaces the Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Reactor resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Reactor"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteReactorItem",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "204": {
                        "description": "Reactor resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Reactor resource.",
                "description": "Removes the Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/compartments": {
            "get": {
                "operationId": "api_reactors_compartments_get_subresourceReactorSubresource",
                "tags": [
                    "Compartment",
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Compartment.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compartment"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Compartment"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/compartments/{compartments}/constituents": {
            "get": {
                "operationId": "api_reactors_compartments_constituents_get_subresourceReactorSubresource",
                "tags": [
                    "Constituent",
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Constituent.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Constituent"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartments",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "input.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/compartments/{compartments}/constituents/{constituents}/amount": {
            "get": {
                "operationId": "api_reactors_compartments_constituents_amount_get_subresourceReactorSubresource",
                "tags": [
                    "Measure",
                    "Constituent"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Measure"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartments",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "constituents",
                        "in": "path",
                        "description": "Constituent identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/compartments/{compartments}/measures": {
            "get": {
                "operationId": "api_reactors_compartments_measures_get_subresourceReactorSubresource",
                "tags": [
                    "Measure",
                    "Compartment"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartments",
                        "in": "path",
                        "description": "Compartment identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/dimensions": {
            "get": {
                "operationId": "api_reactors_dimensions_get_subresourceReactorSubresource",
                "tags": [
                    "Measure",
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/membranes": {
            "get": {
                "operationId": "api_reactors_membranes_get_subresourceReactorSubresource",
                "tags": [
                    "Membrane",
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Membrane.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Membrane"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Membrane"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/membranes/{membranes}/measures": {
            "get": {
                "operationId": "api_reactors_membranes_measures_get_subresourceReactorSubresource",
                "tags": [
                    "Measure",
                    "Membrane"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "membranes",
                        "in": "path",
                        "description": "Membrane identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/new": {
            "get": {
                "operationId": "cloneReactorItem",
                "tags": [
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reactor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/replicates": {
            "get": {
                "operationId": "api_reactors_replicates_get_subresourceReactorSubresource",
                "tags": [
                    "ReactorReplicate",
                    "Reactor"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReactorReplicate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReactorReplicate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReactorReplicate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.experimentalSeries.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.experimentalSeries.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactor.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reactors/{id}/replicates/{replicates}/locations": {
            "get": {
                "operationId": "api_reactors_replicates_locations_get_subresourceReactorSubresource",
                "tags": [
                    "CompartmentReplicate",
                    "ReactorReplicate"
                ],
                "responses": {
                    "200": {
                        "description": "Reactor resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompartmentReplicate"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Reactor resource.",
                "description": "Retrieves a Reactor resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reactor identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "replicates",
                        "in": "path",
                        "description": "ReactorReplicate identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment.reactor.experimentalSeries[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "compartment[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "reactorReplicate[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/real_residual_household_wastes": {
            "get": {
                "operationId": "getRealResidualHouseholdWasteCollection",
                "tags": [
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "RealResidualHouseholdWaste collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of RealResidualHouseholdWaste resources.",
                "description": "Retrieves the collection of RealResidualHouseholdWaste resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postRealResidualHouseholdWasteCollection",
                "tags": [
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "201": {
                        "description": "RealResidualHouseholdWaste resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            }
                        },
                        "links": {
                            "GetRealResidualHouseholdWasteItem": {
                                "operationId": "getRealResidualHouseholdWasteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /real_residual_household_wastes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a RealResidualHouseholdWaste resource.",
                "description": "Creates a RealResidualHouseholdWaste resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new RealResidualHouseholdWaste resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/real_residual_household_wastes/{id}": {
            "get": {
                "operationId": "getRealResidualHouseholdWasteItem",
                "tags": [
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "RealResidualHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a RealResidualHouseholdWaste resource.",
                "description": "Retrieves a RealResidualHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putRealResidualHouseholdWasteItem",
                "tags": [
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "RealResidualHouseholdWaste resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                                }
                            }
                        },
                        "links": {
                            "GetRealResidualHouseholdWasteItem": {
                                "operationId": "getRealResidualHouseholdWasteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /real_residual_household_wastes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the RealResidualHouseholdWaste resource.",
                "description": "Replaces the RealResidualHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated RealResidualHouseholdWaste resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/RealResidualHouseholdWaste"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteRealResidualHouseholdWasteItem",
                "tags": [
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "204": {
                        "description": "RealResidualHouseholdWaste resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the RealResidualHouseholdWaste resource.",
                "description": "Removes the RealResidualHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/real_residual_household_wastes/{id}/measures": {
            "get": {
                "operationId": "api_real_residual_household_wastes_measures_get_subresourceRealResidualHouseholdWasteSubresource",
                "tags": [
                    "Measure",
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "RealResidualHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a RealResidualHouseholdWaste resource.",
                "description": "Retrieves a RealResidualHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RealResidualHouseholdWaste identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/real_residual_household_wastes/{id}/modecoms": {
            "get": {
                "operationId": "api_real_residual_household_wastes_modecoms_get_subresourceRealResidualHouseholdWasteSubresource",
                "tags": [
                    "Modecom",
                    "RealResidualHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "RealResidualHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Modecom.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a RealResidualHouseholdWaste resource.",
                "description": "Retrieves a RealResidualHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "RealResidualHouseholdWaste identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstitued_reference_names": {
            "get": {
                "operationId": "getReconstituedReferenceNameCollection",
                "tags": [
                    "ReconstituedReferenceName"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstituedReferenceName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReconstituedReferenceName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReconstituedReferenceName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ReconstituedReferenceName resources.",
                "description": "Retrieves the collection of ReconstituedReferenceName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postReconstituedReferenceNameCollection",
                "tags": [
                    "ReconstituedReferenceName"
                ],
                "responses": {
                    "201": {
                        "description": "ReconstituedReferenceName resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            }
                        },
                        "links": {
                            "GetReconstituedReferenceNameItem": {
                                "operationId": "getReconstituedReferenceNameItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reconstitued_reference_names/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ReconstituedReferenceName resource.",
                "description": "Creates a ReconstituedReferenceName resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ReconstituedReferenceName resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstitued_reference_names/{id}": {
            "get": {
                "operationId": "getReconstituedReferenceNameItem",
                "tags": [
                    "ReconstituedReferenceName"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstituedReferenceName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ReconstituedReferenceName resource.",
                "description": "Retrieves a ReconstituedReferenceName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putReconstituedReferenceNameItem",
                "tags": [
                    "ReconstituedReferenceName"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstituedReferenceName resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstituedReferenceName"
                                }
                            }
                        },
                        "links": {
                            "GetReconstituedReferenceNameItem": {
                                "operationId": "getReconstituedReferenceNameItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reconstitued_reference_names/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ReconstituedReferenceName resource.",
                "description": "Replaces the ReconstituedReferenceName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ReconstituedReferenceName resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstituedReferenceName"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteReconstituedReferenceNameItem",
                "tags": [
                    "ReconstituedReferenceName"
                ],
                "responses": {
                    "204": {
                        "description": "ReconstituedReferenceName resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ReconstituedReferenceName resource.",
                "description": "Removes the ReconstituedReferenceName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstituted_household_wastes": {
            "get": {
                "operationId": "getReconstitutedHouseholdWasteCollection",
                "tags": [
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstitutedHouseholdWaste collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of ReconstitutedHouseholdWaste resources.",
                "description": "Retrieves the collection of ReconstitutedHouseholdWaste resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postReconstitutedHouseholdWasteCollection",
                "tags": [
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "201": {
                        "description": "ReconstitutedHouseholdWaste resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            }
                        },
                        "links": {
                            "GetReconstitutedHouseholdWasteItem": {
                                "operationId": "getReconstitutedHouseholdWasteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reconstituted_household_wastes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a ReconstitutedHouseholdWaste resource.",
                "description": "Creates a ReconstitutedHouseholdWaste resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new ReconstitutedHouseholdWaste resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstituted_household_wastes/{id}": {
            "get": {
                "operationId": "getReconstitutedHouseholdWasteItem",
                "tags": [
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstitutedHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "description": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putReconstitutedHouseholdWasteItem",
                "tags": [
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstitutedHouseholdWaste resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                                }
                            }
                        },
                        "links": {
                            "GetReconstitutedHouseholdWasteItem": {
                                "operationId": "getReconstitutedHouseholdWasteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /reconstituted_household_wastes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the ReconstitutedHouseholdWaste resource.",
                "description": "Replaces the ReconstitutedHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated ReconstitutedHouseholdWaste resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/ReconstitutedHouseholdWaste"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteReconstitutedHouseholdWasteItem",
                "tags": [
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "204": {
                        "description": "ReconstitutedHouseholdWaste resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the ReconstitutedHouseholdWaste resource.",
                "description": "Removes the ReconstitutedHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstituted_household_wastes/{id}/measures": {
            "get": {
                "operationId": "api_reconstituted_household_wastes_measures_get_subresourceReconstitutedHouseholdWasteSubresource",
                "tags": [
                    "Measure",
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstitutedHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "description": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReconstitutedHouseholdWaste identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/reconstituted_household_wastes/{id}/modecoms": {
            "get": {
                "operationId": "api_reconstituted_household_wastes_modecoms_get_subresourceReconstitutedHouseholdWasteSubresource",
                "tags": [
                    "Modecom",
                    "ReconstitutedHouseholdWaste"
                ],
                "responses": {
                    "200": {
                        "description": "ReconstitutedHouseholdWaste resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Modecom.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Modecom"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "description": "Retrieves a ReconstitutedHouseholdWaste resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ReconstitutedHouseholdWaste identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/relevant_electronic_resources": {
            "get": {
                "operationId": "getRelevantElectronicResourceCollection",
                "tags": [
                    "RelevantElectronicResource"
                ],
                "responses": {
                    "200": {
                        "description": "RelevantElectronicResource collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RelevantElectronicResource"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RelevantElectronicResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of RelevantElectronicResource resources.",
                "description": "Retrieves the collection of RelevantElectronicResource resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postRelevantElectronicResourceCollection",
                "tags": [
                    "RelevantElectronicResource"
                ],
                "responses": {
                    "201": {
                        "description": "RelevantElectronicResource resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            }
                        },
                        "links": {
                            "GetRelevantElectronicResourceItem": {
                                "operationId": "getRelevantElectronicResourceItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /relevant_electronic_resources/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a RelevantElectronicResource resource.",
                "description": "Creates a RelevantElectronicResource resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new RelevantElectronicResource resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/relevant_electronic_resources/{id}": {
            "get": {
                "operationId": "getRelevantElectronicResourceItem",
                "tags": [
                    "RelevantElectronicResource"
                ],
                "responses": {
                    "200": {
                        "description": "RelevantElectronicResource resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a RelevantElectronicResource resource.",
                "description": "Retrieves a RelevantElectronicResource resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putRelevantElectronicResourceItem",
                "tags": [
                    "RelevantElectronicResource"
                ],
                "responses": {
                    "200": {
                        "description": "RelevantElectronicResource resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelevantElectronicResource"
                                }
                            }
                        },
                        "links": {
                            "GetRelevantElectronicResourceItem": {
                                "operationId": "getRelevantElectronicResourceItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /relevant_electronic_resources/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the RelevantElectronicResource resource.",
                "description": "Replaces the RelevantElectronicResource resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated RelevantElectronicResource resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/RelevantElectronicResource"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteRelevantElectronicResourceItem",
                "tags": [
                    "RelevantElectronicResource"
                ],
                "responses": {
                    "204": {
                        "description": "RelevantElectronicResource resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the RelevantElectronicResource resource.",
                "description": "Removes the RelevantElectronicResource resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sample_inputs": {
            "get": {
                "operationId": "getSampleInputCollection",
                "tags": [
                    "SampleInput"
                ],
                "responses": {
                    "200": {
                        "description": "SampleInput collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SampleInput.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SampleInput"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SampleInput"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SampleInput resources.",
                "description": "Retrieves the collection of SampleInput resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSampleInputCollection",
                "tags": [
                    "SampleInput"
                ],
                "responses": {
                    "201": {
                        "description": "SampleInput resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            }
                        },
                        "links": {
                            "GetSampleInputItem": {
                                "operationId": "getSampleInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sample_inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SampleInput resource.",
                "description": "Creates a SampleInput resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SampleInput resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sample_inputs/{id}": {
            "get": {
                "operationId": "getSampleInputItem",
                "tags": [
                    "SampleInput"
                ],
                "responses": {
                    "200": {
                        "description": "SampleInput resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SampleInput resource.",
                "description": "Retrieves a SampleInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSampleInputItem",
                "tags": [
                    "SampleInput"
                ],
                "responses": {
                    "200": {
                        "description": "SampleInput resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleInput"
                                }
                            }
                        },
                        "links": {
                            "GetSampleInputItem": {
                                "operationId": "getSampleInputItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sample_inputs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SampleInput resource.",
                "description": "Replaces the SampleInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SampleInput resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SampleInput"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSampleInputItem",
                "tags": [
                    "SampleInput"
                ],
                "responses": {
                    "204": {
                        "description": "SampleInput resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SampleInput resource.",
                "description": "Removes the SampleInput resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sample_results": {
            "get": {
                "operationId": "getSampleResultCollection",
                "tags": [
                    "SampleResult"
                ],
                "responses": {
                    "200": {
                        "description": "SampleResult collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SampleResult.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SampleResult"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SampleResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SampleResult resources.",
                "description": "Retrieves the collection of SampleResult resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "metabarcodingBioinformaticRun.project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "metabarcodingBioinformaticRun.project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sample_results/{id}": {
            "get": {
                "operationId": "getSampleResultItem",
                "tags": [
                    "SampleResult"
                ],
                "responses": {
                    "200": {
                        "description": "SampleResult resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SampleResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SampleResult resource.",
                "description": "Retrieves a SampleResult resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/samples": {
            "get": {
                "operationId": "getSampleCollection",
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "200": {
                        "description": "Sample collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sample.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sample"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sample"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Sample resources.",
                "description": "Retrieves the collection of Sample resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "location.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSampleCollection",
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "201": {
                        "description": "Sample resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            }
                        },
                        "links": {
                            "GetSampleItem": {
                                "operationId": "getSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Sample resource.",
                "description": "Creates a Sample resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Sample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/samples/{id}": {
            "get": {
                "operationId": "getSampleItem",
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "200": {
                        "description": "Sample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Sample resource.",
                "description": "Retrieves a Sample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSampleItem",
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "200": {
                        "description": "Sample resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sample"
                                }
                            }
                        },
                        "links": {
                            "GetSampleItem": {
                                "operationId": "getSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Sample resource.",
                "description": "Replaces the Sample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Sample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Sample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSampleItem",
                "tags": [
                    "Sample"
                ],
                "responses": {
                    "204": {
                        "description": "Sample resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Sample resource.",
                "description": "Removes the Sample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencer_models": {
            "get": {
                "operationId": "getSequencerModelCollection",
                "tags": [
                    "SequencerModel"
                ],
                "responses": {
                    "200": {
                        "description": "SequencerModel collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencerModel.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencerModel"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencerModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencerModel resources.",
                "description": "Retrieves the collection of SequencerModel resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencer_models/{id}": {
            "get": {
                "operationId": "getSequencerModelItem",
                "tags": [
                    "SequencerModel"
                ],
                "responses": {
                    "200": {
                        "description": "SequencerModel resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencerModel.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencerModel"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencerModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencerModel resource.",
                "description": "Retrieves a SequencerModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencers": {
            "get": {
                "operationId": "getSequencerCollection",
                "tags": [
                    "Sequencer"
                ],
                "responses": {
                    "200": {
                        "description": "Sequencer collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sequencer.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sequencer"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Sequencer"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Sequencer resources.",
                "description": "Retrieves the collection of Sequencer resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencers/{id}": {
            "get": {
                "operationId": "getSequencerItem",
                "tags": [
                    "Sequencer"
                ],
                "responses": {
                    "200": {
                        "description": "Sequencer resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sequencer.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sequencer"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sequencer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Sequencer resource.",
                "description": "Retrieves a Sequencer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_centers": {
            "get": {
                "operationId": "getSequencingCenterCollection",
                "tags": [
                    "SequencingCenter"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingCenter collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingCenter.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingCenter"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingCenter"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingCenter resources.",
                "description": "Retrieves the collection of SequencingCenter resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_centers/{id}": {
            "get": {
                "operationId": "getSequencingCenterItem",
                "tags": [
                    "SequencingCenter"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingCenter resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingCenter.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingCenter"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingCenter"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingCenter resource.",
                "description": "Retrieves a SequencingCenter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_procedures": {
            "get": {
                "operationId": "getSequencingProcedureCollection",
                "tags": [
                    "SequencingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingProcedure resources.",
                "description": "Retrieves the collection of SequencingProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSequencingProcedureCollection",
                "tags": [
                    "SequencingProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingProcedureItem": {
                                "operationId": "getSequencingProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SequencingProcedure resource.",
                "description": "Creates a SequencingProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SequencingProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_procedures/{id}": {
            "get": {
                "operationId": "getSequencingProcedureItem",
                "tags": [
                    "SequencingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingProcedure resource.",
                "description": "Retrieves a SequencingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSequencingProcedureItem",
                "tags": [
                    "SequencingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingProcedureItem": {
                                "operationId": "getSequencingProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SequencingProcedure resource.",
                "description": "Replaces the SequencingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SequencingProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSequencingProcedureItem",
                "tags": [
                    "SequencingProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "SequencingProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SequencingProcedure resource.",
                "description": "Removes the SequencingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_run/{id}/export/{type}/{format}": {
            "get": {
                "operationId": "exportResultSequencingRunItem",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingRun resource",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingRun resource.",
                "description": "Retrieves a SequencingRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_run/{id}/import/{type}": {
            "post": {
                "operationId": "importResultSequencingRunItem",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingRun resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.ImportReport.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.ImportReport"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.ImportReport"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingRunItem": {
                                "operationId": "getSequencingRunItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_runs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Creates a SequencingRun resource.",
                "description": "Creates a SequencingRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The new SequencingRun resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_runs": {
            "get": {
                "operationId": "getSequencingRunCollection",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingRun collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingRun.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingRun"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingRun"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingRun resources.",
                "description": "Retrieves the collection of SequencingRun resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSequencingRunCollection",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingRun resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingRunItem": {
                                "operationId": "getSequencingRunItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_runs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SequencingRun resource.",
                "description": "Creates a SequencingRun resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SequencingRun resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_runs/{id}": {
            "get": {
                "operationId": "getSequencingRunItem",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingRun resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingRun resource.",
                "description": "Retrieves a SequencingRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSequencingRunItem",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingRun resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingRun"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingRunItem": {
                                "operationId": "getSequencingRunItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_runs/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SequencingRun resource.",
                "description": "Replaces the SequencingRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SequencingRun resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingRun"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSequencingRunItem",
                "tags": [
                    "SequencingRun"
                ],
                "responses": {
                    "204": {
                        "description": "SequencingRun resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SequencingRun resource.",
                "description": "Removes the SequencingRun resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_complements": {
            "get": {
                "operationId": "getSequencingSampleComplementCollection",
                "tags": [
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleComplement collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSampleComplement"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSampleComplement"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingSampleComplement resources.",
                "description": "Retrieves the collection of SequencingSampleComplement resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSequencingSampleComplementCollection",
                "tags": [
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingSampleComplement resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleComplementItem": {
                                "operationId": "getSequencingSampleComplementItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_sample_complements/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SequencingSampleComplement resource.",
                "description": "Creates a SequencingSampleComplement resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SequencingSampleComplement resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_complements/{id}": {
            "get": {
                "operationId": "getSequencingSampleComplementItem",
                "tags": [
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleComplement resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingSampleComplement resource.",
                "description": "Retrieves a SequencingSampleComplement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSequencingSampleComplementItem",
                "tags": [
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleComplement resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleComplementItem": {
                                "operationId": "getSequencingSampleComplementItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_sample_complements/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SequencingSampleComplement resource.",
                "description": "Replaces the SequencingSampleComplement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SequencingSampleComplement resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleComplement"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSequencingSampleComplementItem",
                "tags": [
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "204": {
                        "description": "SequencingSampleComplement resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SequencingSampleComplement resource.",
                "description": "Removes the SequencingSampleComplement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_complements/{id}/library": {
            "get": {
                "operationId": "api_sequencing_sample_complements_library_get_subresourceSequencingSampleComplementSubresource",
                "tags": [
                    "Library",
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleComplement resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSampleComplement resource.",
                "description": "Retrieves a SequencingSampleComplement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSampleComplement identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_complements/{id}/mids": {
            "get": {
                "operationId": "api_sequencing_sample_complements_mids_get_subresourceSequencingSampleComplementSubresource",
                "tags": [
                    "MultiplexIdentifier",
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleComplement resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSampleComplement resource.",
                "description": "Retrieves a SequencingSampleComplement resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSampleComplement identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[sequence]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_results": {
            "get": {
                "operationId": "getSequencingSampleResultCollection",
                "tags": [
                    "SequencingSampleResult"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleResult collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSampleResult"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSampleResult"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingSampleResult resources.",
                "description": "Retrieves the collection of SequencingSampleResult resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSequencingSampleResultCollection",
                "tags": [
                    "SequencingSampleResult"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingSampleResult resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleResultItem": {
                                "operationId": "getSequencingSampleResultItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_sample_results/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SequencingSampleResult resource.",
                "description": "Creates a SequencingSampleResult resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SequencingSampleResult resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_sample_results/{id}": {
            "get": {
                "operationId": "getSequencingSampleResultItem",
                "tags": [
                    "SequencingSampleResult"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleResult resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingSampleResult resource.",
                "description": "Retrieves a SequencingSampleResult resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSequencingSampleResultItem",
                "tags": [
                    "SequencingSampleResult"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSampleResult resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleResultItem": {
                                "operationId": "getSequencingSampleResultItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_sample_results/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SequencingSampleResult resource.",
                "description": "Replaces the SequencingSampleResult resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SequencingSampleResult resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSampleResult"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSequencingSampleResultItem",
                "tags": [
                    "SequencingSampleResult"
                ],
                "responses": {
                    "204": {
                        "description": "SequencingSampleResult resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SequencingSampleResult resource.",
                "description": "Removes the SequencingSampleResult resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples": {
            "get": {
                "operationId": "getSequencingSampleCollection",
                "tags": [
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SequencingSample.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSample"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SequencingSample"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SequencingSample resources.",
                "description": "Retrieves the collection of SequencingSample resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingRun.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingRun.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingRun.project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingRun.project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSequencingSampleCollection",
                "tags": [
                    "SequencingSample"
                ],
                "responses": {
                    "201": {
                        "description": "SequencingSample resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleItem": {
                                "operationId": "getSequencingSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SequencingSample resource.",
                "description": "Creates a SequencingSample resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SequencingSample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}": {
            "get": {
                "operationId": "getSequencingSampleItem",
                "tags": [
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSequencingSampleItem",
                "tags": [
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSample"
                                }
                            }
                        },
                        "links": {
                            "GetSequencingSampleItem": {
                                "operationId": "getSequencingSampleItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sequencing_samples/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SequencingSample resource.",
                "description": "Replaces the SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SequencingSample resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SequencingSample"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSequencingSampleItem",
                "tags": [
                    "SequencingSample"
                ],
                "responses": {
                    "204": {
                        "description": "SequencingSample resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SequencingSample resource.",
                "description": "Removes the SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/measures": {
            "get": {
                "operationId": "api_sequencing_samples_measures_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "Measure",
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/nucleic_acid": {
            "get": {
                "operationId": "api_sequencing_samples_nucleic_acid_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "NucleicAcid",
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/NucleicAcid"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/nucleic_acid/measures": {
            "get": {
                "operationId": "api_sequencing_samples_nucleic_acid_measures_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "Measure",
                    "NucleicAcid"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "nucleicAcid",
                        "in": "path",
                        "description": "NucleicAcid identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/sequencing_sample_complement": {
            "get": {
                "operationId": "api_sequencing_samples_sequencing_sample_complement_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "SequencingSampleComplement",
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleComplement"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/sequencing_sample_complement/library": {
            "get": {
                "operationId": "api_sequencing_samples_sequencing_sample_complement_library_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "Library",
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Library"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingSampleComplement",
                        "in": "path",
                        "description": "SequencingSampleComplement identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/sequencing_sample_complement/mids": {
            "get": {
                "operationId": "api_sequencing_samples_sequencing_sample_complement_mids_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "MultiplexIdentifier",
                    "SequencingSampleComplement"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MultiplexIdentifier"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequencingSampleComplement",
                        "in": "path",
                        "description": "SequencingSampleComplement identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "sequence",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[sequence]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sequencing_samples/{id}/sequencing_sample_result": {
            "get": {
                "operationId": "api_sequencing_samples_sequencing_sample_result_get_subresourceSequencingSampleSubresource",
                "tags": [
                    "SequencingSampleResult",
                    "SequencingSample"
                ],
                "responses": {
                    "200": {
                        "description": "SequencingSample resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SequencingSampleResult"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SequencingSample resource.",
                "description": "Retrieves a SequencingSample resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SequencingSample identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/sites": {
            "get": {
                "operationId": "getSiteCollection",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "200": {
                        "description": "Site collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Site.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Site"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Site"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Site resources.",
                "description": "Retrieves the collection of Site resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "campaigns",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "campaigns[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSiteCollection",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "201": {
                        "description": "Site resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "links": {
                            "GetSiteItem": {
                                "operationId": "getSiteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sites/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Site resource.",
                "description": "Creates a Site resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Site resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/sites/{id}": {
            "get": {
                "operationId": "getSiteItem",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "200": {
                        "description": "Site resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Site resource.",
                "description": "Retrieves a Site resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSiteItem",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "200": {
                        "description": "Site resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "links": {
                            "GetSiteItem": {
                                "operationId": "getSiteItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sites/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Site resource.",
                "description": "Replaces the Site resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Site resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSiteItem",
                "tags": [
                    "Site"
                ],
                "responses": {
                    "204": {
                        "description": "Site resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Site resource.",
                "description": "Removes the Site resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/software": {
            "get": {
                "operationId": "getSoftwareCollection",
                "tags": [
                    "Software"
                ],
                "responses": {
                    "200": {
                        "description": "Software collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Software.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Software"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Software"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Software resources.",
                "description": "Retrieves the collection of Software resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSoftwareCollection",
                "tags": [
                    "Software"
                ],
                "responses": {
                    "201": {
                        "description": "Software resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            }
                        },
                        "links": {
                            "GetSoftwareItem": {
                                "operationId": "getSoftwareItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /software/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Software resource.",
                "description": "Creates a Software resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Software resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Software.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Software"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Software"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/software/{id}": {
            "get": {
                "operationId": "getSoftwareItem",
                "tags": [
                    "Software"
                ],
                "responses": {
                    "200": {
                        "description": "Software resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Software resource.",
                "description": "Retrieves a Software resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSoftwareItem",
                "tags": [
                    "Software"
                ],
                "responses": {
                    "200": {
                        "description": "Software resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Software"
                                }
                            }
                        },
                        "links": {
                            "GetSoftwareItem": {
                                "operationId": "getSoftwareItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /software/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Software resource.",
                "description": "Replaces the Software resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Software resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Software.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Software"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Software"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/software/{id}/safe_delete": {
            "delete": {
                "operationId": "deleteSoftwareItem",
                "tags": [
                    "Software"
                ],
                "responses": {
                    "204": {
                        "description": "Software resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Software resource.",
                "description": "Removes the Software resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/software_names": {
            "get": {
                "operationId": "getSoftwareNameCollection",
                "tags": [
                    "SoftwareName"
                ],
                "responses": {
                    "200": {
                        "description": "SoftwareName collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SoftwareName.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SoftwareName"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SoftwareName"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SoftwareName resources.",
                "description": "Retrieves the collection of SoftwareName resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/software_names/{id}": {
            "get": {
                "operationId": "getSoftwareNameItem",
                "tags": [
                    "SoftwareName"
                ],
                "responses": {
                    "200": {
                        "description": "SoftwareName resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SoftwareName.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SoftwareName"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SoftwareName"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SoftwareName resource.",
                "description": "Retrieves a SoftwareName resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/standard_operating_procedures": {
            "get": {
                "operationId": "getStandardOperatingProcedureCollection",
                "tags": [
                    "StandardOperatingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "StandardOperatingProcedure collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StandardOperatingProcedure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StandardOperatingProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of StandardOperatingProcedure resources.",
                "description": "Retrieves the collection of StandardOperatingProcedure resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postStandardOperatingProcedureCollection",
                "tags": [
                    "StandardOperatingProcedure"
                ],
                "responses": {
                    "201": {
                        "description": "StandardOperatingProcedure resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetStandardOperatingProcedureItem": {
                                "operationId": "getStandardOperatingProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /standard_operating_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a StandardOperatingProcedure resource.",
                "description": "Creates a StandardOperatingProcedure resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new StandardOperatingProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/standard_operating_procedures/{id}": {
            "get": {
                "operationId": "getStandardOperatingProcedureItem",
                "tags": [
                    "StandardOperatingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "StandardOperatingProcedure resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a StandardOperatingProcedure resource.",
                "description": "Retrieves a StandardOperatingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putStandardOperatingProcedureItem",
                "tags": [
                    "StandardOperatingProcedure"
                ],
                "responses": {
                    "200": {
                        "description": "StandardOperatingProcedure resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardOperatingProcedure"
                                }
                            }
                        },
                        "links": {
                            "GetStandardOperatingProcedureItem": {
                                "operationId": "getStandardOperatingProcedureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /standard_operating_procedures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the StandardOperatingProcedure resource.",
                "description": "Replaces the StandardOperatingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated StandardOperatingProcedure resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardOperatingProcedure"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteStandardOperatingProcedureItem",
                "tags": [
                    "StandardOperatingProcedure"
                ],
                "responses": {
                    "204": {
                        "description": "StandardOperatingProcedure resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the StandardOperatingProcedure resource.",
                "description": "Removes the StandardOperatingProcedure resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/support_materials": {
            "get": {
                "operationId": "getSupportMaterialCollection",
                "tags": [
                    "SupportMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "SupportMaterial collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SupportMaterial.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupportMaterial"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupportMaterial"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SupportMaterial resources.",
                "description": "Retrieves the collection of SupportMaterial resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSupportMaterialCollection",
                "tags": [
                    "SupportMaterial"
                ],
                "responses": {
                    "201": {
                        "description": "SupportMaterial resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            }
                        },
                        "links": {
                            "GetSupportMaterialItem": {
                                "operationId": "getSupportMaterialItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /support_materials/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SupportMaterial resource.",
                "description": "Creates a SupportMaterial resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SupportMaterial resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/support_materials/{id}": {
            "get": {
                "operationId": "getSupportMaterialItem",
                "tags": [
                    "SupportMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "SupportMaterial resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SupportMaterial resource.",
                "description": "Retrieves a SupportMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSupportMaterialItem",
                "tags": [
                    "SupportMaterial"
                ],
                "responses": {
                    "200": {
                        "description": "SupportMaterial resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupportMaterial"
                                }
                            }
                        },
                        "links": {
                            "GetSupportMaterialItem": {
                                "operationId": "getSupportMaterialItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /support_materials/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SupportMaterial resource.",
                "description": "Replaces the SupportMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SupportMaterial resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SupportMaterial"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSupportMaterialItem",
                "tags": [
                    "SupportMaterial"
                ],
                "responses": {
                    "204": {
                        "description": "SupportMaterial resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SupportMaterial resource.",
                "description": "Removes the SupportMaterial resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/supports": {
            "get": {
                "operationId": "getSupportCollection",
                "tags": [
                    "Support"
                ],
                "responses": {
                    "200": {
                        "description": "Support collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Support.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Support"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Support"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Support resources.",
                "description": "Retrieves the collection of Support resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSupportCollection",
                "tags": [
                    "Support"
                ],
                "responses": {
                    "201": {
                        "description": "Support resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            }
                        },
                        "links": {
                            "GetSupportItem": {
                                "operationId": "getSupportItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /supports/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Support resource.",
                "description": "Creates a Support resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Support resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Support.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Support"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Support"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/supports/{id}": {
            "get": {
                "operationId": "getSupportItem",
                "tags": [
                    "Support"
                ],
                "responses": {
                    "200": {
                        "description": "Support resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Support resource.",
                "description": "Retrieves a Support resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSupportItem",
                "tags": [
                    "Support"
                ],
                "responses": {
                    "200": {
                        "description": "Support resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Support"
                                }
                            }
                        },
                        "links": {
                            "GetSupportItem": {
                                "operationId": "getSupportItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /supports/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Support resource.",
                "description": "Replaces the Support resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Support resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Support.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Support"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Support"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSupportItem",
                "tags": [
                    "Support"
                ],
                "responses": {
                    "204": {
                        "description": "Support resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Support resource.",
                "description": "Removes the Support resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/supports/{id}/measures": {
            "get": {
                "operationId": "api_supports_measures_get_subresourceSupportSubresource",
                "tags": [
                    "Measure",
                    "Support"
                ],
                "responses": {
                    "200": {
                        "description": "Support resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Support resource.",
                "description": "Retrieves a Support resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Support identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/synthetic_media": {
            "get": {
                "operationId": "getSyntheticMediumCollection",
                "tags": [
                    "SyntheticMedium"
                ],
                "responses": {
                    "200": {
                        "description": "SyntheticMedium collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyntheticMedium"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyntheticMedium"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of SyntheticMedium resources.",
                "description": "Retrieves the collection of SyntheticMedium resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "inputCategory.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "project.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postSyntheticMediumCollection",
                "tags": [
                    "SyntheticMedium"
                ],
                "responses": {
                    "201": {
                        "description": "SyntheticMedium resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            }
                        },
                        "links": {
                            "GetSyntheticMediumItem": {
                                "operationId": "getSyntheticMediumItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /synthetic_media/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a SyntheticMedium resource.",
                "description": "Creates a SyntheticMedium resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new SyntheticMedium resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/synthetic_media/{id}": {
            "get": {
                "operationId": "getSyntheticMediumItem",
                "tags": [
                    "SyntheticMedium"
                ],
                "responses": {
                    "200": {
                        "description": "SyntheticMedium resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a SyntheticMedium resource.",
                "description": "Retrieves a SyntheticMedium resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putSyntheticMediumItem",
                "tags": [
                    "SyntheticMedium"
                ],
                "responses": {
                    "200": {
                        "description": "SyntheticMedium resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyntheticMedium"
                                }
                            }
                        },
                        "links": {
                            "GetSyntheticMediumItem": {
                                "operationId": "getSyntheticMediumItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /synthetic_media/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the SyntheticMedium resource.",
                "description": "Replaces the SyntheticMedium resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated SyntheticMedium resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/SyntheticMedium"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteSyntheticMediumItem",
                "tags": [
                    "SyntheticMedium"
                ],
                "responses": {
                    "204": {
                        "description": "SyntheticMedium resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the SyntheticMedium resource.",
                "description": "Removes the SyntheticMedium resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/synthetic_media/{id}/measures": {
            "get": {
                "operationId": "api_synthetic_media_measures_get_subresourceSyntheticMediumSubresource",
                "tags": [
                    "Measure",
                    "SyntheticMedium"
                ],
                "responses": {
                    "200": {
                        "description": "SyntheticMedium resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a SyntheticMedium resource.",
                "description": "Retrieves a SyntheticMedium resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SyntheticMedium identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/tags": {
            "get": {
                "operationId": "getTagCollection",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "200": {
                        "description": "Tag collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Tag resources.",
                "description": "Retrieves the collection of Tag resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isDeprecated",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "isDeprecated[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postTagCollection",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "201": {
                        "description": "Tag resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "links": {
                            "GetTagItem": {
                                "operationId": "getTagItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /tags/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Tag resource.",
                "description": "Creates a Tag resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Tag resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/tags/{id}": {
            "get": {
                "operationId": "getTagItem",
                "tags": [
                    "Tag"
                ],
                "responses": {
                    "200": {
                        "description": "Tag resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Tag resource.",
                "description": "Retrieves a Tag resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/target_subfragments": {
            "get": {
                "operationId": "getTargetSubfragmentCollection",
                "tags": [
                    "TargetSubfragment"
                ],
                "responses": {
                    "200": {
                        "description": "TargetSubfragment collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TargetSubfragment.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetSubfragment"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetSubfragment"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TargetSubfragment resources.",
                "description": "Retrieves the collection of TargetSubfragment resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/target_subfragments/{id}": {
            "get": {
                "operationId": "getTargetSubfragmentItem",
                "tags": [
                    "TargetSubfragment"
                ],
                "responses": {
                    "200": {
                        "description": "TargetSubfragment resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetSubfragment.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetSubfragment"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetSubfragment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a TargetSubfragment resource.",
                "description": "Retrieves a TargetSubfragment resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/targeted_gene_or_genomic_regions": {
            "get": {
                "operationId": "getTargetedGeneOrGenomicRegionCollection",
                "tags": [
                    "TargetedGeneOrGenomicRegion"
                ],
                "responses": {
                    "200": {
                        "description": "TargetedGeneOrGenomicRegion collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TargetedGeneOrGenomicRegion resources.",
                "description": "Retrieves the collection of TargetedGeneOrGenomicRegion resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/targeted_gene_or_genomic_regions/{id}": {
            "get": {
                "operationId": "getTargetedGeneOrGenomicRegionItem",
                "tags": [
                    "TargetedGeneOrGenomicRegion"
                ],
                "responses": {
                    "200": {
                        "description": "TargetedGeneOrGenomicRegion resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedGeneOrGenomicRegion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a TargetedGeneOrGenomicRegion resource.",
                "description": "Retrieves a TargetedGeneOrGenomicRegion resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/targeted_taxonomic_or_functional_groups": {
            "get": {
                "operationId": "getTargetedTaxonomicOrFunctionalGroupCollection",
                "tags": [
                    "TargetedTaxonomicOrFunctionalGroup"
                ],
                "responses": {
                    "200": {
                        "description": "TargetedTaxonomicOrFunctionalGroup collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TargetedTaxonomicOrFunctionalGroup resources.",
                "description": "Retrieves the collection of TargetedTaxonomicOrFunctionalGroup resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/targeted_taxonomic_or_functional_groups/{id}": {
            "get": {
                "operationId": "getTargetedTaxonomicOrFunctionalGroupItem",
                "tags": [
                    "TargetedTaxonomicOrFunctionalGroup"
                ],
                "responses": {
                    "200": {
                        "description": "TargetedTaxonomicOrFunctionalGroup resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TargetedTaxonomicOrFunctionalGroup"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a TargetedTaxonomicOrFunctionalGroup resource.",
                "description": "Retrieves a TargetedTaxonomicOrFunctionalGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/taxonomies": {
            "get": {
                "operationId": "getTaxonomyCollection",
                "tags": [
                    "Taxonomy"
                ],
                "responses": {
                    "200": {
                        "description": "Taxonomy collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Taxonomy.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Taxonomy"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Taxonomy"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Taxonomy resources.",
                "description": "Retrieves the collection of Taxonomy resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/taxonomies/{id}": {
            "get": {
                "operationId": "getTaxonomyItem",
                "tags": [
                    "Taxonomy"
                ],
                "responses": {
                    "200": {
                        "description": "Taxonomy resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Taxonomy.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Taxonomy"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Taxonomy"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Taxonomy resource.",
                "description": "Retrieves a Taxonomy resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/temperature_categories": {
            "get": {
                "operationId": "getTemperatureCategoryCollection",
                "tags": [
                    "TemperatureCategory"
                ],
                "responses": {
                    "200": {
                        "description": "TemperatureCategory collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TemperatureCategory"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TemperatureCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of TemperatureCategory resources.",
                "description": "Retrieves the collection of TemperatureCategory resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postTemperatureCategoryCollection",
                "tags": [
                    "TemperatureCategory"
                ],
                "responses": {
                    "201": {
                        "description": "TemperatureCategory resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            }
                        },
                        "links": {
                            "GetTemperatureCategoryItem": {
                                "operationId": "getTemperatureCategoryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /temperature_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a TemperatureCategory resource.",
                "description": "Creates a TemperatureCategory resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new TemperatureCategory resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/temperature_categories/{id}": {
            "get": {
                "operationId": "getTemperatureCategoryItem",
                "tags": [
                    "TemperatureCategory"
                ],
                "responses": {
                    "200": {
                        "description": "TemperatureCategory resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a TemperatureCategory resource.",
                "description": "Retrieves a TemperatureCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putTemperatureCategoryItem",
                "tags": [
                    "TemperatureCategory"
                ],
                "responses": {
                    "200": {
                        "description": "TemperatureCategory resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/TemperatureCategory"
                                }
                            }
                        },
                        "links": {
                            "GetTemperatureCategoryItem": {
                                "operationId": "getTemperatureCategoryItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /temperature_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the TemperatureCategory resource.",
                "description": "Replaces the TemperatureCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated TemperatureCategory resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/TemperatureCategory"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteTemperatureCategoryItem",
                "tags": [
                    "TemperatureCategory"
                ],
                "responses": {
                    "204": {
                        "description": "TemperatureCategory resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the TemperatureCategory resource.",
                "description": "Removes the TemperatureCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/temperatures": {
            "get": {
                "operationId": "getTemperatureCollection",
                "tags": [
                    "Temperature"
                ],
                "responses": {
                    "200": {
                        "description": "Temperature collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Temperature.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Temperature"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Temperature"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Temperature resources.",
                "description": "Retrieves the collection of Temperature resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postTemperatureCollection",
                "tags": [
                    "Temperature"
                ],
                "responses": {
                    "201": {
                        "description": "Temperature resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            }
                        },
                        "links": {
                            "GetTemperatureItem": {
                                "operationId": "getTemperatureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /temperatures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Temperature resource.",
                "description": "Creates a Temperature resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Temperature resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/temperatures/{id}": {
            "get": {
                "operationId": "getTemperatureItem",
                "tags": [
                    "Temperature"
                ],
                "responses": {
                    "200": {
                        "description": "Temperature resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Temperature resource.",
                "description": "Retrieves a Temperature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putTemperatureItem",
                "tags": [
                    "Temperature"
                ],
                "responses": {
                    "200": {
                        "description": "Temperature resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Temperature"
                                }
                            }
                        },
                        "links": {
                            "GetTemperatureItem": {
                                "operationId": "getTemperatureItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /temperatures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Temperature resource.",
                "description": "Replaces the Temperature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Temperature resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Temperature"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteTemperatureItem",
                "tags": [
                    "Temperature"
                ],
                "responses": {
                    "204": {
                        "description": "Temperature resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Temperature resource.",
                "description": "Removes the Temperature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/temperatures/{id}/measures": {
            "get": {
                "operationId": "api_temperatures_measures_get_subresourceTemperatureSubresource",
                "tags": [
                    "Measure",
                    "Temperature"
                ],
                "responses": {
                    "200": {
                        "description": "Temperature resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Measure.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measure"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves a Temperature resource.",
                "description": "Retrieves a Temperature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Temperature identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/units": {
            "get": {
                "operationId": "getUnitCollection",
                "tags": [
                    "Unit"
                ],
                "responses": {
                    "200": {
                        "description": "Unit collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Unit.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Unit"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Unit resources.",
                "description": "Retrieves the collection of Unit resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "measureTypes.id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "measureTypes.id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postUnitCollection",
                "tags": [
                    "Unit"
                ],
                "responses": {
                    "201": {
                        "description": "Unit resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        },
                        "links": {
                            "GetUnitItem": {
                                "operationId": "getUnitItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /units/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Unit resource.",
                "description": "Creates a Unit resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Unit resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/units/{id}": {
            "get": {
                "operationId": "getUnitItem",
                "tags": [
                    "Unit"
                ],
                "responses": {
                    "200": {
                        "description": "Unit resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Unit resource.",
                "description": "Retrieves a Unit resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putUnitItem",
                "tags": [
                    "Unit"
                ],
                "responses": {
                    "200": {
                        "description": "Unit resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        },
                        "links": {
                            "GetUnitItem": {
                                "operationId": "getUnitItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /units/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Unit resource.",
                "description": "Replaces the Unit resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Unit resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteUnitItem",
                "tags": [
                    "Unit"
                ],
                "responses": {
                    "204": {
                        "description": "Unit resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Unit resource.",
                "description": "Removes the Unit resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/usages": {
            "get": {
                "operationId": "getUsageCollection",
                "tags": [
                    "Usage"
                ],
                "responses": {
                    "200": {
                        "description": "Usage collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Usage.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Usage"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Usage"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of Usage resources.",
                "description": "Retrieves the collection of Usage resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "slug[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    },
                    {
                        "name": "multisearch",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[name]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "order[slug]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postUsageCollection",
                "tags": [
                    "Usage"
                ],
                "responses": {
                    "201": {
                        "description": "Usage resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            }
                        },
                        "links": {
                            "GetUsageItem": {
                                "operationId": "getUsageItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /usages/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a Usage resource.",
                "description": "Creates a Usage resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new Usage resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/usages/{id}": {
            "get": {
                "operationId": "getUsageItem",
                "tags": [
                    "Usage"
                ],
                "responses": {
                    "200": {
                        "description": "Usage resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a Usage resource.",
                "description": "Retrieves a Usage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "put": {
                "operationId": "putUsageItem",
                "tags": [
                    "Usage"
                ],
                "responses": {
                    "200": {
                        "description": "Usage resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Usage"
                                }
                            }
                        },
                        "links": {
                            "GetUsageItem": {
                                "operationId": "getUsageItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /usages/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Replaces the Usage resource.",
                "description": "Replaces the Usage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "requestBody": {
                    "description": "The updated Usage resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Usage"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "delete": {
                "operationId": "deleteUsageItem",
                "tags": [
                    "Usage"
                ],
                "responses": {
                    "204": {
                        "description": "Usage resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the Usage resource.",
                "description": "Removes the Usage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users": {
            "get": {
                "operationId": "getUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users/myself": {
            "get": {
                "operationId": "get_profileUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users/myself/tokens": {
            "get": {
                "operationId": "getPersonalAccessTokenCollection",
                "tags": [
                    "PersonalAccessToken"
                ],
                "responses": {
                    "200": {
                        "description": "PersonalAccessToken collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PersonalAccessToken.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccessToken"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PersonalAccessToken"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of PersonalAccessToken resources.",
                "description": "Retrieves the collection of PersonalAccessToken resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "post": {
                "operationId": "postPersonalAccessTokenCollection",
                "tags": [
                    "PersonalAccessToken"
                ],
                "responses": {
                    "201": {
                        "description": "PersonalAccessToken resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken"
                                }
                            }
                        },
                        "links": {
                            "GetPersonalAccessTokenItem": {
                                "operationId": "getPersonalAccessTokenItem",
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/myself/tokens/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "summary": "Creates a PersonalAccessToken resource.",
                "description": "Creates a PersonalAccessToken resource.",
                "parameters": [],
                "requestBody": {
                    "description": "The new PersonalAccessToken resource",
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonalAccessToken.CreatePersonalAccessToken.jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonalAccessToken.CreatePersonalAccessToken"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonalAccessToken.CreatePersonalAccessToken"
                            }
                        }
                    },
                    "required": true
                },
                "deprecated": false
            },
            "parameters": []
        },
        "/users/myself/tokens/{id}": {
            "get": {
                "operationId": "getPersonalAccessTokenItem",
                "tags": [
                    "PersonalAccessToken"
                ],
                "responses": {
                    "200": {
                        "description": "PersonalAccessToken resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonalAccessToken"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a PersonalAccessToken resource.",
                "description": "Retrieves a PersonalAccessToken resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "delete": {
                "operationId": "deletePersonalAccessTokenItem",
                "tags": [
                    "PersonalAccessToken"
                ],
                "responses": {
                    "204": {
                        "description": "PersonalAccessToken resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes the PersonalAccessToken resource.",
                "description": "Removes the PersonalAccessToken resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users/permissions/{resource}": {
            "get": {
                "operationId": "get_permissions_for_collectionUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.Permission.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User.Permission"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User.Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users/permissions/{resource}/{id}": {
            "get": {
                "operationId": "get_permissions_for_itemUserCollection",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User collection",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User.Permission.jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:previous": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            },
                                            "example": {
                                                "@id": "string",
                                                "type": "string",
                                                "hydra:first": "string",
                                                "hydra:last": "string",
                                                "hydra:previous": "string",
                                                "hydra:next": "string"
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User.Permission"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User.Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieves the collection of User resources.",
                "description": "Retrieves the collection of User resources.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The collection page number",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The number of items per page",
                        "required": false,
                        "deprecated": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        },
                        "style": "form",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        },
        "/users/{subject}": {
            "get": {
                "operationId": "getUserItem",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User resource",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User.jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Retrieves a User resource.",
                "description": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "subject",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "deprecated": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple",
                        "explode": false,
                        "allowReserved": false
                    }
                ],
                "deprecated": false
            },
            "parameters": []
        }
    },
    "components": {
        "schemas": {
            "Adapter": {
                "type": "object",
                "description": "Class Adapter.",
                "required": [
                    "sequence"
                ],
                "properties": {
                    "sequence": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Adapter.jsonld": {
                "type": "object",
                "description": "Class Adapter.",
                "required": [
                    "sequence"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "sequence": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "AdapterType": {
                "type": "object",
                "description": "Class AdapterType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "AdapterType.jsonld": {
                "type": "object",
                "description": "Class AdapterType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Aeration": {
                "type": "object",
                "description": "Class Aeration.",
                "properties": {
                    "systemType": {
                        "type": "string",
                        "nullable": true
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "Aeration.jsonld": {
                "type": "object",
                "description": "Class Aeration.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "systemType": {
                        "type": "string",
                        "nullable": true
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "AerobicActivatedSludgeProcess": {
                "type": "object",
                "description": "Class AerobicActivatedSludgeProcess.",
                "required": [
                    "subType",
                    "separationType",
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ],
                "properties": {
                    "subType": {
                        "description": "subType.",
                        "type": "string"
                    },
                    "mixing": {
                        "description": "mixing",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        ],
                        "nullable": true
                    },
                    "separationType": {
                        "description": "separationType.",
                        "type": "string"
                    },
                    "aeration": {
                        "description": "aeration",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Aeration"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                }
            },
            "AerobicActivatedSludgeProcess.jsonld": {
                "type": "object",
                "description": "Class AerobicActivatedSludgeProcess.",
                "required": [
                    "subType",
                    "separationType",
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "subType": {
                        "description": "subType.",
                        "type": "string"
                    },
                    "mixing": {
                        "description": "mixing",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mixing.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "separationType": {
                        "description": "separationType.",
                        "type": "string"
                    },
                    "aeration": {
                        "description": "aeration",
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Aeration.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                }
            },
            "Alteration": {
                "type": "object",
                "description": "Class Alteration.",
                "required": [
                    "description",
                    "date"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Alteration.jsonld": {
                "type": "object",
                "description": "Class Alteration.",
                "required": [
                    "description",
                    "date"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "AnaerobicDigestionDryProcess": {
                "type": "object",
                "description": "Class AnaerobicDigestionDryProcess.",
                "properties": {
                    "leachate": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Leachate"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ]
            },
            "AnaerobicDigestionDryProcess.jsonld": {
                "type": "object",
                "description": "Class AnaerobicDigestionDryProcess.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "leachate": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Leachate.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ]
            },
            "AnaerobicDigestionWetProcess": {
                "type": "object",
                "description": "Class AnaerobicDigestionWetProcess.",
                "properties": {
                    "temperature": {
                        "$ref": "#/components/schemas/Temperature"
                    },
                    "support": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Support"
                            }
                        ],
                        "nullable": true
                    },
                    "mixing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mixing"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ]
            },
            "AnaerobicDigestionWetProcess.jsonld": {
                "type": "object",
                "description": "Class AnaerobicDigestionWetProcess.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "temperature": {
                        "$ref": "#/components/schemas/Temperature.jsonld"
                    },
                    "support": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Support.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "mixing": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mixing.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ]
            },
            "Annotation": {
                "type": "object",
                "description": "Class Annotation.",
                "required": [
                    "representativeSequence",
                    "sampleResult"
                ],
                "properties": {
                    "representativeSequence": {
                        "type": "string"
                    },
                    "taxoAffiliation": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "count": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer"
                    },
                    "sampleResult": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Annotation.jsonld": {
                "type": "object",
                "description": "Class Annotation.",
                "required": [
                    "representativeSequence",
                    "sampleResult"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "representativeSequence": {
                        "type": "string"
                    },
                    "taxoAffiliation": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "count": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer"
                    },
                    "sampleResult": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "BioinformaticWorkflow": {
                "type": "object",
                "description": "Class BioinformaticWorkflow.",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "bioinformaticFrameworks": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "bioinformaticFrameworksDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "trimmingAndDenoisingTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "trimmingAndDenoisingToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assemblySoftware": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "assemblySoftwareDisplay": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "chimeraChecks": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "chimeraChecksDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusteringTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "clusteringToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taxoAssignTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "taxoAssignToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taxoAssignDbs": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "taxoAssignDbsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "procedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "displayProcedure": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "validStatusPublic": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "validPublicStatusSoftware": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "validStatusProcedure": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slugWithStatus": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BioinformaticWorkflow.jsonld": {
                "type": "object",
                "description": "Class BioinformaticWorkflow.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "bioinformaticFrameworks": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "bioinformaticFrameworksDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "trimmingAndDenoisingTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "trimmingAndDenoisingToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assemblySoftware": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "assemblySoftwareDisplay": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "chimeraChecks": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "chimeraChecksDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusteringTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "clusteringToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taxoAssignTools": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "taxoAssignToolsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taxoAssignDbs": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "taxoAssignDbsDisplay": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "procedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "displayProcedure": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "validStatusPublic": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "validPublicStatusSoftware": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "validStatusProcedure": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slugWithStatus": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BioinformaticWorkflowProcedure": {
                "type": "object",
                "description": "Class BioinformaticWorkflowProcedure.",
                "properties": {
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "displayDocument": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BioinformaticWorkflowProcedure.jsonld": {
                "type": "object",
                "description": "Class BioinformaticWorkflowProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "displayDocument": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BiomassCommonName": {
                "type": "object",
                "description": "Class BiomassCommonNam.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BiomassCommonName.jsonld": {
                "type": "object",
                "description": "Class BiomassCommonNam.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BiomassFeedstock": {
                "type": "object",
                "description": "Class BiomassFeedstock (old name Vegetal).",
                "properties": {
                    "nativeBiomassTypes": {
                        "description": "Type of native biomass.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "commonName": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "scientificName": {
                        "description": "Scientific name of the native biomass at the genus or species level (e.g. Triticum, Quercus, Spirulina, \u2026).",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "residueTypes": {
                        "description": "Type of residue.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "infoBiomass": {
                        "description": "Additional information about the biomass.",
                        "type": "string",
                        "nullable": true
                    },
                    "taxidGenus": {
                        "description": "Taxonomic ID of the biomass at the genus level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "taxidStrainOrSpecies": {
                        "description": "Taxonomic ID of the biomass at the species or strain level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "BiomassFeedstock.jsonld": {
                "type": "object",
                "description": "Class BiomassFeedstock (old name Vegetal).",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nativeBiomassTypes": {
                        "description": "Type of native biomass.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "commonName": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "scientificName": {
                        "description": "Scientific name of the native biomass at the genus or species level (e.g. Triticum, Quercus, Spirulina, \u2026).",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "residueTypes": {
                        "description": "Type of residue.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "infoBiomass": {
                        "description": "Additional information about the biomass.",
                        "type": "string",
                        "nullable": true
                    },
                    "taxidGenus": {
                        "description": "Taxonomic ID of the biomass at the genus level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "taxidStrainOrSpecies": {
                        "description": "Taxonomic ID of the biomass at the species or strain level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "BiomassResidueType": {
                "type": "object",
                "description": "Class BiomassResidueType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BiomassResidueType.jsonld": {
                "type": "object",
                "description": "Class BiomassResidueType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BiomassScientificName": {
                "type": "object",
                "description": "Class BiomassScientificName.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BiomassScientificName.jsonld": {
                "type": "object",
                "description": "Class BiomassScientificName.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BrandForNucleicAcidDosage": {
                "type": "object",
                "description": "Class BrandForNucleicAcidDosage.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BrandForNucleicAcidDosage.jsonld": {
                "type": "object",
                "description": "Class BrandForNucleicAcidDosage.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "BufferGenericName": {
                "type": "object",
                "description": "Class BufferGenericName.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "BufferGenericName.jsonld": {
                "type": "object",
                "description": "Class BufferGenericName.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Campaign": {
                "type": "object",
                "description": "Class Campaign.",
                "properties": {
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sitesName": {
                        "readOnly": true,
                        "description": "Get Sites DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "project",
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ]
            },
            "Campaign.jsonld": {
                "type": "object",
                "description": "Class Campaign.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sitesName": {
                        "readOnly": true,
                        "description": "Get Sites DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "project",
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ]
            },
            "Checksum": {
                "type": "object",
                "description": "",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Checksum.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "algorithm": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "ChemicalCompound": {
                "type": "object",
                "description": "Class ChemicalCompound.",
                "properties": {
                    "state": {
                        "description": "Chemical species state at usual storage conditions.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "purity": {
                        "description": "Purity of the chemical compound in percent.",
                        "type": "number",
                        "nullable": true
                    },
                    "grade": {
                        "description": "Grade of the chemical compound.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "brand": {
                        "description": "Brand of the used chemical compount.",
                        "type": "string",
                        "nullable": true
                    },
                    "linearFormula": {
                        "description": "Linear formula of the product (without indicating the isotopes).",
                        "type": "string"
                    },
                    "linearFormulaIsotope": {
                        "description": "Linear formula of the product (with isotopes).",
                        "type": "string",
                        "nullable": true
                    },
                    "cas": {
                        "description": "CAS number.",
                        "type": "string",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "linearFormula",
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "ChemicalCompound.jsonld": {
                "type": "object",
                "description": "Class ChemicalCompound.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "state": {
                        "description": "Chemical species state at usual storage conditions.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "purity": {
                        "description": "Purity of the chemical compound in percent.",
                        "type": "number",
                        "nullable": true
                    },
                    "grade": {
                        "description": "Grade of the chemical compound.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "brand": {
                        "description": "Brand of the used chemical compount.",
                        "type": "string",
                        "nullable": true
                    },
                    "linearFormula": {
                        "description": "Linear formula of the product (without indicating the isotopes).",
                        "type": "string"
                    },
                    "linearFormulaIsotope": {
                        "description": "Linear formula of the product (with isotopes).",
                        "type": "string",
                        "nullable": true
                    },
                    "cas": {
                        "description": "CAS number.",
                        "type": "string",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "linearFormula",
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "ChemicalGrade": {
                "type": "object",
                "description": "Class ChemicalGrade.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ChemicalGrade.jsonld": {
                "type": "object",
                "description": "Class ChemicalGrade.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CollectionName": {
                "type": "object",
                "description": "Class CollectionName.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CollectionName.jsonld": {
                "type": "object",
                "description": "Class CollectionName.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompanyActivity": {
                "type": "object",
                "description": "Class CompanyActivity.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompanyActivity.jsonld": {
                "type": "object",
                "description": "Class CompanyActivity.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Compartment": {
                "type": "object",
                "description": "Class Compartment.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "constituents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constituent"
                        }
                    },
                    "experimentalSeries": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "feedingType": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayFeedingType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "reactor",
                    "feedingType",
                    "measures",
                    "slug"
                ]
            },
            "Compartment.jsonld": {
                "type": "object",
                "description": "Class Compartment.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "constituents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constituent.jsonld"
                        }
                    },
                    "experimentalSeries": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "feedingType": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayFeedingType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "reactor",
                    "feedingType",
                    "measures",
                    "slug"
                ]
            },
            "CompartmentReplicate": {
                "type": "object",
                "description": "Class CompartmentReplicate.",
                "required": [
                    "compartment",
                    "reactorReplicate",
                    "project"
                ],
                "properties": {
                    "compartment": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "reactorReplicate": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "reactorSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "compartmentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "CompartmentReplicate.jsonld": {
                "type": "object",
                "description": "Class CompartmentReplicate.",
                "required": [
                    "compartment",
                    "reactorReplicate",
                    "project"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "compartment": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "reactorReplicate": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "reactorSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "compartmentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Constituent": {
                "type": "object",
                "description": "Class Constituent.",
                "required": [
                    "usages",
                    "amount",
                    "compartment"
                ],
                "properties": {
                    "usages": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Measure"
                    },
                    "input": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "compartment": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "continuous": {
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Constituent.jsonld": {
                "type": "object",
                "description": "Class Constituent.",
                "required": [
                    "usages",
                    "amount",
                    "compartment"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "usages": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Measure.jsonld"
                    },
                    "input": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "compartment": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "continuous": {
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "DefaultInput": {
                "type": "object",
                "description": "Class DefaultInput.",
                "properties": {
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "collectionDate": {
                        "description": "Date of sampling of the waste.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "description": "Name of the company.",
                        "type": "string",
                        "nullable": true
                    },
                    "companyActivity": {
                        "description": "Activity of the company.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "DefaultInput.jsonld": {
                "type": "object",
                "description": "Class DefaultInput.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "collectionDate": {
                        "description": "Date of sampling of the waste.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "description": "Name of the company.",
                        "type": "string",
                        "nullable": true
                    },
                    "companyActivity": {
                        "description": "Activity of the company.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "DefaultProcess": {
                "type": "object",
                "description": "Class DefaultProcess.",
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ],
                "properties": {
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                }
            },
            "DefaultProcess.jsonld": {
                "type": "object",
                "description": "Class DefaultProcess.",
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name",
                    "measures"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                }
            },
            "DefaultSample": {
                "type": "object",
                "description": "Class DefaultSample.",
                "properties": {
                    "operation": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operationLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "DefaultSample.jsonld": {
                "type": "object",
                "description": "Class DefaultSample.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "operation": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operationLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "Event": {
                "type": "object",
                "description": "Class Event.",
                "required": [
                    "date"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Event.jsonld": {
                "type": "object",
                "description": "Class Event.",
                "required": [
                    "date"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "ExperimentalSeries": {
                "type": "object",
                "description": "Class ExperimentalSeries.",
                "properties": {
                    "reactors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "processCategoryTree": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "project",
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ]
            },
            "ExperimentalSeries.jsonld": {
                "type": "object",
                "description": "Class ExperimentalSeries.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "reactors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "processCategoryTree": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "processCategory",
                    "project",
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ]
            },
            "FeedingType": {
                "type": "object",
                "description": "Class FeedingType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "FeedingType.jsonld": {
                "type": "object",
                "description": "Class FeedingType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "File": {
                "type": "object",
                "description": "",
                "properties": {
                    "lastModified": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "totalSize": {
                        "type": "integer"
                    },
                    "valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "invalidReason": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "checksum": {
                        "$ref": "#/components/schemas/Checksum"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "File.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lastModified": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "totalSize": {
                        "type": "integer"
                    },
                    "valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "invalidReason": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "checksum": {
                        "$ref": "#/components/schemas/Checksum.jsonld"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Graph": {
                "type": "object",
                "description": "Class Graph.",
                "required": [
                    "monitoredMeasureTypes",
                    "name"
                ],
                "properties": {
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "graphCollection": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operation": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Graph.jsonld": {
                "type": "object",
                "description": "Class Graph.",
                "required": [
                    "monitoredMeasureTypes",
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "graphCollection": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operation": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "GraphCollection": {
                "type": "object",
                "description": "Class GraphCollection.",
                "properties": {
                    "graphs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operation": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "operation",
                    "name"
                ]
            },
            "GraphCollection.jsonld": {
                "type": "object",
                "description": "Class GraphCollection.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "graphs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operation": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "operation",
                    "name"
                ]
            },
            "ImportError": {
                "type": "object",
                "description": "",
                "properties": {
                    "cell": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "log": {}
                }
            },
            "ImportError.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cell": {
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "log": {}
                }
            },
            "ImportReport": {
                "type": "object",
                "description": "Class ImportReport.",
                "properties": {
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ImportReport.jsonld": {
                "type": "object",
                "description": "Class ImportReport.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError.jsonld"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Input": {
                "type": "object",
                "description": "Class Input.",
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ],
                "properties": {
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Input.jsonld": {
                "type": "object",
                "description": "Class Input.",
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "InputCategory": {
                "type": "object",
                "description": "Class InputCategory.",
                "properties": {
                    "inputTemplate": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "description": "Many Categories have One Category.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "description": "One Category has Many Categories.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "instanciable": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "usages": {
                        "description": "Many InputCategories have Many Usages.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "inputCategoryTree": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "InputCategory.jsonld": {
                "type": "object",
                "description": "Class InputCategory.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "inputTemplate": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "description": "Many Categories have One Category.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "description": "One Category has Many Categories.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "instanciable": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "usages": {
                        "description": "Many InputCategories have Many Usages.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "inputCategoryTree": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Isotope": {
                "type": "object",
                "description": "Class Isotope.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Isotope.jsonld": {
                "type": "object",
                "description": "Class Isotope.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "KitNucleicAcidDosage": {
                "type": "object",
                "description": "Class KitNucleicAcidDosage.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "KitNucleicAcidDosage.jsonld": {
                "type": "object",
                "description": "Class KitNucleicAcidDosage.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Leachate": {
                "type": "object",
                "description": "Class Leachate for LeachateRecirculation.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "Leachate.jsonld": {
                "type": "object",
                "description": "Class Leachate for LeachateRecirculation.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "Library": {
                "type": "object",
                "description": "Class Library.",
                "properties": {
                    "libraryKits": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "libraryProcedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "libraryLayout": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "libSize": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "libraryVector": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "libraryScreeningStrategy": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "libraryLayout"
                ]
            },
            "Library.jsonld": {
                "type": "object",
                "description": "Class Library.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "libraryKits": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "libraryProcedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "libraryLayout": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "libSize": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "libraryVector": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "libraryScreeningStrategy": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "libraryLayout"
                ]
            },
            "LibraryKit": {
                "type": "object",
                "description": "Class LibraryKit.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryKit.jsonld": {
                "type": "object",
                "description": "Class LibraryKit.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryLayout": {
                "type": "object",
                "description": "Class LibraryLayout.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryLayout.jsonld": {
                "type": "object",
                "description": "Class LibraryLayout.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryProcedure": {
                "type": "object",
                "description": "Class LibraryProcedure.",
                "properties": {
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "LibraryProcedure.jsonld": {
                "type": "object",
                "description": "Class LibraryProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "LibraryScreeningStrategy": {
                "type": "object",
                "description": "Class LibraryScreeningStrategy.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryScreeningStrategy.jsonld": {
                "type": "object",
                "description": "Class LibraryScreeningStrategy.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryVector": {
                "type": "object",
                "description": "Class LibraryVector.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "LibraryVector.jsonld": {
                "type": "object",
                "description": "Class LibraryVector.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Location": {
                "type": "object",
                "description": "Class Location.",
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "project"
                ]
            },
            "Location.jsonld": {
                "type": "object",
                "description": "Class Location.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "project"
                ]
            },
            "LogEntry": {
                "type": "object",
                "description": "Class LogEntry.",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "day": {
                        "readOnly": true,
                        "description": "Get day.",
                        "type": "string"
                    },
                    "actor": {
                        "type": "string"
                    },
                    "eventName": {
                        "type": "string"
                    },
                    "entityUri": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityLabel": {
                        "type": "string",
                        "nullable": true
                    },
                    "context": {
                        "type": "string"
                    },
                    "contextAsArray": {
                        "readOnly": true,
                        "description": "Get context array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectUuid": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectPart": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "LogEntry.jsonld": {
                "type": "object",
                "description": "Class LogEntry.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "day": {
                        "readOnly": true,
                        "description": "Get day.",
                        "type": "string"
                    },
                    "actor": {
                        "type": "string"
                    },
                    "eventName": {
                        "type": "string"
                    },
                    "entityUri": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityLabel": {
                        "type": "string",
                        "nullable": true
                    },
                    "context": {
                        "type": "string"
                    },
                    "contextAsArray": {
                        "readOnly": true,
                        "description": "Get context array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectUuid": {
                        "type": "string",
                        "nullable": true
                    },
                    "projectPart": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "ManufacturedMaterial": {
                "type": "object",
                "description": "Class ManufacturedMaterial.",
                "properties": {
                    "type": {
                        "description": "Type of manufactured material (e.g. plastic, cardboard, paper, textile, sanitary textile, metal, glass, \u2026).",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "subType": {
                        "description": "Type of manufactured material (e.g. Office paper, flat cardboard, handkerchief, \u2026).",
                        "type": "string",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "ManufacturedMaterial.jsonld": {
                "type": "object",
                "description": "Class ManufacturedMaterial.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of manufactured material (e.g. plastic, cardboard, paper, textile, sanitary textile, metal, glass, \u2026).",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "subType": {
                        "description": "Type of manufactured material (e.g. Office paper, flat cardboard, handkerchief, \u2026).",
                        "type": "string",
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "MaterialType": {
                "type": "object",
                "description": "Class MaterialType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MaterialType.jsonld": {
                "type": "object",
                "description": "Class MaterialType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MatrixType": {
                "type": "object",
                "description": "Class MatrixType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "MatrixType.jsonld": {
                "type": "object",
                "description": "Class MatrixType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Measure": {
                "type": "object",
                "description": "Class Measure.",
                "properties": {
                    "magnetude": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "unit"
                ]
            },
            "Measure.jsonld": {
                "type": "object",
                "description": "Class Measure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "magnetude": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "unit"
                ]
            },
            "MeasureType": {
                "type": "object",
                "description": "Class MeasureType.",
                "properties": {
                    "allowedUnits": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "defaultUnit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "tags": {
                        "minItems": 1,
                        "description": "|Collection",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "withUnit": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "defaultUnit",
                    "category",
                    "name",
                    "slug"
                ]
            },
            "MeasureType.jsonld": {
                "type": "object",
                "description": "Class MeasureType.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "allowedUnits": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "defaultUnit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "tags": {
                        "minItems": 1,
                        "description": "|Collection",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "withUnit": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "defaultUnit",
                    "category",
                    "name",
                    "slug"
                ]
            },
            "MeasureTypeCategory": {
                "type": "object",
                "description": "Class MeasureTypeCategory.",
                "properties": {
                    "children": {
                        "description": "One Category has Many Categories.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "parent": {
                        "description": "Many Categories have One Category.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ancestry": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MeasureTypeCategory.jsonld": {
                "type": "object",
                "description": "Class MeasureTypeCategory.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "children": {
                        "description": "One Category has Many Categories.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "parent": {
                        "description": "Many Categories have One Category.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ancestry": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MeasureTypeTag": {
                "type": "object",
                "description": "Class MeasureTypeTag.",
                "properties": {
                    "measureTypes": {
                        "description": "|Collection",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "MeasureTypeTag.jsonld": {
                "type": "object",
                "description": "Class MeasureTypeTag.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "measureTypes": {
                        "description": "|Collection",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "Measurement": {
                "type": "object",
                "description": "Class Measurement.",
                "required": [
                    "location",
                    "type"
                ],
                "properties": {
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operators": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "monitoredMeasures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Measurement.jsonld": {
                "type": "object",
                "description": "Class Measurement.",
                "required": [
                    "location",
                    "type"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operators": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "monitoredMeasures": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Membrane": {
                "type": "object",
                "description": "Class Membrane.",
                "required": [
                    "type",
                    "measures"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "startUpDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "compartementLeft": {
                        "type": "integer"
                    },
                    "compartementRight": {
                        "type": "integer"
                    },
                    "reference": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                }
            },
            "Membrane.jsonld": {
                "type": "object",
                "description": "Class Membrane.",
                "required": [
                    "type",
                    "measures"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "startUpDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "compartementLeft": {
                        "type": "integer"
                    },
                    "compartementRight": {
                        "type": "integer"
                    },
                    "reference": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                }
            },
            "MembraneType": {
                "type": "object",
                "description": "Class MembraneType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "MembraneType.jsonld": {
                "type": "object",
                "description": "Class MembraneType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "MetabarcodingBioinformaticRun": {
                "type": "object",
                "description": "Class MetabarcodingBioinformaticRun.",
                "properties": {
                    "sequencingSamples": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "bioinformaticWorkflow": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayBioinformaticWorkflow": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "biomFile": {
                        "$ref": "#/components/schemas/File"
                    },
                    "metricsFile": {
                        "$ref": "#/components/schemas/File"
                    },
                    "nwkFile": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "logFiles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "metricsFileReport": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomFileReport": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "bioinformaticWorkflow",
                    "name",
                    "slug"
                ]
            },
            "MetabarcodingBioinformaticRun.jsonld": {
                "type": "object",
                "description": "Class MetabarcodingBioinformaticRun.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sequencingSamples": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "bioinformaticWorkflow": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayBioinformaticWorkflow": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "biomFile": {
                        "$ref": "#/components/schemas/File.jsonld"
                    },
                    "metricsFile": {
                        "$ref": "#/components/schemas/File.jsonld"
                    },
                    "nwkFile": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "logFiles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "metricsFileReport": {
                        "type": "string",
                        "nullable": true
                    },
                    "biomFileReport": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "bioinformaticWorkflow",
                    "name",
                    "slug"
                ]
            },
            "Mixing": {
                "type": "object",
                "description": "Class Mixing.",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "speedCategory": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "Mixing.jsonld": {
                "type": "object",
                "description": "Class Mixing.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "speedCategory": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "MixingType": {
                "type": "object",
                "description": "Class MixingType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MixingType.jsonld": {
                "type": "object",
                "description": "Class MixingType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Modecom": {
                "type": "object",
                "description": "Class Modecom.",
                "required": [
                    "type",
                    "percent"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "percent": {
                        "type": "number"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Modecom.jsonld": {
                "type": "object",
                "description": "Class Modecom.",
                "required": [
                    "type",
                    "percent"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "percent": {
                        "type": "number"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "ModecomCategory": {
                "type": "object",
                "description": "Class ModecomCategory.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ModecomCategory.jsonld": {
                "type": "object",
                "description": "Class ModecomCategory.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MonitoredMeasure": {
                "type": "object",
                "description": "Class MonitoredMeasure.",
                "required": [
                    "measurement",
                    "dateTime"
                ],
                "properties": {
                    "measurement": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "magnetude": {
                        "type": "string",
                        "nullable": true
                    },
                    "unit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "MonitoredMeasure.jsonld": {
                "type": "object",
                "description": "Class MonitoredMeasure.",
                "required": [
                    "measurement",
                    "dateTime"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "measurement": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "magnetude": {
                        "type": "string",
                        "nullable": true
                    },
                    "unit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "MonitoredMeasureType": {
                "type": "object",
                "description": "Class MonitoredMeasureType.",
                "required": [
                    "type",
                    "unit",
                    "locations"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operation": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "symbolUnit": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "withUnit": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "defaultUnit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "MonitoredMeasureType.jsonld": {
                "type": "object",
                "description": "Class MonitoredMeasureType.",
                "required": [
                    "type",
                    "unit",
                    "locations"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "unit": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operation": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "label": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "slug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "symbolUnit": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "withUnit": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "defaultUnit": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "MultiplexIdentifier": {
                "type": "object",
                "description": "Class MultiplexIdentifier.",
                "required": [
                    "sequencingSampleComplement",
                    "sequence",
                    "slug"
                ],
                "properties": {
                    "sequencingSampleComplement": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sequence": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "MultiplexIdentifier.jsonld": {
                "type": "object",
                "description": "Class MultiplexIdentifier.",
                "required": [
                    "sequencingSampleComplement",
                    "sequence",
                    "slug"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "sequencingSampleComplement": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sequence": {
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "NativeBiomassType": {
                "type": "object",
                "description": "Class NativeBiomassType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "NativeBiomassType.jsonld": {
                "type": "object",
                "description": "Class NativeBiomassType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "NucleicAcid": {
                "type": "object",
                "description": "Class NucleicAcid.",
                "required": [
                    "nucleicAcidDosageMethods",
                    "nucleicAcidExtractionMethods",
                    "measures"
                ],
                "properties": {
                    "nucleicAcidDosageMethods": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayNucleicAcidDosageMethods": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nucleicAcidExtractionMethods": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayNucleicAcidExtractionMethods": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nucleicAcidExtraction": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "displayNucleicAcidExtraction": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                }
            },
            "NucleicAcid.jsonld": {
                "type": "object",
                "description": "Class NucleicAcid.",
                "required": [
                    "nucleicAcidDosageMethods",
                    "nucleicAcidExtractionMethods",
                    "measures"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nucleicAcidDosageMethods": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayNucleicAcidDosageMethods": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nucleicAcidExtractionMethods": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayNucleicAcidExtractionMethods": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nucleicAcidExtraction": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "displayNucleicAcidExtraction": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                }
            },
            "NucleicAcidAmplificationProcedure": {
                "type": "object",
                "description": "Class NucleicAcidAmplificationProcedure.",
                "properties": {
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidAmplificationProcedure.jsonld": {
                "type": "object",
                "description": "Class NucleicAcidAmplificationProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidDosageMethod": {
                "type": "object",
                "description": "Class NucleicAcidDosageMethod.",
                "properties": {
                    "brandNucleicAcidDosage": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "kitNucleicAcidDosage": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidDosageMethod.jsonld": {
                "type": "object",
                "description": "Class NucleicAcidDosageMethod.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "brandNucleicAcidDosage": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "kitNucleicAcidDosage": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidExtractionMethod": {
                "type": "object",
                "description": "Class NucleicAcidExtractionMethod.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidExtractionMethod.jsonld": {
                "type": "object",
                "description": "Class NucleicAcidExtractionMethod.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidExtractionProcedure": {
                "type": "object",
                "description": "Class NucleicAcidExtractionProcedure.",
                "properties": {
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "NucleicAcidExtractionProcedure.jsonld": {
                "type": "object",
                "description": "Class NucleicAcidExtractionProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "Operation": {
                "type": "object",
                "description": "Class Operation.",
                "required": [
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ],
                "properties": {
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "readOnly": true,
                        "description": "Get project.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Operation.ImportReport": {
                "type": "object",
                "description": "Class Operation.",
                "properties": {
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Operation.ImportReport.jsonld": {
                "type": "object",
                "description": "Class Operation.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError.jsonld"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Operation.jsonld": {
                "type": "object",
                "description": "Class Operation.",
                "required": [
                    "launchDate",
                    "operators",
                    "referent",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "launchDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "summary": {
                        "type": "string",
                        "nullable": true
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referent": {
                        "description": "Referent for the series.",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "referentDisplayName": {
                        "readOnly": true,
                        "description": "Get referent displayName.",
                        "type": "string"
                    },
                    "graphCollection": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "schemes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "procedures": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "project": {
                        "readOnly": true,
                        "description": "Get project.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Organism": {
                "type": "object",
                "description": "Class Organism.",
                "properties": {
                    "collectionRef": {
                        "description": "Reference of the strain if ordered from a collection.",
                        "type": "string",
                        "nullable": true
                    },
                    "collectionName": {
                        "description": "Name of the collection from which the strain was ordered.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "taxidSpecies": {
                        "description": "Taxonomic ID of the organism at the species level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "taxidStrain": {
                        "description": "Taxonomic ID of the organism at the strain level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "bacDiveRef": {
                        "description": "BacDive reference.",
                        "type": "string",
                        "nullable": true
                    },
                    "organismSpecies": {
                        "description": "Name of the organism at the species level (e.g. Ruminiclostridium cellulolyticum, Methanosarcina barkeri,\nMicrothrix parvicella, \u2026).",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "Organism.jsonld": {
                "type": "object",
                "description": "Class Organism.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "collectionRef": {
                        "description": "Reference of the strain if ordered from a collection.",
                        "type": "string",
                        "nullable": true
                    },
                    "collectionName": {
                        "description": "Name of the collection from which the strain was ordered.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "taxidSpecies": {
                        "description": "Taxonomic ID of the organism at the species level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "taxidStrain": {
                        "description": "Taxonomic ID of the organism at the strain level (https://www.ncbi.nlm.nih.gov/taxonomy).",
                        "type": "integer",
                        "nullable": true
                    },
                    "bacDiveRef": {
                        "description": "BacDive reference.",
                        "type": "string",
                        "nullable": true
                    },
                    "organismSpecies": {
                        "description": "Name of the organism at the species level (e.g. Ruminiclostridium cellulolyticum, Methanosarcina barkeri,\nMicrothrix parvicella, \u2026).",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "labeledElements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "labeledElementForSample": {
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "labeledElements"
                ]
            },
            "OrganismSpecies": {
                "type": "object",
                "description": "Class OrganismSpecies.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "OrganismSpecies.jsonld": {
                "type": "object",
                "description": "Class OrganismSpecies.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PcrConditions": {
                "type": "object",
                "description": "Class PcrConditions.",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "measures",
                    "slug"
                ]
            },
            "PcrConditions.jsonld": {
                "type": "object",
                "description": "Class PcrConditions.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "measures",
                    "slug"
                ]
            },
            "PcrPrimer": {
                "type": "object",
                "description": "Class PcrPrimer.",
                "required": [
                    "sequence",
                    "name",
                    "slug"
                ],
                "properties": {
                    "sequence": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "slugAndSequence": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "PcrPrimer.jsonld": {
                "type": "object",
                "description": "Class PcrPrimer.",
                "required": [
                    "sequence",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "sequence": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "slugAndSequence": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Permission": {
                "type": "object",
                "description": "Class Permission.",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "uniqueItems": true,
                        "type": "string"
                    },
                    "iri": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "isGranted": {
                        "type": "boolean"
                    }
                }
            },
            "Permission.jsonld": {
                "type": "object",
                "description": "Class Permission.",
                "required": [
                    "id"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "uniqueItems": true,
                        "type": "string"
                    },
                    "iri": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "isGranted": {
                        "type": "boolean"
                    }
                }
            },
            "Person": {
                "type": "object",
                "description": "Class Person.",
                "properties": {
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "slug"
                ]
            },
            "Person.jsonld": {
                "type": "object",
                "description": "Class Person.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "firstname",
                    "lastname",
                    "email",
                    "slug"
                ]
            },
            "PersonalAccessToken": {
                "type": "object",
                "description": "",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "revokedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastUsedAt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "useCount": {
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "PersonalAccessToken.CreatePersonalAccessToken": {
                "type": "object",
                "description": "",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "PersonalAccessToken.CreatePersonalAccessToken.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "PersonalAccessToken.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string"
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "revokedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastUsedAt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "useCount": {
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                    },
                    "valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "PhysicalState": {
                "type": "object",
                "description": "Class PhysicalState.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "PhysicalState.jsonld": {
                "type": "object",
                "description": "Class PhysicalState.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "PrimerType": {
                "type": "object",
                "description": "Class PrimerType.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "PrimerType.jsonld": {
                "type": "object",
                "description": "Class PrimerType.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Process": {
                "type": "object",
                "description": "Class Process.",
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name"
                ],
                "properties": {
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Process.jsonld": {
                "type": "object",
                "description": "Class Process.",
                "required": [
                    "processCategory",
                    "site",
                    "slug",
                    "project",
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "processCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "siteName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "longSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "parentSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parentId": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "monitoredMeasureTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "ProcessCategory": {
                "type": "object",
                "description": "Class ProcessCategory.",
                "properties": {
                    "processSlug": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "instanciable": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "processCategoryTree": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ProcessCategory.jsonld": {
                "type": "object",
                "description": "Class ProcessCategory.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "processSlug": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "instanciable": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "processCategoryTree": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Project": {
                "type": "object",
                "description": "Class Project.",
                "required": [
                    "participants",
                    "startDate",
                    "coordinator",
                    "contact",
                    "name",
                    "slug"
                ],
                "properties": {
                    "participants": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "participantsDisplayName": {
                        "readOnly": true,
                        "description": "Get Participant DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allParticipants": {
                        "readOnly": true,
                        "description": "Get Participants + Contact + Coordinator.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "observers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "observersDisplayName": {
                        "readOnly": true,
                        "description": "Get Observer DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "experimentalSeries": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "campaigns": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "coordinator": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "coordinatorDisplayName": {
                        "readOnly": true,
                        "description": "Get coordinator displayName.",
                        "type": "string"
                    },
                    "contact": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "contactDisplayName": {
                        "readOnly": true,
                        "description": "Get contact displayName.",
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "articles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "reference": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Project.ImportReport": {
                "type": "object",
                "description": "Class Project.",
                "properties": {
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Project.ImportReport.jsonld": {
                "type": "object",
                "description": "Class Project.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError.jsonld"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Project.jsonld": {
                "type": "object",
                "description": "Class Project.",
                "required": [
                    "participants",
                    "startDate",
                    "coordinator",
                    "contact",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "participants": {
                        "minItems": "1",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "participantsDisplayName": {
                        "readOnly": true,
                        "description": "Get Participant DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allParticipants": {
                        "readOnly": true,
                        "description": "Get Participants + Contact + Coordinator.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "observers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "observersDisplayName": {
                        "readOnly": true,
                        "description": "Get Observer DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "experimentalSeries": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "campaigns": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "coordinator": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "coordinatorDisplayName": {
                        "readOnly": true,
                        "description": "Get coordinator displayName.",
                        "type": "string"
                    },
                    "contact": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "contactDisplayName": {
                        "readOnly": true,
                        "description": "Get contact displayName.",
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "samples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "articles": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "reference": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "tags": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "tagsName": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Reactor": {
                "type": "object",
                "description": "Class Reactor.",
                "required": [
                    "experimentalSeries",
                    "dimensions",
                    "slug"
                ],
                "properties": {
                    "experimentalSeries": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operation": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "compartments": {
                        "description": "| Collection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compartment"
                        }
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "containerShape": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "membranes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membrane"
                        }
                    },
                    "typeOfOperation": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "replicates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReactorReplicate"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Reactor.jsonld": {
                "type": "object",
                "description": "Class Reactor.",
                "required": [
                    "experimentalSeries",
                    "dimensions",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "experimentalSeries": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "operation": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "compartments": {
                        "description": "| Collection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Compartment.jsonld"
                        }
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "containerShape": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "membranes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membrane.jsonld"
                        }
                    },
                    "typeOfOperation": {
                        "description": "| null",
                        "type": "string",
                        "nullable": true
                    },
                    "allLocations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "replicates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReactorReplicate.jsonld"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "ReactorReplicate": {
                "type": "object",
                "description": "Class ReactorReplicate.",
                "required": [
                    "startDate",
                    "reactor",
                    "slug"
                ],
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompartmentReplicate"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "ReactorReplicate.jsonld": {
                "type": "object",
                "description": "Class ReactorReplicate.",
                "required": [
                    "startDate",
                    "reactor",
                    "slug"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "reactor": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompartmentReplicate.jsonld"
                        }
                    },
                    "measurements": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "RealResidualHouseholdWaste": {
                "type": "object",
                "description": "Class RealResidualHouseholdWaste\nhttps://stratus.irstea.fr/lib/51a5ae2f-ddef-44ca-b1dd-e6f052a56834/file/03%20Doc%20R%C3%A9alisation/01%20Doc%20Sp%C3%A9cifications/Inputs/Inputs%20-%20masques%20de%20saisie%20et%20champs.xlsx\nTemplate G.",
                "properties": {
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "collectionDate": {
                        "description": "Date of sampling of the waste.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "description": "Name of the company.",
                        "type": "string",
                        "nullable": true
                    },
                    "companyActivity": {
                        "description": "Activity of the company.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "modecoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Modecom"
                        }
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "modecoms"
                ]
            },
            "RealResidualHouseholdWaste.jsonld": {
                "type": "object",
                "description": "Class RealResidualHouseholdWaste\nhttps://stratus.irstea.fr/lib/51a5ae2f-ddef-44ca-b1dd-e6f052a56834/file/03%20Doc%20R%C3%A9alisation/01%20Doc%20Sp%C3%A9cifications/Inputs/Inputs%20-%20masques%20de%20saisie%20et%20champs.xlsx\nTemplate G.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "collectionDate": {
                        "description": "Date of sampling of the waste.",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "companyName": {
                        "description": "Name of the company.",
                        "type": "string",
                        "nullable": true
                    },
                    "companyActivity": {
                        "description": "Activity of the company.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "modecoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Modecom.jsonld"
                        }
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "modecoms"
                ]
            },
            "ReconstituedReferenceName": {
                "type": "object",
                "description": "Class ReconstitutuedReferenceName.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReconstituedReferenceName.jsonld": {
                "type": "object",
                "description": "Class ReconstitutuedReferenceName.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReconstitutedHouseholdWaste": {
                "type": "object",
                "description": "Class ReconstitutedHouseholdWaste.",
                "properties": {
                    "referenceName": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "recipe": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "modecoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Modecom"
                        }
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "modecoms"
                ]
            },
            "ReconstitutedHouseholdWaste.jsonld": {
                "type": "object",
                "description": "Class ReconstitutedHouseholdWaste.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "referenceName": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "recipe": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "modecoms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Modecom.jsonld"
                        }
                    },
                    "year": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name",
                    "modecoms"
                ]
            },
            "RelevantElectronicResource": {
                "type": "object",
                "description": "Class RelevantElectronicResource.",
                "required": [
                    "project",
                    "name",
                    "slug"
                ],
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "urlOrDoiNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "RelevantElectronicResource.jsonld": {
                "type": "object",
                "description": "Class RelevantElectronicResource.",
                "required": [
                    "project",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "urlOrDoiNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Sample": {
                "type": "object",
                "description": "Class Sample.",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "Sample.jsonld": {
                "type": "object",
                "description": "Class Sample.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "SampleInput": {
                "type": "object",
                "description": "Class SampleInput.",
                "properties": {
                    "input": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "inputSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "SampleInput.jsonld": {
                "type": "object",
                "description": "Class SampleInput.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "input": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "inputSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "typeLabel": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "locationDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "sequencingSamples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencingRunSlug": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "displaySampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "operator": {
                        "description": "Operator for the event.",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "locationSlug": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "date",
                    "slug"
                ]
            },
            "SampleResult": {
                "type": "object",
                "description": "Class SampleResult.",
                "required": [
                    "sequencingSample",
                    "metabarcodingBioinformaticRun"
                ],
                "properties": {
                    "sequencingSample": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySequencingSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displaySample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "metabarcodingBioinformaticRun": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayMetabarcodingBioinformaticRun": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayBioinformaticWorkflow": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "annotations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "numberOfRawReads": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "postProcessReads": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "numberOfASV": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "totalAnnotationCount": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "SampleResult.jsonld": {
                "type": "object",
                "description": "Class SampleResult.",
                "required": [
                    "sequencingSample",
                    "metabarcodingBioinformaticRun"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "sequencingSample": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySequencingSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displaySample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "metabarcodingBioinformaticRun": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayMetabarcodingBioinformaticRun": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "displayBioinformaticWorkflow": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "annotations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "numberOfRawReads": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "postProcessReads": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "numberOfASV": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "totalAnnotationCount": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Sequencer": {
                "type": "object",
                "description": "Class Sequencer.",
                "properties": {
                    "sequencingCenter": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sequencerModel": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Sequencer.jsonld": {
                "type": "object",
                "description": "Class Sequencer.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "sequencingCenter": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sequencerModel": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SequencerModel": {
                "type": "object",
                "description": "Class SequencerModel.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SequencerModel.jsonld": {
                "type": "object",
                "description": "Class SequencerModel.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SequencingCenter": {
                "type": "object",
                "description": "Class SequencingCenter.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SequencingCenter.jsonld": {
                "type": "object",
                "description": "Class SequencingCenter.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SequencingProcedure": {
                "type": "object",
                "description": "Class SequencingProcedure.",
                "properties": {
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "SequencingProcedure.jsonld": {
                "type": "object",
                "description": "Class SequencingProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "SequencingRun": {
                "type": "object",
                "description": "Class SequencingRun.",
                "properties": {
                    "samples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencer": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "finished"
                        ],
                        "type": "string"
                    },
                    "run": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "sequencingProcedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "files": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "sequencingProcedureDisplaySlug": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "sequencerDisplayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "userDisplayName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "samplesCount": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "sequencer",
                    "run",
                    "project"
                ]
            },
            "SequencingRun.ImportReport": {
                "type": "object",
                "description": "Class SequencingRun.",
                "properties": {
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SequencingRun.ImportReport.jsonld": {
                "type": "object",
                "description": "Class SequencingRun.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "success",
                        "example": "success",
                        "type": "string"
                    },
                    "subject": {
                        "readOnly": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportError.jsonld"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "editions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deletions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "untouched": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SequencingRun.jsonld": {
                "type": "object",
                "description": "Class SequencingRun.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "samples": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "sequencer": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "finished"
                        ],
                        "type": "string"
                    },
                    "run": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "sequencingProcedure": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "files": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "sequencingProcedureDisplaySlug": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "sequencerDisplayName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "userDisplayName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "samplesCount": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "sequencer",
                    "run",
                    "project"
                ]
            },
            "SequencingSample": {
                "type": "object",
                "description": "Class SequencingSample.",
                "properties": {
                    "sequencingRun": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sample": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "pcrPrimers": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayPcrPrimers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matrixType": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayMatrixType": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "nucleicAcid": {
                        "$ref": "#/components/schemas/NucleicAcid"
                    },
                    "targetedGeneOrGenomicRegion": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayTargetedGeneOrGenomicRegion": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "taxonomicOrFunctionalGroups": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayTaxonomicOrFunctionalGroups": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "targetSubfragments": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displaySubfragments": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sequencingSampleComplement": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SequencingSampleComplement"
                            }
                        ],
                        "nullable": true
                    },
                    "sequencingSampleResult": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SequencingSampleResult"
                            }
                        ],
                        "nullable": true
                    },
                    "sampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "theBestSampleResult": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "correctTargetSubfragmentsMandatory": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "libraryLayoutSlug": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "resultFilename": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "resultReverseFilename": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "nucleicAcid",
                    "targetedGeneOrGenomicRegion",
                    "measures",
                    "slug"
                ]
            },
            "SequencingSample.jsonld": {
                "type": "object",
                "description": "Class SequencingSample.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sequencingRun": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "sample": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "pcrPrimers": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayPcrPrimers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "matrixType": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayMatrixType": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "nucleicAcid": {
                        "$ref": "#/components/schemas/NucleicAcid.jsonld"
                    },
                    "targetedGeneOrGenomicRegion": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayTargetedGeneOrGenomicRegion": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "taxonomicOrFunctionalGroups": {
                        "minItems": "1",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayTaxonomicOrFunctionalGroups": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "targetSubfragments": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displaySubfragments": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sequencingSampleComplement": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SequencingSampleComplement.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "sequencingSampleResult": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SequencingSampleResult.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "sampleResults": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "theBestSampleResult": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "correctTargetSubfragmentsMandatory": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "libraryLayoutSlug": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "resultFilename": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "resultReverseFilename": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "nucleicAcid",
                    "targetedGeneOrGenomicRegion",
                    "measures",
                    "slug"
                ]
            },
            "SequencingSampleComplement": {
                "type": "object",
                "description": "Class SequencingSampleComplement.",
                "properties": {
                    "nuclAcidAmp": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "pcrCond": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "library": {
                        "$ref": "#/components/schemas/Library"
                    },
                    "seqReadLength": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "mids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultiplexIdentifier"
                        }
                    },
                    "displayMids": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "adapters": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayAdapters": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayUrls": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sops": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displaySops": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "library"
                ]
            },
            "SequencingSampleComplement.jsonld": {
                "type": "object",
                "description": "Class SequencingSampleComplement.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "nuclAcidAmp": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "pcrCond": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "library": {
                        "$ref": "#/components/schemas/Library.jsonld"
                    },
                    "seqReadLength": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "mids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultiplexIdentifier.jsonld"
                        }
                    },
                    "displayMids": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "adapters": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayAdapters": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displayUrls": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sops": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "displaySops": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                },
                "required": [
                    "library"
                ]
            },
            "SequencingSampleResult": {
                "type": "object",
                "description": "Class SequencingSampleResult.",
                "properties": {
                    "submittedToInsdc": {
                        "type": "boolean"
                    },
                    "accession": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "reverseFileName": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "libReadsSeqd": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "meanRawReadLength": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "nullable": true
                    },
                    "correctAccession": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "SequencingSampleResult.jsonld": {
                "type": "object",
                "description": "Class SequencingSampleResult.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "submittedToInsdc": {
                        "type": "boolean"
                    },
                    "accession": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "reverseFileName": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "libReadsSeqd": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "meanRawReadLength": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "nullable": true
                    },
                    "correctAccession": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Site": {
                "type": "object",
                "description": "Class Site.",
                "required": [
                    "project",
                    "operators",
                    "name",
                    "slug"
                ],
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "processes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "campaigns": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "syndicate": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "coordinates": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Site.jsonld": {
                "type": "object",
                "description": "Class Site.",
                "required": [
                    "project",
                    "operators",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "processes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "operatorsDisplayName": {
                        "readOnly": true,
                        "description": "Get Operators DisplayNames.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "campaigns": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "syndicate": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "coordinates": {
                        "type": "string",
                        "nullable": true
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Software": {
                "type": "object",
                "description": "Class Software.",
                "required": [
                    "softwareName",
                    "name",
                    "slug"
                ],
                "properties": {
                    "softwareName": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySoftwareName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "parameters": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "Software.ReportSafeDelete": {
                "type": "object",
                "description": "Class Software.",
                "properties": {
                    "status": {
                        "default": "warning",
                        "example": "warning",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer"
                    }
                }
            },
            "Software.ReportSafeDelete.jsonld": {
                "type": "object",
                "description": "Class Software.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "status": {
                        "default": "warning",
                        "example": "warning",
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer"
                    }
                }
            },
            "Software.jsonld": {
                "type": "object",
                "description": "Class Software.",
                "required": [
                    "softwareName",
                    "name",
                    "slug"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "softwareName": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displaySoftwareName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true
                    },
                    "parameters": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "correctStatusAndProject": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                }
            },
            "SoftwareName": {
                "type": "object",
                "description": "Class SoftwareName.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "SoftwareName.jsonld": {
                "type": "object",
                "description": "Class SoftwareName.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "StandardOperatingProcedure": {
                "type": "object",
                "description": "Class StandardOperatingProcedure.",
                "properties": {
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "StandardOperatingProcedure.jsonld": {
                "type": "object",
                "description": "Class StandardOperatingProcedure.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "canDelete": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "document": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "linkOrDOIOrDocumentNotNull": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "onlyUrlOrDOIO": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "doi": {
                        "minLength": 2,
                        "maxLength": 255,
                        "pattern": "^(10[.][0-9]{4,}.*)$",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "externalDocs": {
                            "url": "http://schema.org/url"
                        },
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "project",
                    "name",
                    "slug"
                ]
            },
            "Support": {
                "type": "object",
                "description": "Class Support.",
                "properties": {
                    "material": {
                        "description": "material",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "Support.jsonld": {
                "type": "object",
                "description": "Class Support.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "material": {
                        "description": "material",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                },
                "required": [
                    "measures"
                ]
            },
            "SupportMaterial": {
                "type": "object",
                "description": "Class SupportMaterial.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SupportMaterial.jsonld": {
                "type": "object",
                "description": "Class SupportMaterial.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SyntheticMedium": {
                "type": "object",
                "description": "Class SyntheticMedium.",
                "properties": {
                    "ph": {
                        "description": "Usual pH of the synthetic medium.",
                        "type": "number",
                        "nullable": true
                    },
                    "carbonateAdded": {
                        "description": "Indicate whether carbonates were also added to the medium.",
                        "type": "boolean"
                    },
                    "genericName": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "recipe": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File"
                            }
                        ],
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "SyntheticMedium.jsonld": {
                "type": "object",
                "description": "Class SyntheticMedium.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "ph": {
                        "description": "Usual pH of the synthetic medium.",
                        "type": "number",
                        "nullable": true
                    },
                    "carbonateAdded": {
                        "description": "Indicate whether carbonates were also added to the medium.",
                        "type": "boolean"
                    },
                    "genericName": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "recipe": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/File.jsonld"
                            }
                        ],
                        "nullable": true
                    },
                    "descriptionForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "inputCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "project": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "samples": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File.jsonld"
                        }
                    },
                    "slugForSample": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "comments": {
                        "description": "Additional information.",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "inputCategory",
                    "project",
                    "measures",
                    "name"
                ]
            },
            "Tag": {
                "type": "object",
                "description": "Class Tag.",
                "properties": {
                    "deprecated": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isDeprecated": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Tag.jsonld": {
                "type": "object",
                "description": "Class Tag.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deprecated": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isDeprecated": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetSubfragment": {
                "type": "object",
                "description": "Class TargetSubfragment.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetSubfragment.jsonld": {
                "type": "object",
                "description": "Class TargetSubfragment.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetedGeneOrGenomicRegion": {
                "type": "object",
                "description": "Class TargetedGeneOrGenomicRegion.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetedGeneOrGenomicRegion.jsonld": {
                "type": "object",
                "description": "Class TargetedGeneOrGenomicRegion.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetedTaxonomicOrFunctionalGroup": {
                "type": "object",
                "description": "Class TargetedTaxonomicOrFunctionalGroup.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "TargetedTaxonomicOrFunctionalGroup.jsonld": {
                "type": "object",
                "description": "Class TargetedTaxonomicOrFunctionalGroup.",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Taxonomy": {
                "type": "object",
                "description": "Class Taxonomy.",
                "required": [
                    "kingdom",
                    "phylum",
                    "class",
                    "order",
                    "family"
                ],
                "properties": {
                    "kingdom": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "phylum": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "class": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "order": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "family": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "genus": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "species": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Taxonomy.jsonld": {
                "type": "object",
                "description": "Class Taxonomy.",
                "required": [
                    "kingdom",
                    "phylum",
                    "class",
                    "order",
                    "family"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "kingdom": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "phylum": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "class": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "order": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "family": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "genus": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "species": {
                        "minLength": 1,
                        "maxLength": 255,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    }
                }
            },
            "Temperature": {
                "type": "object",
                "description": "Class Temperature.",
                "required": [
                    "temperatureCategory",
                    "measures"
                ],
                "properties": {
                    "temperatureCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "regulation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure"
                        }
                    }
                }
            },
            "Temperature.jsonld": {
                "type": "object",
                "description": "Class Temperature.",
                "required": [
                    "temperatureCategory",
                    "measures"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "temperatureCategory": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "regulation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "measures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Measure.jsonld"
                        }
                    }
                }
            },
            "TemperatureCategory": {
                "type": "object",
                "description": "Class TemperatureCategory.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TemperatureCategory.jsonld": {
                "type": "object",
                "description": "Class TemperatureCategory.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Unit": {
                "type": "object",
                "description": "",
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "measureTypes": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Unit.jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "symbol": {
                        "type": "string"
                    },
                    "measureTypes": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Usage": {
                "type": "object",
                "description": "Class Usage.",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "Usage.jsonld": {
                "type": "object",
                "description": "Class Usage.",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "format": "uuid",
                        "readOnly": true,
                        "description": "Attention : il faut laisser le chemin complet vers \\Ramsey\\Uuid\\UuidInterface ci-dessous (voir ticket #158)",
                        "externalDocs": {
                            "url": "http://schema.org/identifier"
                        },
                        "type": "string"
                    },
                    "name": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    },
                    "slug": {
                        "minLength": 2,
                        "maxLength": 255,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "slug"
                ]
            },
            "User": {
                "type": "object",
                "description": "",
                "required": [
                    "person"
                ],
                "properties": {
                    "person": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "admin": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "personalAccessTokens": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            },
            "User.Permission": {
                "type": "object",
                "description": "",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "uniqueItems": true,
                        "type": "string"
                    },
                    "iri": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "isGranted": {
                        "type": "boolean"
                    }
                }
            },
            "User.Permission.jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "id"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "uniqueItems": true,
                        "type": "string"
                    },
                    "iri": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "isGranted": {
                        "type": "boolean"
                    }
                }
            },
            "User.jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "person"
                ],
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "@vocab": {
                                        "type": "string"
                                    },
                                    "hydra": {
                                        "type": "string",
                                        "enum": [
                                            "http://www.w3.org/ns/hydra/core#"
                                        ]
                                    }
                                },
                                "required": [
                                    "@vocab",
                                    "hydra"
                                ],
                                "additionalProperties": true
                            }
                        ]
                    },
                    "person": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "admin": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "personalAccessTokens": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    }
                }
            }
        },
        "responses": {},
        "parameters": {},
        "examples": {},
        "requestBodies": {},
        "headers": {},
        "securitySchemes": {
            "JWT": {
                "type": "apiKey",
                "description": "Value for the Authorization header parameter.",
                "name": "Authorization",
                "in": "header"
            },
            "PersonalAccessToken": {
                "type": "apiKey",
                "description": "Value for the Authorization header parameter.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "JWT": []
        },
        {
            "PersonalAccessToken": []
        }
    ],
    "tags": []
}